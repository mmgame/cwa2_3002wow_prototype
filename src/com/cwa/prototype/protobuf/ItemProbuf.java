// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemProbuf.proto

package com.cwa.prototype.protobuf;

public final class ItemProbuf {
  private ItemProbuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 道具编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 道具编号
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 道具名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 道具名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 道具名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string desc = 3;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // required int32 itemType = 4;
    /**
     * <code>required int32 itemType = 4;</code>
     *
     * <pre>
     * 道具类型
     * </pre>
     */
    boolean hasItemType();
    /**
     * <code>required int32 itemType = 4;</code>
     *
     * <pre>
     * 道具类型
     * </pre>
     */
    int getItemType();

    // required int32 isUse = 5;
    /**
     * <code>required int32 isUse = 5;</code>
     *
     * <pre>
     * 是否可以使用
     * </pre>
     */
    boolean hasIsUse();
    /**
     * <code>required int32 isUse = 5;</code>
     *
     * <pre>
     * 是否可以使用
     * </pre>
     */
    int getIsUse();

    // required int32 requireRoleLevel = 6;
    /**
     * <code>required int32 requireRoleLevel = 6;</code>
     *
     * <pre>
     * 玩家等级限制（使用）
     * </pre>
     */
    boolean hasRequireRoleLevel();
    /**
     * <code>required int32 requireRoleLevel = 6;</code>
     *
     * <pre>
     * 玩家等级限制（使用）
     * </pre>
     */
    int getRequireRoleLevel();

    // required int32 holdMaxCount = 7;
    /**
     * <code>required int32 holdMaxCount = 7;</code>
     *
     * <pre>
     * 可持有最大数量
     * </pre>
     */
    boolean hasHoldMaxCount();
    /**
     * <code>required int32 holdMaxCount = 7;</code>
     *
     * <pre>
     * 可持有最大数量
     * </pre>
     */
    int getHoldMaxCount();

    // required int32 qualit = 8;
    /**
     * <code>required int32 qualit = 8;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    boolean hasQualit();
    /**
     * <code>required int32 qualit = 8;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    int getQualit();

    // required int32 price = 9;
    /**
     * <code>required int32 price = 9;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    boolean hasPrice();
    /**
     * <code>required int32 price = 9;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    int getPrice();

    // required string itemImage = 10;
    /**
     * <code>required string itemImage = 10;</code>
     *
     * <pre>
     * 道具图片
     * </pre>
     */
    boolean hasItemImage();
    /**
     * <code>required string itemImage = 10;</code>
     *
     * <pre>
     * 道具图片
     * </pre>
     */
    java.lang.String getItemImage();
    /**
     * <code>required string itemImage = 10;</code>
     *
     * <pre>
     * 道具图片
     * </pre>
     */
    com.google.protobuf.ByteString
        getItemImageBytes();
  }
  /**
   * Protobuf type {@code Item}
   */
  public static final class Item extends
      com.google.protobuf.GeneratedMessage
      implements ItemOrBuilder {
    // Use Item.newBuilder() to construct.
    private Item(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Item(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Item defaultInstance;
    public static Item getDefaultInstance() {
      return defaultInstance;
    }

    public Item getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Item(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              desc_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              itemType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              isUse_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              requireRoleLevel_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              holdMaxCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              qualit_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              price_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              itemImage_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_Item_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_Item_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.ItemProbuf.Item.class, com.cwa.prototype.protobuf.ItemProbuf.Item.Builder.class);
    }

    public static com.google.protobuf.Parser<Item> PARSER =
        new com.google.protobuf.AbstractParser<Item>() {
      public Item parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Item(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Item> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 道具编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 道具编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 道具名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 道具名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 道具名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string desc = 3;
    public static final int DESC_FIELD_NUMBER = 3;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 itemType = 4;
    public static final int ITEMTYPE_FIELD_NUMBER = 4;
    private int itemType_;
    /**
     * <code>required int32 itemType = 4;</code>
     *
     * <pre>
     * 道具类型
     * </pre>
     */
    public boolean hasItemType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 itemType = 4;</code>
     *
     * <pre>
     * 道具类型
     * </pre>
     */
    public int getItemType() {
      return itemType_;
    }

    // required int32 isUse = 5;
    public static final int ISUSE_FIELD_NUMBER = 5;
    private int isUse_;
    /**
     * <code>required int32 isUse = 5;</code>
     *
     * <pre>
     * 是否可以使用
     * </pre>
     */
    public boolean hasIsUse() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 isUse = 5;</code>
     *
     * <pre>
     * 是否可以使用
     * </pre>
     */
    public int getIsUse() {
      return isUse_;
    }

    // required int32 requireRoleLevel = 6;
    public static final int REQUIREROLELEVEL_FIELD_NUMBER = 6;
    private int requireRoleLevel_;
    /**
     * <code>required int32 requireRoleLevel = 6;</code>
     *
     * <pre>
     * 玩家等级限制（使用）
     * </pre>
     */
    public boolean hasRequireRoleLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 requireRoleLevel = 6;</code>
     *
     * <pre>
     * 玩家等级限制（使用）
     * </pre>
     */
    public int getRequireRoleLevel() {
      return requireRoleLevel_;
    }

    // required int32 holdMaxCount = 7;
    public static final int HOLDMAXCOUNT_FIELD_NUMBER = 7;
    private int holdMaxCount_;
    /**
     * <code>required int32 holdMaxCount = 7;</code>
     *
     * <pre>
     * 可持有最大数量
     * </pre>
     */
    public boolean hasHoldMaxCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 holdMaxCount = 7;</code>
     *
     * <pre>
     * 可持有最大数量
     * </pre>
     */
    public int getHoldMaxCount() {
      return holdMaxCount_;
    }

    // required int32 qualit = 8;
    public static final int QUALIT_FIELD_NUMBER = 8;
    private int qualit_;
    /**
     * <code>required int32 qualit = 8;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    public boolean hasQualit() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 qualit = 8;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    public int getQualit() {
      return qualit_;
    }

    // required int32 price = 9;
    public static final int PRICE_FIELD_NUMBER = 9;
    private int price_;
    /**
     * <code>required int32 price = 9;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 price = 9;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    public int getPrice() {
      return price_;
    }

    // required string itemImage = 10;
    public static final int ITEMIMAGE_FIELD_NUMBER = 10;
    private java.lang.Object itemImage_;
    /**
     * <code>required string itemImage = 10;</code>
     *
     * <pre>
     * 道具图片
     * </pre>
     */
    public boolean hasItemImage() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required string itemImage = 10;</code>
     *
     * <pre>
     * 道具图片
     * </pre>
     */
    public java.lang.String getItemImage() {
      java.lang.Object ref = itemImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          itemImage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string itemImage = 10;</code>
     *
     * <pre>
     * 道具图片
     * </pre>
     */
    public com.google.protobuf.ByteString
        getItemImageBytes() {
      java.lang.Object ref = itemImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      desc_ = "";
      itemType_ = 0;
      isUse_ = 0;
      requireRoleLevel_ = 0;
      holdMaxCount_ = 0;
      qualit_ = 0;
      price_ = 0;
      itemImage_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsUse()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireRoleLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHoldMaxCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQualit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemImage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, itemType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, isUse_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, requireRoleLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, holdMaxCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, qualit_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, price_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getItemImageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, itemType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, isUse_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, requireRoleLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, holdMaxCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, qualit_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, price_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getItemImageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.Item parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.ItemProbuf.Item prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Item}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.ItemProbuf.ItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_Item_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_Item_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.ItemProbuf.Item.class, com.cwa.prototype.protobuf.ItemProbuf.Item.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.ItemProbuf.Item.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        itemType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        isUse_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        requireRoleLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        holdMaxCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        qualit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        price_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        itemImage_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_Item_descriptor;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.Item getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.Item.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.ItemProbuf.Item build() {
        com.cwa.prototype.protobuf.ItemProbuf.Item result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.Item buildPartial() {
        com.cwa.prototype.protobuf.ItemProbuf.Item result = new com.cwa.prototype.protobuf.ItemProbuf.Item(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.itemType_ = itemType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isUse_ = isUse_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.requireRoleLevel_ = requireRoleLevel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.holdMaxCount_ = holdMaxCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.qualit_ = qualit_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.itemImage_ = itemImage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.ItemProbuf.Item) {
          return mergeFrom((com.cwa.prototype.protobuf.ItemProbuf.Item)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.ItemProbuf.Item other) {
        if (other == com.cwa.prototype.protobuf.ItemProbuf.Item.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000004;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasItemType()) {
          setItemType(other.getItemType());
        }
        if (other.hasIsUse()) {
          setIsUse(other.getIsUse());
        }
        if (other.hasRequireRoleLevel()) {
          setRequireRoleLevel(other.getRequireRoleLevel());
        }
        if (other.hasHoldMaxCount()) {
          setHoldMaxCount(other.getHoldMaxCount());
        }
        if (other.hasQualit()) {
          setQualit(other.getQualit());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasItemImage()) {
          bitField0_ |= 0x00000200;
          itemImage_ = other.itemImage_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        if (!hasItemType()) {
          
          return false;
        }
        if (!hasIsUse()) {
          
          return false;
        }
        if (!hasRequireRoleLevel()) {
          
          return false;
        }
        if (!hasHoldMaxCount()) {
          
          return false;
        }
        if (!hasQualit()) {
          
          return false;
        }
        if (!hasPrice()) {
          
          return false;
        }
        if (!hasItemImage()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.ItemProbuf.Item parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.ItemProbuf.Item) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 道具编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 道具编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 道具编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 道具编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 道具名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 道具名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 道具名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 道具名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 道具名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 道具名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string desc = 3;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }

      // required int32 itemType = 4;
      private int itemType_ ;
      /**
       * <code>required int32 itemType = 4;</code>
       *
       * <pre>
       * 道具类型
       * </pre>
       */
      public boolean hasItemType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 itemType = 4;</code>
       *
       * <pre>
       * 道具类型
       * </pre>
       */
      public int getItemType() {
        return itemType_;
      }
      /**
       * <code>required int32 itemType = 4;</code>
       *
       * <pre>
       * 道具类型
       * </pre>
       */
      public Builder setItemType(int value) {
        bitField0_ |= 0x00000008;
        itemType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemType = 4;</code>
       *
       * <pre>
       * 道具类型
       * </pre>
       */
      public Builder clearItemType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        itemType_ = 0;
        onChanged();
        return this;
      }

      // required int32 isUse = 5;
      private int isUse_ ;
      /**
       * <code>required int32 isUse = 5;</code>
       *
       * <pre>
       * 是否可以使用
       * </pre>
       */
      public boolean hasIsUse() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 isUse = 5;</code>
       *
       * <pre>
       * 是否可以使用
       * </pre>
       */
      public int getIsUse() {
        return isUse_;
      }
      /**
       * <code>required int32 isUse = 5;</code>
       *
       * <pre>
       * 是否可以使用
       * </pre>
       */
      public Builder setIsUse(int value) {
        bitField0_ |= 0x00000010;
        isUse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 isUse = 5;</code>
       *
       * <pre>
       * 是否可以使用
       * </pre>
       */
      public Builder clearIsUse() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isUse_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireRoleLevel = 6;
      private int requireRoleLevel_ ;
      /**
       * <code>required int32 requireRoleLevel = 6;</code>
       *
       * <pre>
       * 玩家等级限制（使用）
       * </pre>
       */
      public boolean hasRequireRoleLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 requireRoleLevel = 6;</code>
       *
       * <pre>
       * 玩家等级限制（使用）
       * </pre>
       */
      public int getRequireRoleLevel() {
        return requireRoleLevel_;
      }
      /**
       * <code>required int32 requireRoleLevel = 6;</code>
       *
       * <pre>
       * 玩家等级限制（使用）
       * </pre>
       */
      public Builder setRequireRoleLevel(int value) {
        bitField0_ |= 0x00000020;
        requireRoleLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireRoleLevel = 6;</code>
       *
       * <pre>
       * 玩家等级限制（使用）
       * </pre>
       */
      public Builder clearRequireRoleLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        requireRoleLevel_ = 0;
        onChanged();
        return this;
      }

      // required int32 holdMaxCount = 7;
      private int holdMaxCount_ ;
      /**
       * <code>required int32 holdMaxCount = 7;</code>
       *
       * <pre>
       * 可持有最大数量
       * </pre>
       */
      public boolean hasHoldMaxCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 holdMaxCount = 7;</code>
       *
       * <pre>
       * 可持有最大数量
       * </pre>
       */
      public int getHoldMaxCount() {
        return holdMaxCount_;
      }
      /**
       * <code>required int32 holdMaxCount = 7;</code>
       *
       * <pre>
       * 可持有最大数量
       * </pre>
       */
      public Builder setHoldMaxCount(int value) {
        bitField0_ |= 0x00000040;
        holdMaxCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 holdMaxCount = 7;</code>
       *
       * <pre>
       * 可持有最大数量
       * </pre>
       */
      public Builder clearHoldMaxCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        holdMaxCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 qualit = 8;
      private int qualit_ ;
      /**
       * <code>required int32 qualit = 8;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public boolean hasQualit() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 qualit = 8;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public int getQualit() {
        return qualit_;
      }
      /**
       * <code>required int32 qualit = 8;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public Builder setQualit(int value) {
        bitField0_ |= 0x00000080;
        qualit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 qualit = 8;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public Builder clearQualit() {
        bitField0_ = (bitField0_ & ~0x00000080);
        qualit_ = 0;
        onChanged();
        return this;
      }

      // required int32 price = 9;
      private int price_ ;
      /**
       * <code>required int32 price = 9;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 price = 9;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public int getPrice() {
        return price_;
      }
      /**
       * <code>required int32 price = 9;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public Builder setPrice(int value) {
        bitField0_ |= 0x00000100;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 price = 9;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000100);
        price_ = 0;
        onChanged();
        return this;
      }

      // required string itemImage = 10;
      private java.lang.Object itemImage_ = "";
      /**
       * <code>required string itemImage = 10;</code>
       *
       * <pre>
       * 道具图片
       * </pre>
       */
      public boolean hasItemImage() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required string itemImage = 10;</code>
       *
       * <pre>
       * 道具图片
       * </pre>
       */
      public java.lang.String getItemImage() {
        java.lang.Object ref = itemImage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          itemImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string itemImage = 10;</code>
       *
       * <pre>
       * 道具图片
       * </pre>
       */
      public com.google.protobuf.ByteString
          getItemImageBytes() {
        java.lang.Object ref = itemImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string itemImage = 10;</code>
       *
       * <pre>
       * 道具图片
       * </pre>
       */
      public Builder setItemImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        itemImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string itemImage = 10;</code>
       *
       * <pre>
       * 道具图片
       * </pre>
       */
      public Builder clearItemImage() {
        bitField0_ = (bitField0_ & ~0x00000200);
        itemImage_ = getDefaultInstance().getItemImage();
        onChanged();
        return this;
      }
      /**
       * <code>required string itemImage = 10;</code>
       *
       * <pre>
       * 道具图片
       * </pre>
       */
      public Builder setItemImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        itemImage_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Item)
    }

    static {
      defaultInstance = new Item(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Item)
  }

  public interface BoxItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 宝箱keyId
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 宝箱keyId
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 宝箱名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 宝箱名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 宝箱名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string desc = 3;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // repeated int32 countList = 4;
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getCountListList();
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    int getCountListCount();
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    int getCountList(int index);

    // repeated int32 countRatiosList = 5;
    /**
     * <code>repeated int32 countRatiosList = 5;</code>
     *
     * <pre>
     * 掉落几率
     * </pre>
     */
    java.util.List<java.lang.Integer> getCountRatiosListList();
    /**
     * <code>repeated int32 countRatiosList = 5;</code>
     *
     * <pre>
     * 掉落几率
     * </pre>
     */
    int getCountRatiosListCount();
    /**
     * <code>repeated int32 countRatiosList = 5;</code>
     *
     * <pre>
     * 掉落几率
     * </pre>
     */
    int getCountRatiosList(int index);

    // repeated int32 itemBooksList = 6;
    /**
     * <code>repeated int32 itemBooksList = 6;</code>
     *
     * <pre>
     * 物品类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getItemBooksListList();
    /**
     * <code>repeated int32 itemBooksList = 6;</code>
     *
     * <pre>
     * 物品类型
     * </pre>
     */
    int getItemBooksListCount();
    /**
     * <code>repeated int32 itemBooksList = 6;</code>
     *
     * <pre>
     * 物品类型
     * </pre>
     */
    int getItemBooksList(int index);

    // repeated int32 itemBooksRatiosList = 7;
    /**
     * <code>repeated int32 itemBooksRatiosList = 7;</code>
     *
     * <pre>
     * 物品类型几率
     * </pre>
     */
    java.util.List<java.lang.Integer> getItemBooksRatiosListList();
    /**
     * <code>repeated int32 itemBooksRatiosList = 7;</code>
     *
     * <pre>
     * 物品类型几率
     * </pre>
     */
    int getItemBooksRatiosListCount();
    /**
     * <code>repeated int32 itemBooksRatiosList = 7;</code>
     *
     * <pre>
     * 物品类型几率
     * </pre>
     */
    int getItemBooksRatiosList(int index);
  }
  /**
   * Protobuf type {@code BoxItem}
   */
  public static final class BoxItem extends
      com.google.protobuf.GeneratedMessage
      implements BoxItemOrBuilder {
    // Use BoxItem.newBuilder() to construct.
    private BoxItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BoxItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BoxItem defaultInstance;
    public static BoxItem getDefaultInstance() {
      return defaultInstance;
    }

    public BoxItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BoxItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              desc_ = input.readBytes();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                countList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              countList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                countList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                countList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                countRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              countRatiosList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                countRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                countRatiosList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                itemBooksList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              itemBooksList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                itemBooksList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemBooksList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                itemBooksRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              itemBooksRatiosList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                itemBooksRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemBooksRatiosList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          countList_ = java.util.Collections.unmodifiableList(countList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          countRatiosList_ = java.util.Collections.unmodifiableList(countRatiosList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          itemBooksList_ = java.util.Collections.unmodifiableList(itemBooksList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          itemBooksRatiosList_ = java.util.Collections.unmodifiableList(itemBooksRatiosList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.ItemProbuf.BoxItem.class, com.cwa.prototype.protobuf.ItemProbuf.BoxItem.Builder.class);
    }

    public static com.google.protobuf.Parser<BoxItem> PARSER =
        new com.google.protobuf.AbstractParser<BoxItem>() {
      public BoxItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BoxItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BoxItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 宝箱keyId
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 宝箱keyId
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 宝箱名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 宝箱名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 宝箱名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string desc = 3;
    public static final int DESC_FIELD_NUMBER = 3;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 countList = 4;
    public static final int COUNTLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> countList_;
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCountListList() {
      return countList_;
    }
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    public int getCountListCount() {
      return countList_.size();
    }
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    public int getCountList(int index) {
      return countList_.get(index);
    }

    // repeated int32 countRatiosList = 5;
    public static final int COUNTRATIOSLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> countRatiosList_;
    /**
     * <code>repeated int32 countRatiosList = 5;</code>
     *
     * <pre>
     * 掉落几率
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCountRatiosListList() {
      return countRatiosList_;
    }
    /**
     * <code>repeated int32 countRatiosList = 5;</code>
     *
     * <pre>
     * 掉落几率
     * </pre>
     */
    public int getCountRatiosListCount() {
      return countRatiosList_.size();
    }
    /**
     * <code>repeated int32 countRatiosList = 5;</code>
     *
     * <pre>
     * 掉落几率
     * </pre>
     */
    public int getCountRatiosList(int index) {
      return countRatiosList_.get(index);
    }

    // repeated int32 itemBooksList = 6;
    public static final int ITEMBOOKSLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> itemBooksList_;
    /**
     * <code>repeated int32 itemBooksList = 6;</code>
     *
     * <pre>
     * 物品类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getItemBooksListList() {
      return itemBooksList_;
    }
    /**
     * <code>repeated int32 itemBooksList = 6;</code>
     *
     * <pre>
     * 物品类型
     * </pre>
     */
    public int getItemBooksListCount() {
      return itemBooksList_.size();
    }
    /**
     * <code>repeated int32 itemBooksList = 6;</code>
     *
     * <pre>
     * 物品类型
     * </pre>
     */
    public int getItemBooksList(int index) {
      return itemBooksList_.get(index);
    }

    // repeated int32 itemBooksRatiosList = 7;
    public static final int ITEMBOOKSRATIOSLIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> itemBooksRatiosList_;
    /**
     * <code>repeated int32 itemBooksRatiosList = 7;</code>
     *
     * <pre>
     * 物品类型几率
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getItemBooksRatiosListList() {
      return itemBooksRatiosList_;
    }
    /**
     * <code>repeated int32 itemBooksRatiosList = 7;</code>
     *
     * <pre>
     * 物品类型几率
     * </pre>
     */
    public int getItemBooksRatiosListCount() {
      return itemBooksRatiosList_.size();
    }
    /**
     * <code>repeated int32 itemBooksRatiosList = 7;</code>
     *
     * <pre>
     * 物品类型几率
     * </pre>
     */
    public int getItemBooksRatiosList(int index) {
      return itemBooksRatiosList_.get(index);
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      desc_ = "";
      countList_ = java.util.Collections.emptyList();
      countRatiosList_ = java.util.Collections.emptyList();
      itemBooksList_ = java.util.Collections.emptyList();
      itemBooksRatiosList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescBytes());
      }
      for (int i = 0; i < countList_.size(); i++) {
        output.writeInt32(4, countList_.get(i));
      }
      for (int i = 0; i < countRatiosList_.size(); i++) {
        output.writeInt32(5, countRatiosList_.get(i));
      }
      for (int i = 0; i < itemBooksList_.size(); i++) {
        output.writeInt32(6, itemBooksList_.get(i));
      }
      for (int i = 0; i < itemBooksRatiosList_.size(); i++) {
        output.writeInt32(7, itemBooksRatiosList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < countList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(countList_.get(i));
        }
        size += dataSize;
        size += 1 * getCountListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < countRatiosList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(countRatiosList_.get(i));
        }
        size += dataSize;
        size += 1 * getCountRatiosListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemBooksList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(itemBooksList_.get(i));
        }
        size += dataSize;
        size += 1 * getItemBooksListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemBooksRatiosList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(itemBooksRatiosList_.get(i));
        }
        size += dataSize;
        size += 1 * getItemBooksRatiosListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.ItemProbuf.BoxItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BoxItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.ItemProbuf.BoxItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.ItemProbuf.BoxItem.class, com.cwa.prototype.protobuf.ItemProbuf.BoxItem.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.ItemProbuf.BoxItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        countList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        countRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        itemBooksList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        itemBooksRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItem_descriptor;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.BoxItem getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.BoxItem.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.ItemProbuf.BoxItem build() {
        com.cwa.prototype.protobuf.ItemProbuf.BoxItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.BoxItem buildPartial() {
        com.cwa.prototype.protobuf.ItemProbuf.BoxItem result = new com.cwa.prototype.protobuf.ItemProbuf.BoxItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.desc_ = desc_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          countList_ = java.util.Collections.unmodifiableList(countList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.countList_ = countList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          countRatiosList_ = java.util.Collections.unmodifiableList(countRatiosList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.countRatiosList_ = countRatiosList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          itemBooksList_ = java.util.Collections.unmodifiableList(itemBooksList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.itemBooksList_ = itemBooksList_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          itemBooksRatiosList_ = java.util.Collections.unmodifiableList(itemBooksRatiosList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.itemBooksRatiosList_ = itemBooksRatiosList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.ItemProbuf.BoxItem) {
          return mergeFrom((com.cwa.prototype.protobuf.ItemProbuf.BoxItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.ItemProbuf.BoxItem other) {
        if (other == com.cwa.prototype.protobuf.ItemProbuf.BoxItem.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000004;
          desc_ = other.desc_;
          onChanged();
        }
        if (!other.countList_.isEmpty()) {
          if (countList_.isEmpty()) {
            countList_ = other.countList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCountListIsMutable();
            countList_.addAll(other.countList_);
          }
          onChanged();
        }
        if (!other.countRatiosList_.isEmpty()) {
          if (countRatiosList_.isEmpty()) {
            countRatiosList_ = other.countRatiosList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCountRatiosListIsMutable();
            countRatiosList_.addAll(other.countRatiosList_);
          }
          onChanged();
        }
        if (!other.itemBooksList_.isEmpty()) {
          if (itemBooksList_.isEmpty()) {
            itemBooksList_ = other.itemBooksList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureItemBooksListIsMutable();
            itemBooksList_.addAll(other.itemBooksList_);
          }
          onChanged();
        }
        if (!other.itemBooksRatiosList_.isEmpty()) {
          if (itemBooksRatiosList_.isEmpty()) {
            itemBooksRatiosList_ = other.itemBooksRatiosList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureItemBooksRatiosListIsMutable();
            itemBooksRatiosList_.addAll(other.itemBooksRatiosList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.ItemProbuf.BoxItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.ItemProbuf.BoxItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 宝箱keyId
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 宝箱keyId
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 宝箱keyId
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 宝箱keyId
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 宝箱名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 宝箱名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 宝箱名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 宝箱名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 宝箱名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 宝箱名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string desc = 3;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }

      // repeated int32 countList = 4;
      private java.util.List<java.lang.Integer> countList_ = java.util.Collections.emptyList();
      private void ensureCountListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          countList_ = new java.util.ArrayList<java.lang.Integer>(countList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCountListList() {
        return java.util.Collections.unmodifiableList(countList_);
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public int getCountListCount() {
        return countList_.size();
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public int getCountList(int index) {
        return countList_.get(index);
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public Builder setCountList(
          int index, int value) {
        ensureCountListIsMutable();
        countList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public Builder addCountList(int value) {
        ensureCountListIsMutable();
        countList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public Builder addAllCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountListIsMutable();
        super.addAll(values, countList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public Builder clearCountList() {
        countList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 countRatiosList = 5;
      private java.util.List<java.lang.Integer> countRatiosList_ = java.util.Collections.emptyList();
      private void ensureCountRatiosListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          countRatiosList_ = new java.util.ArrayList<java.lang.Integer>(countRatiosList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 countRatiosList = 5;</code>
       *
       * <pre>
       * 掉落几率
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCountRatiosListList() {
        return java.util.Collections.unmodifiableList(countRatiosList_);
      }
      /**
       * <code>repeated int32 countRatiosList = 5;</code>
       *
       * <pre>
       * 掉落几率
       * </pre>
       */
      public int getCountRatiosListCount() {
        return countRatiosList_.size();
      }
      /**
       * <code>repeated int32 countRatiosList = 5;</code>
       *
       * <pre>
       * 掉落几率
       * </pre>
       */
      public int getCountRatiosList(int index) {
        return countRatiosList_.get(index);
      }
      /**
       * <code>repeated int32 countRatiosList = 5;</code>
       *
       * <pre>
       * 掉落几率
       * </pre>
       */
      public Builder setCountRatiosList(
          int index, int value) {
        ensureCountRatiosListIsMutable();
        countRatiosList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 5;</code>
       *
       * <pre>
       * 掉落几率
       * </pre>
       */
      public Builder addCountRatiosList(int value) {
        ensureCountRatiosListIsMutable();
        countRatiosList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 5;</code>
       *
       * <pre>
       * 掉落几率
       * </pre>
       */
      public Builder addAllCountRatiosList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountRatiosListIsMutable();
        super.addAll(values, countRatiosList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 5;</code>
       *
       * <pre>
       * 掉落几率
       * </pre>
       */
      public Builder clearCountRatiosList() {
        countRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 itemBooksList = 6;
      private java.util.List<java.lang.Integer> itemBooksList_ = java.util.Collections.emptyList();
      private void ensureItemBooksListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          itemBooksList_ = new java.util.ArrayList<java.lang.Integer>(itemBooksList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 itemBooksList = 6;</code>
       *
       * <pre>
       * 物品类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getItemBooksListList() {
        return java.util.Collections.unmodifiableList(itemBooksList_);
      }
      /**
       * <code>repeated int32 itemBooksList = 6;</code>
       *
       * <pre>
       * 物品类型
       * </pre>
       */
      public int getItemBooksListCount() {
        return itemBooksList_.size();
      }
      /**
       * <code>repeated int32 itemBooksList = 6;</code>
       *
       * <pre>
       * 物品类型
       * </pre>
       */
      public int getItemBooksList(int index) {
        return itemBooksList_.get(index);
      }
      /**
       * <code>repeated int32 itemBooksList = 6;</code>
       *
       * <pre>
       * 物品类型
       * </pre>
       */
      public Builder setItemBooksList(
          int index, int value) {
        ensureItemBooksListIsMutable();
        itemBooksList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemBooksList = 6;</code>
       *
       * <pre>
       * 物品类型
       * </pre>
       */
      public Builder addItemBooksList(int value) {
        ensureItemBooksListIsMutable();
        itemBooksList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemBooksList = 6;</code>
       *
       * <pre>
       * 物品类型
       * </pre>
       */
      public Builder addAllItemBooksList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemBooksListIsMutable();
        super.addAll(values, itemBooksList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemBooksList = 6;</code>
       *
       * <pre>
       * 物品类型
       * </pre>
       */
      public Builder clearItemBooksList() {
        itemBooksList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 itemBooksRatiosList = 7;
      private java.util.List<java.lang.Integer> itemBooksRatiosList_ = java.util.Collections.emptyList();
      private void ensureItemBooksRatiosListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          itemBooksRatiosList_ = new java.util.ArrayList<java.lang.Integer>(itemBooksRatiosList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 itemBooksRatiosList = 7;</code>
       *
       * <pre>
       * 物品类型几率
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getItemBooksRatiosListList() {
        return java.util.Collections.unmodifiableList(itemBooksRatiosList_);
      }
      /**
       * <code>repeated int32 itemBooksRatiosList = 7;</code>
       *
       * <pre>
       * 物品类型几率
       * </pre>
       */
      public int getItemBooksRatiosListCount() {
        return itemBooksRatiosList_.size();
      }
      /**
       * <code>repeated int32 itemBooksRatiosList = 7;</code>
       *
       * <pre>
       * 物品类型几率
       * </pre>
       */
      public int getItemBooksRatiosList(int index) {
        return itemBooksRatiosList_.get(index);
      }
      /**
       * <code>repeated int32 itemBooksRatiosList = 7;</code>
       *
       * <pre>
       * 物品类型几率
       * </pre>
       */
      public Builder setItemBooksRatiosList(
          int index, int value) {
        ensureItemBooksRatiosListIsMutable();
        itemBooksRatiosList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemBooksRatiosList = 7;</code>
       *
       * <pre>
       * 物品类型几率
       * </pre>
       */
      public Builder addItemBooksRatiosList(int value) {
        ensureItemBooksRatiosListIsMutable();
        itemBooksRatiosList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemBooksRatiosList = 7;</code>
       *
       * <pre>
       * 物品类型几率
       * </pre>
       */
      public Builder addAllItemBooksRatiosList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemBooksRatiosListIsMutable();
        super.addAll(values, itemBooksRatiosList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemBooksRatiosList = 7;</code>
       *
       * <pre>
       * 物品类型几率
       * </pre>
       */
      public Builder clearItemBooksRatiosList() {
        itemBooksRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BoxItem)
    }

    static {
      defaultInstance = new BoxItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BoxItem)
  }

  public interface BoxItemRateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 物品类型id
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 物品类型id
     * </pre>
     */
    int getKeyId();

    // repeated int32 itemKeyIdsList = 2;
    /**
     * <code>repeated int32 itemKeyIdsList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    java.util.List<java.lang.Integer> getItemKeyIdsListList();
    /**
     * <code>repeated int32 itemKeyIdsList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    int getItemKeyIdsListCount();
    /**
     * <code>repeated int32 itemKeyIdsList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    int getItemKeyIdsList(int index);

    // repeated int32 itemRatiosList = 3;
    /**
     * <code>repeated int32 itemRatiosList = 3;</code>
     *
     * <pre>
     * 物品几率s
     * </pre>
     */
    java.util.List<java.lang.Integer> getItemRatiosListList();
    /**
     * <code>repeated int32 itemRatiosList = 3;</code>
     *
     * <pre>
     * 物品几率s
     * </pre>
     */
    int getItemRatiosListCount();
    /**
     * <code>repeated int32 itemRatiosList = 3;</code>
     *
     * <pre>
     * 物品几率s
     * </pre>
     */
    int getItemRatiosList(int index);

    // repeated int32 countList = 4;
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getCountListList();
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    int getCountListCount();
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    int getCountList(int index);

    // repeated int32 countMultiply = 5;
    /**
     * <code>repeated int32 countMultiply = 5;</code>
     *
     * <pre>
     * 掉落倍率
     * </pre>
     */
    java.util.List<java.lang.Integer> getCountMultiplyList();
    /**
     * <code>repeated int32 countMultiply = 5;</code>
     *
     * <pre>
     * 掉落倍率
     * </pre>
     */
    int getCountMultiplyCount();
    /**
     * <code>repeated int32 countMultiply = 5;</code>
     *
     * <pre>
     * 掉落倍率
     * </pre>
     */
    int getCountMultiply(int index);

    // repeated int32 countRatiosList = 6;
    /**
     * <code>repeated int32 countRatiosList = 6;</code>
     *
     * <pre>
     * 掉落倍率几率
     * </pre>
     */
    java.util.List<java.lang.Integer> getCountRatiosListList();
    /**
     * <code>repeated int32 countRatiosList = 6;</code>
     *
     * <pre>
     * 掉落倍率几率
     * </pre>
     */
    int getCountRatiosListCount();
    /**
     * <code>repeated int32 countRatiosList = 6;</code>
     *
     * <pre>
     * 掉落倍率几率
     * </pre>
     */
    int getCountRatiosList(int index);
  }
  /**
   * Protobuf type {@code BoxItemRate}
   */
  public static final class BoxItemRate extends
      com.google.protobuf.GeneratedMessage
      implements BoxItemRateOrBuilder {
    // Use BoxItemRate.newBuilder() to construct.
    private BoxItemRate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BoxItemRate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BoxItemRate defaultInstance;
    public static BoxItemRate getDefaultInstance() {
      return defaultInstance;
    }

    public BoxItemRate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BoxItemRate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                itemKeyIdsList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              itemKeyIdsList_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                itemKeyIdsList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemKeyIdsList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                itemRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              itemRatiosList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                itemRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemRatiosList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                countList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              countList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                countList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                countList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                countMultiply_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              countMultiply_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                countMultiply_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                countMultiply_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                countRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              countRatiosList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                countRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                countRatiosList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          itemKeyIdsList_ = java.util.Collections.unmodifiableList(itemKeyIdsList_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          itemRatiosList_ = java.util.Collections.unmodifiableList(itemRatiosList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          countList_ = java.util.Collections.unmodifiableList(countList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          countMultiply_ = java.util.Collections.unmodifiableList(countMultiply_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          countRatiosList_ = java.util.Collections.unmodifiableList(countRatiosList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItemRate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItemRate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate.class, com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate.Builder.class);
    }

    public static com.google.protobuf.Parser<BoxItemRate> PARSER =
        new com.google.protobuf.AbstractParser<BoxItemRate>() {
      public BoxItemRate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BoxItemRate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BoxItemRate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 物品类型id
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 物品类型id
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // repeated int32 itemKeyIdsList = 2;
    public static final int ITEMKEYIDSLIST_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> itemKeyIdsList_;
    /**
     * <code>repeated int32 itemKeyIdsList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getItemKeyIdsListList() {
      return itemKeyIdsList_;
    }
    /**
     * <code>repeated int32 itemKeyIdsList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    public int getItemKeyIdsListCount() {
      return itemKeyIdsList_.size();
    }
    /**
     * <code>repeated int32 itemKeyIdsList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    public int getItemKeyIdsList(int index) {
      return itemKeyIdsList_.get(index);
    }

    // repeated int32 itemRatiosList = 3;
    public static final int ITEMRATIOSLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> itemRatiosList_;
    /**
     * <code>repeated int32 itemRatiosList = 3;</code>
     *
     * <pre>
     * 物品几率s
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getItemRatiosListList() {
      return itemRatiosList_;
    }
    /**
     * <code>repeated int32 itemRatiosList = 3;</code>
     *
     * <pre>
     * 物品几率s
     * </pre>
     */
    public int getItemRatiosListCount() {
      return itemRatiosList_.size();
    }
    /**
     * <code>repeated int32 itemRatiosList = 3;</code>
     *
     * <pre>
     * 物品几率s
     * </pre>
     */
    public int getItemRatiosList(int index) {
      return itemRatiosList_.get(index);
    }

    // repeated int32 countList = 4;
    public static final int COUNTLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> countList_;
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCountListList() {
      return countList_;
    }
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    public int getCountListCount() {
      return countList_.size();
    }
    /**
     * <code>repeated int32 countList = 4;</code>
     *
     * <pre>
     * 掉落数量
     * </pre>
     */
    public int getCountList(int index) {
      return countList_.get(index);
    }

    // repeated int32 countMultiply = 5;
    public static final int COUNTMULTIPLY_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> countMultiply_;
    /**
     * <code>repeated int32 countMultiply = 5;</code>
     *
     * <pre>
     * 掉落倍率
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCountMultiplyList() {
      return countMultiply_;
    }
    /**
     * <code>repeated int32 countMultiply = 5;</code>
     *
     * <pre>
     * 掉落倍率
     * </pre>
     */
    public int getCountMultiplyCount() {
      return countMultiply_.size();
    }
    /**
     * <code>repeated int32 countMultiply = 5;</code>
     *
     * <pre>
     * 掉落倍率
     * </pre>
     */
    public int getCountMultiply(int index) {
      return countMultiply_.get(index);
    }

    // repeated int32 countRatiosList = 6;
    public static final int COUNTRATIOSLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> countRatiosList_;
    /**
     * <code>repeated int32 countRatiosList = 6;</code>
     *
     * <pre>
     * 掉落倍率几率
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCountRatiosListList() {
      return countRatiosList_;
    }
    /**
     * <code>repeated int32 countRatiosList = 6;</code>
     *
     * <pre>
     * 掉落倍率几率
     * </pre>
     */
    public int getCountRatiosListCount() {
      return countRatiosList_.size();
    }
    /**
     * <code>repeated int32 countRatiosList = 6;</code>
     *
     * <pre>
     * 掉落倍率几率
     * </pre>
     */
    public int getCountRatiosList(int index) {
      return countRatiosList_.get(index);
    }

    private void initFields() {
      keyId_ = 0;
      itemKeyIdsList_ = java.util.Collections.emptyList();
      itemRatiosList_ = java.util.Collections.emptyList();
      countList_ = java.util.Collections.emptyList();
      countMultiply_ = java.util.Collections.emptyList();
      countRatiosList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      for (int i = 0; i < itemKeyIdsList_.size(); i++) {
        output.writeInt32(2, itemKeyIdsList_.get(i));
      }
      for (int i = 0; i < itemRatiosList_.size(); i++) {
        output.writeInt32(3, itemRatiosList_.get(i));
      }
      for (int i = 0; i < countList_.size(); i++) {
        output.writeInt32(4, countList_.get(i));
      }
      for (int i = 0; i < countMultiply_.size(); i++) {
        output.writeInt32(5, countMultiply_.get(i));
      }
      for (int i = 0; i < countRatiosList_.size(); i++) {
        output.writeInt32(6, countRatiosList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemKeyIdsList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(itemKeyIdsList_.get(i));
        }
        size += dataSize;
        size += 1 * getItemKeyIdsListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemRatiosList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(itemRatiosList_.get(i));
        }
        size += dataSize;
        size += 1 * getItemRatiosListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < countList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(countList_.get(i));
        }
        size += dataSize;
        size += 1 * getCountListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < countMultiply_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(countMultiply_.get(i));
        }
        size += dataSize;
        size += 1 * getCountMultiplyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < countRatiosList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(countRatiosList_.get(i));
        }
        size += dataSize;
        size += 1 * getCountRatiosListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BoxItemRate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.ItemProbuf.BoxItemRateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItemRate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItemRate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate.class, com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemKeyIdsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        itemRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        countList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        countMultiply_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        countRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_BoxItemRate_descriptor;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate build() {
        com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate buildPartial() {
        com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate result = new com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          itemKeyIdsList_ = java.util.Collections.unmodifiableList(itemKeyIdsList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.itemKeyIdsList_ = itemKeyIdsList_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          itemRatiosList_ = java.util.Collections.unmodifiableList(itemRatiosList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.itemRatiosList_ = itemRatiosList_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          countList_ = java.util.Collections.unmodifiableList(countList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.countList_ = countList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          countMultiply_ = java.util.Collections.unmodifiableList(countMultiply_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.countMultiply_ = countMultiply_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          countRatiosList_ = java.util.Collections.unmodifiableList(countRatiosList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.countRatiosList_ = countRatiosList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate) {
          return mergeFrom((com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate other) {
        if (other == com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (!other.itemKeyIdsList_.isEmpty()) {
          if (itemKeyIdsList_.isEmpty()) {
            itemKeyIdsList_ = other.itemKeyIdsList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureItemKeyIdsListIsMutable();
            itemKeyIdsList_.addAll(other.itemKeyIdsList_);
          }
          onChanged();
        }
        if (!other.itemRatiosList_.isEmpty()) {
          if (itemRatiosList_.isEmpty()) {
            itemRatiosList_ = other.itemRatiosList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureItemRatiosListIsMutable();
            itemRatiosList_.addAll(other.itemRatiosList_);
          }
          onChanged();
        }
        if (!other.countList_.isEmpty()) {
          if (countList_.isEmpty()) {
            countList_ = other.countList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCountListIsMutable();
            countList_.addAll(other.countList_);
          }
          onChanged();
        }
        if (!other.countMultiply_.isEmpty()) {
          if (countMultiply_.isEmpty()) {
            countMultiply_ = other.countMultiply_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCountMultiplyIsMutable();
            countMultiply_.addAll(other.countMultiply_);
          }
          onChanged();
        }
        if (!other.countRatiosList_.isEmpty()) {
          if (countRatiosList_.isEmpty()) {
            countRatiosList_ = other.countRatiosList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureCountRatiosListIsMutable();
            countRatiosList_.addAll(other.countRatiosList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.ItemProbuf.BoxItemRate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 物品类型id
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 物品类型id
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 物品类型id
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 物品类型id
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 itemKeyIdsList = 2;
      private java.util.List<java.lang.Integer> itemKeyIdsList_ = java.util.Collections.emptyList();
      private void ensureItemKeyIdsListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          itemKeyIdsList_ = new java.util.ArrayList<java.lang.Integer>(itemKeyIdsList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 itemKeyIdsList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getItemKeyIdsListList() {
        return java.util.Collections.unmodifiableList(itemKeyIdsList_);
      }
      /**
       * <code>repeated int32 itemKeyIdsList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public int getItemKeyIdsListCount() {
        return itemKeyIdsList_.size();
      }
      /**
       * <code>repeated int32 itemKeyIdsList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public int getItemKeyIdsList(int index) {
        return itemKeyIdsList_.get(index);
      }
      /**
       * <code>repeated int32 itemKeyIdsList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public Builder setItemKeyIdsList(
          int index, int value) {
        ensureItemKeyIdsListIsMutable();
        itemKeyIdsList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemKeyIdsList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public Builder addItemKeyIdsList(int value) {
        ensureItemKeyIdsListIsMutable();
        itemKeyIdsList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemKeyIdsList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public Builder addAllItemKeyIdsList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemKeyIdsListIsMutable();
        super.addAll(values, itemKeyIdsList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemKeyIdsList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public Builder clearItemKeyIdsList() {
        itemKeyIdsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 itemRatiosList = 3;
      private java.util.List<java.lang.Integer> itemRatiosList_ = java.util.Collections.emptyList();
      private void ensureItemRatiosListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          itemRatiosList_ = new java.util.ArrayList<java.lang.Integer>(itemRatiosList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 itemRatiosList = 3;</code>
       *
       * <pre>
       * 物品几率s
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getItemRatiosListList() {
        return java.util.Collections.unmodifiableList(itemRatiosList_);
      }
      /**
       * <code>repeated int32 itemRatiosList = 3;</code>
       *
       * <pre>
       * 物品几率s
       * </pre>
       */
      public int getItemRatiosListCount() {
        return itemRatiosList_.size();
      }
      /**
       * <code>repeated int32 itemRatiosList = 3;</code>
       *
       * <pre>
       * 物品几率s
       * </pre>
       */
      public int getItemRatiosList(int index) {
        return itemRatiosList_.get(index);
      }
      /**
       * <code>repeated int32 itemRatiosList = 3;</code>
       *
       * <pre>
       * 物品几率s
       * </pre>
       */
      public Builder setItemRatiosList(
          int index, int value) {
        ensureItemRatiosListIsMutable();
        itemRatiosList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemRatiosList = 3;</code>
       *
       * <pre>
       * 物品几率s
       * </pre>
       */
      public Builder addItemRatiosList(int value) {
        ensureItemRatiosListIsMutable();
        itemRatiosList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemRatiosList = 3;</code>
       *
       * <pre>
       * 物品几率s
       * </pre>
       */
      public Builder addAllItemRatiosList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemRatiosListIsMutable();
        super.addAll(values, itemRatiosList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 itemRatiosList = 3;</code>
       *
       * <pre>
       * 物品几率s
       * </pre>
       */
      public Builder clearItemRatiosList() {
        itemRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 countList = 4;
      private java.util.List<java.lang.Integer> countList_ = java.util.Collections.emptyList();
      private void ensureCountListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          countList_ = new java.util.ArrayList<java.lang.Integer>(countList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCountListList() {
        return java.util.Collections.unmodifiableList(countList_);
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public int getCountListCount() {
        return countList_.size();
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public int getCountList(int index) {
        return countList_.get(index);
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public Builder setCountList(
          int index, int value) {
        ensureCountListIsMutable();
        countList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public Builder addCountList(int value) {
        ensureCountListIsMutable();
        countList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public Builder addAllCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountListIsMutable();
        super.addAll(values, countList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 4;</code>
       *
       * <pre>
       * 掉落数量
       * </pre>
       */
      public Builder clearCountList() {
        countList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 countMultiply = 5;
      private java.util.List<java.lang.Integer> countMultiply_ = java.util.Collections.emptyList();
      private void ensureCountMultiplyIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          countMultiply_ = new java.util.ArrayList<java.lang.Integer>(countMultiply_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 countMultiply = 5;</code>
       *
       * <pre>
       * 掉落倍率
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCountMultiplyList() {
        return java.util.Collections.unmodifiableList(countMultiply_);
      }
      /**
       * <code>repeated int32 countMultiply = 5;</code>
       *
       * <pre>
       * 掉落倍率
       * </pre>
       */
      public int getCountMultiplyCount() {
        return countMultiply_.size();
      }
      /**
       * <code>repeated int32 countMultiply = 5;</code>
       *
       * <pre>
       * 掉落倍率
       * </pre>
       */
      public int getCountMultiply(int index) {
        return countMultiply_.get(index);
      }
      /**
       * <code>repeated int32 countMultiply = 5;</code>
       *
       * <pre>
       * 掉落倍率
       * </pre>
       */
      public Builder setCountMultiply(
          int index, int value) {
        ensureCountMultiplyIsMutable();
        countMultiply_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countMultiply = 5;</code>
       *
       * <pre>
       * 掉落倍率
       * </pre>
       */
      public Builder addCountMultiply(int value) {
        ensureCountMultiplyIsMutable();
        countMultiply_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countMultiply = 5;</code>
       *
       * <pre>
       * 掉落倍率
       * </pre>
       */
      public Builder addAllCountMultiply(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountMultiplyIsMutable();
        super.addAll(values, countMultiply_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countMultiply = 5;</code>
       *
       * <pre>
       * 掉落倍率
       * </pre>
       */
      public Builder clearCountMultiply() {
        countMultiply_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 countRatiosList = 6;
      private java.util.List<java.lang.Integer> countRatiosList_ = java.util.Collections.emptyList();
      private void ensureCountRatiosListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          countRatiosList_ = new java.util.ArrayList<java.lang.Integer>(countRatiosList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 countRatiosList = 6;</code>
       *
       * <pre>
       * 掉落倍率几率
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCountRatiosListList() {
        return java.util.Collections.unmodifiableList(countRatiosList_);
      }
      /**
       * <code>repeated int32 countRatiosList = 6;</code>
       *
       * <pre>
       * 掉落倍率几率
       * </pre>
       */
      public int getCountRatiosListCount() {
        return countRatiosList_.size();
      }
      /**
       * <code>repeated int32 countRatiosList = 6;</code>
       *
       * <pre>
       * 掉落倍率几率
       * </pre>
       */
      public int getCountRatiosList(int index) {
        return countRatiosList_.get(index);
      }
      /**
       * <code>repeated int32 countRatiosList = 6;</code>
       *
       * <pre>
       * 掉落倍率几率
       * </pre>
       */
      public Builder setCountRatiosList(
          int index, int value) {
        ensureCountRatiosListIsMutable();
        countRatiosList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 6;</code>
       *
       * <pre>
       * 掉落倍率几率
       * </pre>
       */
      public Builder addCountRatiosList(int value) {
        ensureCountRatiosListIsMutable();
        countRatiosList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 6;</code>
       *
       * <pre>
       * 掉落倍率几率
       * </pre>
       */
      public Builder addAllCountRatiosList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountRatiosListIsMutable();
        super.addAll(values, countRatiosList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 6;</code>
       *
       * <pre>
       * 掉落倍率几率
       * </pre>
       */
      public Builder clearCountRatiosList() {
        countRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BoxItemRate)
    }

    static {
      defaultInstance = new BoxItemRate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BoxItemRate)
  }

  public interface HeroItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 典籍id
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 典籍id
     * </pre>
     */
    int getKeyId();

    // required int32 heroId = 2;
    /**
     * <code>required int32 heroId = 2;</code>
     *
     * <pre>
     * 掉落英雄职称id
     * </pre>
     */
    boolean hasHeroId();
    /**
     * <code>required int32 heroId = 2;</code>
     *
     * <pre>
     * 掉落英雄职称id
     * </pre>
     */
    int getHeroId();

    // required int32 quality = 3;
    /**
     * <code>required int32 quality = 3;</code>
     *
     * <pre>
     * 英雄品质
     * </pre>
     */
    boolean hasQuality();
    /**
     * <code>required int32 quality = 3;</code>
     *
     * <pre>
     * 英雄品质
     * </pre>
     */
    int getQuality();

    // required int32 dropItem = 4;
    /**
     * <code>required int32 dropItem = 4;</code>
     *
     * <pre>
     * 掉落英雄卷轴id
     * </pre>
     */
    boolean hasDropItem();
    /**
     * <code>required int32 dropItem = 4;</code>
     *
     * <pre>
     * 掉落英雄卷轴id
     * </pre>
     */
    int getDropItem();

    // required int32 dropCount = 5;
    /**
     * <code>required int32 dropCount = 5;</code>
     *
     * <pre>
     * 掉落英雄卷轴个数
     * </pre>
     */
    boolean hasDropCount();
    /**
     * <code>required int32 dropCount = 5;</code>
     *
     * <pre>
     * 掉落英雄卷轴个数
     * </pre>
     */
    int getDropCount();
  }
  /**
   * Protobuf type {@code HeroItem}
   */
  public static final class HeroItem extends
      com.google.protobuf.GeneratedMessage
      implements HeroItemOrBuilder {
    // Use HeroItem.newBuilder() to construct.
    private HeroItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeroItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeroItem defaultInstance;
    public static HeroItem getDefaultInstance() {
      return defaultInstance;
    }

    public HeroItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeroItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              heroId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              quality_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              dropItem_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              dropCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_HeroItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_HeroItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.ItemProbuf.HeroItem.class, com.cwa.prototype.protobuf.ItemProbuf.HeroItem.Builder.class);
    }

    public static com.google.protobuf.Parser<HeroItem> PARSER =
        new com.google.protobuf.AbstractParser<HeroItem>() {
      public HeroItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeroItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeroItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 典籍id
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 典籍id
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 heroId = 2;
    public static final int HEROID_FIELD_NUMBER = 2;
    private int heroId_;
    /**
     * <code>required int32 heroId = 2;</code>
     *
     * <pre>
     * 掉落英雄职称id
     * </pre>
     */
    public boolean hasHeroId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 heroId = 2;</code>
     *
     * <pre>
     * 掉落英雄职称id
     * </pre>
     */
    public int getHeroId() {
      return heroId_;
    }

    // required int32 quality = 3;
    public static final int QUALITY_FIELD_NUMBER = 3;
    private int quality_;
    /**
     * <code>required int32 quality = 3;</code>
     *
     * <pre>
     * 英雄品质
     * </pre>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 quality = 3;</code>
     *
     * <pre>
     * 英雄品质
     * </pre>
     */
    public int getQuality() {
      return quality_;
    }

    // required int32 dropItem = 4;
    public static final int DROPITEM_FIELD_NUMBER = 4;
    private int dropItem_;
    /**
     * <code>required int32 dropItem = 4;</code>
     *
     * <pre>
     * 掉落英雄卷轴id
     * </pre>
     */
    public boolean hasDropItem() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 dropItem = 4;</code>
     *
     * <pre>
     * 掉落英雄卷轴id
     * </pre>
     */
    public int getDropItem() {
      return dropItem_;
    }

    // required int32 dropCount = 5;
    public static final int DROPCOUNT_FIELD_NUMBER = 5;
    private int dropCount_;
    /**
     * <code>required int32 dropCount = 5;</code>
     *
     * <pre>
     * 掉落英雄卷轴个数
     * </pre>
     */
    public boolean hasDropCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 dropCount = 5;</code>
     *
     * <pre>
     * 掉落英雄卷轴个数
     * </pre>
     */
    public int getDropCount() {
      return dropCount_;
    }

    private void initFields() {
      keyId_ = 0;
      heroId_ = 0;
      quality_ = 0;
      dropItem_ = 0;
      dropCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuality()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDropItem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDropCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, heroId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, quality_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, dropItem_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, dropCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, heroId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, quality_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, dropItem_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, dropCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.HeroItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.ItemProbuf.HeroItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeroItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.ItemProbuf.HeroItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_HeroItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_HeroItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.ItemProbuf.HeroItem.class, com.cwa.prototype.protobuf.ItemProbuf.HeroItem.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.ItemProbuf.HeroItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        heroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dropItem_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        dropCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_HeroItem_descriptor;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.HeroItem getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.HeroItem.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.ItemProbuf.HeroItem build() {
        com.cwa.prototype.protobuf.ItemProbuf.HeroItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.HeroItem buildPartial() {
        com.cwa.prototype.protobuf.ItemProbuf.HeroItem result = new com.cwa.prototype.protobuf.ItemProbuf.HeroItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heroId_ = heroId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dropItem_ = dropItem_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dropCount_ = dropCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.ItemProbuf.HeroItem) {
          return mergeFrom((com.cwa.prototype.protobuf.ItemProbuf.HeroItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.ItemProbuf.HeroItem other) {
        if (other == com.cwa.prototype.protobuf.ItemProbuf.HeroItem.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasHeroId()) {
          setHeroId(other.getHeroId());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasDropItem()) {
          setDropItem(other.getDropItem());
        }
        if (other.hasDropCount()) {
          setDropCount(other.getDropCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasHeroId()) {
          
          return false;
        }
        if (!hasQuality()) {
          
          return false;
        }
        if (!hasDropItem()) {
          
          return false;
        }
        if (!hasDropCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.ItemProbuf.HeroItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.ItemProbuf.HeroItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 典籍id
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 典籍id
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 典籍id
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 典籍id
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 heroId = 2;
      private int heroId_ ;
      /**
       * <code>required int32 heroId = 2;</code>
       *
       * <pre>
       * 掉落英雄职称id
       * </pre>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 heroId = 2;</code>
       *
       * <pre>
       * 掉落英雄职称id
       * </pre>
       */
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <code>required int32 heroId = 2;</code>
       *
       * <pre>
       * 掉落英雄职称id
       * </pre>
       */
      public Builder setHeroId(int value) {
        bitField0_ |= 0x00000002;
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroId = 2;</code>
       *
       * <pre>
       * 掉落英雄职称id
       * </pre>
       */
      public Builder clearHeroId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heroId_ = 0;
        onChanged();
        return this;
      }

      // required int32 quality = 3;
      private int quality_ ;
      /**
       * <code>required int32 quality = 3;</code>
       *
       * <pre>
       * 英雄品质
       * </pre>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 quality = 3;</code>
       *
       * <pre>
       * 英雄品质
       * </pre>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>required int32 quality = 3;</code>
       *
       * <pre>
       * 英雄品质
       * </pre>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000004;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 quality = 3;</code>
       *
       * <pre>
       * 英雄品质
       * </pre>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000004);
        quality_ = 0;
        onChanged();
        return this;
      }

      // required int32 dropItem = 4;
      private int dropItem_ ;
      /**
       * <code>required int32 dropItem = 4;</code>
       *
       * <pre>
       * 掉落英雄卷轴id
       * </pre>
       */
      public boolean hasDropItem() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 dropItem = 4;</code>
       *
       * <pre>
       * 掉落英雄卷轴id
       * </pre>
       */
      public int getDropItem() {
        return dropItem_;
      }
      /**
       * <code>required int32 dropItem = 4;</code>
       *
       * <pre>
       * 掉落英雄卷轴id
       * </pre>
       */
      public Builder setDropItem(int value) {
        bitField0_ |= 0x00000008;
        dropItem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 dropItem = 4;</code>
       *
       * <pre>
       * 掉落英雄卷轴id
       * </pre>
       */
      public Builder clearDropItem() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dropItem_ = 0;
        onChanged();
        return this;
      }

      // required int32 dropCount = 5;
      private int dropCount_ ;
      /**
       * <code>required int32 dropCount = 5;</code>
       *
       * <pre>
       * 掉落英雄卷轴个数
       * </pre>
       */
      public boolean hasDropCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 dropCount = 5;</code>
       *
       * <pre>
       * 掉落英雄卷轴个数
       * </pre>
       */
      public int getDropCount() {
        return dropCount_;
      }
      /**
       * <code>required int32 dropCount = 5;</code>
       *
       * <pre>
       * 掉落英雄卷轴个数
       * </pre>
       */
      public Builder setDropCount(int value) {
        bitField0_ |= 0x00000010;
        dropCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 dropCount = 5;</code>
       *
       * <pre>
       * 掉落英雄卷轴个数
       * </pre>
       */
      public Builder clearDropCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dropCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeroItem)
    }

    static {
      defaultInstance = new HeroItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeroItem)
  }

  public interface PlugItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 插件id
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 插件id
     * </pre>
     */
    int getKeyId();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    int getType();

    // repeated int32 raiseAttrList = 3;
    /**
     * <code>repeated int32 raiseAttrList = 3;</code>
     *
     * <pre>
     * 提升属性
     * </pre>
     */
    java.util.List<java.lang.Integer> getRaiseAttrListList();
    /**
     * <code>repeated int32 raiseAttrList = 3;</code>
     *
     * <pre>
     * 提升属性
     * </pre>
     */
    int getRaiseAttrListCount();
    /**
     * <code>repeated int32 raiseAttrList = 3;</code>
     *
     * <pre>
     * 提升属性
     * </pre>
     */
    int getRaiseAttrList(int index);

    // repeated int32 raiseValueList = 4;
    /**
     * <code>repeated int32 raiseValueList = 4;</code>
     *
     * <pre>
     * 提升属性值
     * </pre>
     */
    java.util.List<java.lang.Integer> getRaiseValueListList();
    /**
     * <code>repeated int32 raiseValueList = 4;</code>
     *
     * <pre>
     * 提升属性值
     * </pre>
     */
    int getRaiseValueListCount();
    /**
     * <code>repeated int32 raiseValueList = 4;</code>
     *
     * <pre>
     * 提升属性值
     * </pre>
     */
    int getRaiseValueList(int index);

    // repeated int32 requireKeyIdsList = 5;
    /**
     * <code>repeated int32 requireKeyIdsList = 5;</code>
     *
     * <pre>
     * 升级需要道具
     * </pre>
     */
    java.util.List<java.lang.Integer> getRequireKeyIdsListList();
    /**
     * <code>repeated int32 requireKeyIdsList = 5;</code>
     *
     * <pre>
     * 升级需要道具
     * </pre>
     */
    int getRequireKeyIdsListCount();
    /**
     * <code>repeated int32 requireKeyIdsList = 5;</code>
     *
     * <pre>
     * 升级需要道具
     * </pre>
     */
    int getRequireKeyIdsList(int index);

    // repeated int32 requireCountList = 6;
    /**
     * <code>repeated int32 requireCountList = 6;</code>
     *
     * <pre>
     * 所需道具个数
     * </pre>
     */
    java.util.List<java.lang.Integer> getRequireCountListList();
    /**
     * <code>repeated int32 requireCountList = 6;</code>
     *
     * <pre>
     * 所需道具个数
     * </pre>
     */
    int getRequireCountListCount();
    /**
     * <code>repeated int32 requireCountList = 6;</code>
     *
     * <pre>
     * 所需道具个数
     * </pre>
     */
    int getRequireCountList(int index);

    // required int32 requireMoneyId = 7;
    /**
     * <code>required int32 requireMoneyId = 7;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    boolean hasRequireMoneyId();
    /**
     * <code>required int32 requireMoneyId = 7;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    int getRequireMoneyId();

    // required int32 requireMoneyCount = 8;
    /**
     * <code>required int32 requireMoneyCount = 8;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    boolean hasRequireMoneyCount();
    /**
     * <code>required int32 requireMoneyCount = 8;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    int getRequireMoneyCount();

    // required int32 updataSuccess = 9;
    /**
     * <code>required int32 updataSuccess = 9;</code>
     *
     * <pre>
     * 升级成功率系数
     * </pre>
     */
    boolean hasUpdataSuccess();
    /**
     * <code>required int32 updataSuccess = 9;</code>
     *
     * <pre>
     * 升级成功率系数
     * </pre>
     */
    int getUpdataSuccess();

    // required int32 updataKeyId = 10;
    /**
     * <code>required int32 updataKeyId = 10;</code>
     *
     * <pre>
     * 升级后id
     * </pre>
     */
    boolean hasUpdataKeyId();
    /**
     * <code>required int32 updataKeyId = 10;</code>
     *
     * <pre>
     * 升级后id
     * </pre>
     */
    int getUpdataKeyId();

    // required int32 luckyMax = 11;
    /**
     * <code>required int32 luckyMax = 11;</code>
     *
     * <pre>
     * 幸运值上限
     * </pre>
     */
    boolean hasLuckyMax();
    /**
     * <code>required int32 luckyMax = 11;</code>
     *
     * <pre>
     * 幸运值上限
     * </pre>
     */
    int getLuckyMax();

    // required int32 luckyAdd = 12;
    /**
     * <code>required int32 luckyAdd = 12;</code>
     *
     * <pre>
     * 增加幸运值
     * </pre>
     */
    boolean hasLuckyAdd();
    /**
     * <code>required int32 luckyAdd = 12;</code>
     *
     * <pre>
     * 增加幸运值
     * </pre>
     */
    int getLuckyAdd();
  }
  /**
   * Protobuf type {@code PlugItem}
   */
  public static final class PlugItem extends
      com.google.protobuf.GeneratedMessage
      implements PlugItemOrBuilder {
    // Use PlugItem.newBuilder() to construct.
    private PlugItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlugItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlugItem defaultInstance;
    public static PlugItem getDefaultInstance() {
      return defaultInstance;
    }

    public PlugItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlugItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                raiseAttrList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              raiseAttrList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                raiseAttrList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                raiseAttrList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                raiseValueList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              raiseValueList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                raiseValueList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                raiseValueList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                requireKeyIdsList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              requireKeyIdsList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                requireKeyIdsList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                requireKeyIdsList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                requireCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              requireCountList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                requireCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                requireCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000004;
              requireMoneyId_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              requireMoneyCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              updataSuccess_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              updataKeyId_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              luckyMax_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              luckyAdd_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          raiseAttrList_ = java.util.Collections.unmodifiableList(raiseAttrList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          raiseValueList_ = java.util.Collections.unmodifiableList(raiseValueList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          requireKeyIdsList_ = java.util.Collections.unmodifiableList(requireKeyIdsList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          requireCountList_ = java.util.Collections.unmodifiableList(requireCountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_PlugItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_PlugItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.ItemProbuf.PlugItem.class, com.cwa.prototype.protobuf.ItemProbuf.PlugItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PlugItem> PARSER =
        new com.google.protobuf.AbstractParser<PlugItem>() {
      public PlugItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlugItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlugItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 插件id
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 插件id
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // repeated int32 raiseAttrList = 3;
    public static final int RAISEATTRLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> raiseAttrList_;
    /**
     * <code>repeated int32 raiseAttrList = 3;</code>
     *
     * <pre>
     * 提升属性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRaiseAttrListList() {
      return raiseAttrList_;
    }
    /**
     * <code>repeated int32 raiseAttrList = 3;</code>
     *
     * <pre>
     * 提升属性
     * </pre>
     */
    public int getRaiseAttrListCount() {
      return raiseAttrList_.size();
    }
    /**
     * <code>repeated int32 raiseAttrList = 3;</code>
     *
     * <pre>
     * 提升属性
     * </pre>
     */
    public int getRaiseAttrList(int index) {
      return raiseAttrList_.get(index);
    }

    // repeated int32 raiseValueList = 4;
    public static final int RAISEVALUELIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> raiseValueList_;
    /**
     * <code>repeated int32 raiseValueList = 4;</code>
     *
     * <pre>
     * 提升属性值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRaiseValueListList() {
      return raiseValueList_;
    }
    /**
     * <code>repeated int32 raiseValueList = 4;</code>
     *
     * <pre>
     * 提升属性值
     * </pre>
     */
    public int getRaiseValueListCount() {
      return raiseValueList_.size();
    }
    /**
     * <code>repeated int32 raiseValueList = 4;</code>
     *
     * <pre>
     * 提升属性值
     * </pre>
     */
    public int getRaiseValueList(int index) {
      return raiseValueList_.get(index);
    }

    // repeated int32 requireKeyIdsList = 5;
    public static final int REQUIREKEYIDSLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> requireKeyIdsList_;
    /**
     * <code>repeated int32 requireKeyIdsList = 5;</code>
     *
     * <pre>
     * 升级需要道具
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRequireKeyIdsListList() {
      return requireKeyIdsList_;
    }
    /**
     * <code>repeated int32 requireKeyIdsList = 5;</code>
     *
     * <pre>
     * 升级需要道具
     * </pre>
     */
    public int getRequireKeyIdsListCount() {
      return requireKeyIdsList_.size();
    }
    /**
     * <code>repeated int32 requireKeyIdsList = 5;</code>
     *
     * <pre>
     * 升级需要道具
     * </pre>
     */
    public int getRequireKeyIdsList(int index) {
      return requireKeyIdsList_.get(index);
    }

    // repeated int32 requireCountList = 6;
    public static final int REQUIRECOUNTLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> requireCountList_;
    /**
     * <code>repeated int32 requireCountList = 6;</code>
     *
     * <pre>
     * 所需道具个数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRequireCountListList() {
      return requireCountList_;
    }
    /**
     * <code>repeated int32 requireCountList = 6;</code>
     *
     * <pre>
     * 所需道具个数
     * </pre>
     */
    public int getRequireCountListCount() {
      return requireCountList_.size();
    }
    /**
     * <code>repeated int32 requireCountList = 6;</code>
     *
     * <pre>
     * 所需道具个数
     * </pre>
     */
    public int getRequireCountList(int index) {
      return requireCountList_.get(index);
    }

    // required int32 requireMoneyId = 7;
    public static final int REQUIREMONEYID_FIELD_NUMBER = 7;
    private int requireMoneyId_;
    /**
     * <code>required int32 requireMoneyId = 7;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    public boolean hasRequireMoneyId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 requireMoneyId = 7;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    public int getRequireMoneyId() {
      return requireMoneyId_;
    }

    // required int32 requireMoneyCount = 8;
    public static final int REQUIREMONEYCOUNT_FIELD_NUMBER = 8;
    private int requireMoneyCount_;
    /**
     * <code>required int32 requireMoneyCount = 8;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    public boolean hasRequireMoneyCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 requireMoneyCount = 8;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    public int getRequireMoneyCount() {
      return requireMoneyCount_;
    }

    // required int32 updataSuccess = 9;
    public static final int UPDATASUCCESS_FIELD_NUMBER = 9;
    private int updataSuccess_;
    /**
     * <code>required int32 updataSuccess = 9;</code>
     *
     * <pre>
     * 升级成功率系数
     * </pre>
     */
    public boolean hasUpdataSuccess() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 updataSuccess = 9;</code>
     *
     * <pre>
     * 升级成功率系数
     * </pre>
     */
    public int getUpdataSuccess() {
      return updataSuccess_;
    }

    // required int32 updataKeyId = 10;
    public static final int UPDATAKEYID_FIELD_NUMBER = 10;
    private int updataKeyId_;
    /**
     * <code>required int32 updataKeyId = 10;</code>
     *
     * <pre>
     * 升级后id
     * </pre>
     */
    public boolean hasUpdataKeyId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 updataKeyId = 10;</code>
     *
     * <pre>
     * 升级后id
     * </pre>
     */
    public int getUpdataKeyId() {
      return updataKeyId_;
    }

    // required int32 luckyMax = 11;
    public static final int LUCKYMAX_FIELD_NUMBER = 11;
    private int luckyMax_;
    /**
     * <code>required int32 luckyMax = 11;</code>
     *
     * <pre>
     * 幸运值上限
     * </pre>
     */
    public boolean hasLuckyMax() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 luckyMax = 11;</code>
     *
     * <pre>
     * 幸运值上限
     * </pre>
     */
    public int getLuckyMax() {
      return luckyMax_;
    }

    // required int32 luckyAdd = 12;
    public static final int LUCKYADD_FIELD_NUMBER = 12;
    private int luckyAdd_;
    /**
     * <code>required int32 luckyAdd = 12;</code>
     *
     * <pre>
     * 增加幸运值
     * </pre>
     */
    public boolean hasLuckyAdd() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 luckyAdd = 12;</code>
     *
     * <pre>
     * 增加幸运值
     * </pre>
     */
    public int getLuckyAdd() {
      return luckyAdd_;
    }

    private void initFields() {
      keyId_ = 0;
      type_ = 0;
      raiseAttrList_ = java.util.Collections.emptyList();
      raiseValueList_ = java.util.Collections.emptyList();
      requireKeyIdsList_ = java.util.Collections.emptyList();
      requireCountList_ = java.util.Collections.emptyList();
      requireMoneyId_ = 0;
      requireMoneyCount_ = 0;
      updataSuccess_ = 0;
      updataKeyId_ = 0;
      luckyMax_ = 0;
      luckyAdd_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUpdataSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUpdataKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLuckyMax()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLuckyAdd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      for (int i = 0; i < raiseAttrList_.size(); i++) {
        output.writeInt32(3, raiseAttrList_.get(i));
      }
      for (int i = 0; i < raiseValueList_.size(); i++) {
        output.writeInt32(4, raiseValueList_.get(i));
      }
      for (int i = 0; i < requireKeyIdsList_.size(); i++) {
        output.writeInt32(5, requireKeyIdsList_.get(i));
      }
      for (int i = 0; i < requireCountList_.size(); i++) {
        output.writeInt32(6, requireCountList_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(7, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(8, requireMoneyCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(9, updataSuccess_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, updataKeyId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, luckyMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, luckyAdd_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < raiseAttrList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(raiseAttrList_.get(i));
        }
        size += dataSize;
        size += 1 * getRaiseAttrListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < raiseValueList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(raiseValueList_.get(i));
        }
        size += dataSize;
        size += 1 * getRaiseValueListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requireKeyIdsList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(requireKeyIdsList_.get(i));
        }
        size += dataSize;
        size += 1 * getRequireKeyIdsListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requireCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(requireCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getRequireCountListList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, requireMoneyCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, updataSuccess_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, updataKeyId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, luckyMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, luckyAdd_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.PlugItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.ItemProbuf.PlugItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlugItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.ItemProbuf.PlugItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_PlugItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_PlugItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.ItemProbuf.PlugItem.class, com.cwa.prototype.protobuf.ItemProbuf.PlugItem.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.ItemProbuf.PlugItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        raiseAttrList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        raiseValueList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        requireKeyIdsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        requireCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        requireMoneyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        requireMoneyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        updataSuccess_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        updataKeyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        luckyMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        luckyAdd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_PlugItem_descriptor;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.PlugItem getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.PlugItem.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.ItemProbuf.PlugItem build() {
        com.cwa.prototype.protobuf.ItemProbuf.PlugItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.PlugItem buildPartial() {
        com.cwa.prototype.protobuf.ItemProbuf.PlugItem result = new com.cwa.prototype.protobuf.ItemProbuf.PlugItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          raiseAttrList_ = java.util.Collections.unmodifiableList(raiseAttrList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.raiseAttrList_ = raiseAttrList_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          raiseValueList_ = java.util.Collections.unmodifiableList(raiseValueList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.raiseValueList_ = raiseValueList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          requireKeyIdsList_ = java.util.Collections.unmodifiableList(requireKeyIdsList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.requireKeyIdsList_ = requireKeyIdsList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          requireCountList_ = java.util.Collections.unmodifiableList(requireCountList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.requireCountList_ = requireCountList_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000004;
        }
        result.requireMoneyId_ = requireMoneyId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000008;
        }
        result.requireMoneyCount_ = requireMoneyCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.updataSuccess_ = updataSuccess_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.updataKeyId_ = updataKeyId_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.luckyMax_ = luckyMax_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.luckyAdd_ = luckyAdd_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.ItemProbuf.PlugItem) {
          return mergeFrom((com.cwa.prototype.protobuf.ItemProbuf.PlugItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.ItemProbuf.PlugItem other) {
        if (other == com.cwa.prototype.protobuf.ItemProbuf.PlugItem.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.raiseAttrList_.isEmpty()) {
          if (raiseAttrList_.isEmpty()) {
            raiseAttrList_ = other.raiseAttrList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRaiseAttrListIsMutable();
            raiseAttrList_.addAll(other.raiseAttrList_);
          }
          onChanged();
        }
        if (!other.raiseValueList_.isEmpty()) {
          if (raiseValueList_.isEmpty()) {
            raiseValueList_ = other.raiseValueList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRaiseValueListIsMutable();
            raiseValueList_.addAll(other.raiseValueList_);
          }
          onChanged();
        }
        if (!other.requireKeyIdsList_.isEmpty()) {
          if (requireKeyIdsList_.isEmpty()) {
            requireKeyIdsList_ = other.requireKeyIdsList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRequireKeyIdsListIsMutable();
            requireKeyIdsList_.addAll(other.requireKeyIdsList_);
          }
          onChanged();
        }
        if (!other.requireCountList_.isEmpty()) {
          if (requireCountList_.isEmpty()) {
            requireCountList_ = other.requireCountList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRequireCountListIsMutable();
            requireCountList_.addAll(other.requireCountList_);
          }
          onChanged();
        }
        if (other.hasRequireMoneyId()) {
          setRequireMoneyId(other.getRequireMoneyId());
        }
        if (other.hasRequireMoneyCount()) {
          setRequireMoneyCount(other.getRequireMoneyCount());
        }
        if (other.hasUpdataSuccess()) {
          setUpdataSuccess(other.getUpdataSuccess());
        }
        if (other.hasUpdataKeyId()) {
          setUpdataKeyId(other.getUpdataKeyId());
        }
        if (other.hasLuckyMax()) {
          setLuckyMax(other.getLuckyMax());
        }
        if (other.hasLuckyAdd()) {
          setLuckyAdd(other.getLuckyAdd());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasRequireMoneyId()) {
          
          return false;
        }
        if (!hasRequireMoneyCount()) {
          
          return false;
        }
        if (!hasUpdataSuccess()) {
          
          return false;
        }
        if (!hasUpdataKeyId()) {
          
          return false;
        }
        if (!hasLuckyMax()) {
          
          return false;
        }
        if (!hasLuckyAdd()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.ItemProbuf.PlugItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.ItemProbuf.PlugItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 插件id
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 插件id
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 插件id
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 插件id
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 raiseAttrList = 3;
      private java.util.List<java.lang.Integer> raiseAttrList_ = java.util.Collections.emptyList();
      private void ensureRaiseAttrListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          raiseAttrList_ = new java.util.ArrayList<java.lang.Integer>(raiseAttrList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 raiseAttrList = 3;</code>
       *
       * <pre>
       * 提升属性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRaiseAttrListList() {
        return java.util.Collections.unmodifiableList(raiseAttrList_);
      }
      /**
       * <code>repeated int32 raiseAttrList = 3;</code>
       *
       * <pre>
       * 提升属性
       * </pre>
       */
      public int getRaiseAttrListCount() {
        return raiseAttrList_.size();
      }
      /**
       * <code>repeated int32 raiseAttrList = 3;</code>
       *
       * <pre>
       * 提升属性
       * </pre>
       */
      public int getRaiseAttrList(int index) {
        return raiseAttrList_.get(index);
      }
      /**
       * <code>repeated int32 raiseAttrList = 3;</code>
       *
       * <pre>
       * 提升属性
       * </pre>
       */
      public Builder setRaiseAttrList(
          int index, int value) {
        ensureRaiseAttrListIsMutable();
        raiseAttrList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raiseAttrList = 3;</code>
       *
       * <pre>
       * 提升属性
       * </pre>
       */
      public Builder addRaiseAttrList(int value) {
        ensureRaiseAttrListIsMutable();
        raiseAttrList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raiseAttrList = 3;</code>
       *
       * <pre>
       * 提升属性
       * </pre>
       */
      public Builder addAllRaiseAttrList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRaiseAttrListIsMutable();
        super.addAll(values, raiseAttrList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raiseAttrList = 3;</code>
       *
       * <pre>
       * 提升属性
       * </pre>
       */
      public Builder clearRaiseAttrList() {
        raiseAttrList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 raiseValueList = 4;
      private java.util.List<java.lang.Integer> raiseValueList_ = java.util.Collections.emptyList();
      private void ensureRaiseValueListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          raiseValueList_ = new java.util.ArrayList<java.lang.Integer>(raiseValueList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 raiseValueList = 4;</code>
       *
       * <pre>
       * 提升属性值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRaiseValueListList() {
        return java.util.Collections.unmodifiableList(raiseValueList_);
      }
      /**
       * <code>repeated int32 raiseValueList = 4;</code>
       *
       * <pre>
       * 提升属性值
       * </pre>
       */
      public int getRaiseValueListCount() {
        return raiseValueList_.size();
      }
      /**
       * <code>repeated int32 raiseValueList = 4;</code>
       *
       * <pre>
       * 提升属性值
       * </pre>
       */
      public int getRaiseValueList(int index) {
        return raiseValueList_.get(index);
      }
      /**
       * <code>repeated int32 raiseValueList = 4;</code>
       *
       * <pre>
       * 提升属性值
       * </pre>
       */
      public Builder setRaiseValueList(
          int index, int value) {
        ensureRaiseValueListIsMutable();
        raiseValueList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raiseValueList = 4;</code>
       *
       * <pre>
       * 提升属性值
       * </pre>
       */
      public Builder addRaiseValueList(int value) {
        ensureRaiseValueListIsMutable();
        raiseValueList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raiseValueList = 4;</code>
       *
       * <pre>
       * 提升属性值
       * </pre>
       */
      public Builder addAllRaiseValueList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRaiseValueListIsMutable();
        super.addAll(values, raiseValueList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raiseValueList = 4;</code>
       *
       * <pre>
       * 提升属性值
       * </pre>
       */
      public Builder clearRaiseValueList() {
        raiseValueList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 requireKeyIdsList = 5;
      private java.util.List<java.lang.Integer> requireKeyIdsList_ = java.util.Collections.emptyList();
      private void ensureRequireKeyIdsListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          requireKeyIdsList_ = new java.util.ArrayList<java.lang.Integer>(requireKeyIdsList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 requireKeyIdsList = 5;</code>
       *
       * <pre>
       * 升级需要道具
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRequireKeyIdsListList() {
        return java.util.Collections.unmodifiableList(requireKeyIdsList_);
      }
      /**
       * <code>repeated int32 requireKeyIdsList = 5;</code>
       *
       * <pre>
       * 升级需要道具
       * </pre>
       */
      public int getRequireKeyIdsListCount() {
        return requireKeyIdsList_.size();
      }
      /**
       * <code>repeated int32 requireKeyIdsList = 5;</code>
       *
       * <pre>
       * 升级需要道具
       * </pre>
       */
      public int getRequireKeyIdsList(int index) {
        return requireKeyIdsList_.get(index);
      }
      /**
       * <code>repeated int32 requireKeyIdsList = 5;</code>
       *
       * <pre>
       * 升级需要道具
       * </pre>
       */
      public Builder setRequireKeyIdsList(
          int index, int value) {
        ensureRequireKeyIdsListIsMutable();
        requireKeyIdsList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireKeyIdsList = 5;</code>
       *
       * <pre>
       * 升级需要道具
       * </pre>
       */
      public Builder addRequireKeyIdsList(int value) {
        ensureRequireKeyIdsListIsMutable();
        requireKeyIdsList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireKeyIdsList = 5;</code>
       *
       * <pre>
       * 升级需要道具
       * </pre>
       */
      public Builder addAllRequireKeyIdsList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRequireKeyIdsListIsMutable();
        super.addAll(values, requireKeyIdsList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireKeyIdsList = 5;</code>
       *
       * <pre>
       * 升级需要道具
       * </pre>
       */
      public Builder clearRequireKeyIdsList() {
        requireKeyIdsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 requireCountList = 6;
      private java.util.List<java.lang.Integer> requireCountList_ = java.util.Collections.emptyList();
      private void ensureRequireCountListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          requireCountList_ = new java.util.ArrayList<java.lang.Integer>(requireCountList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 requireCountList = 6;</code>
       *
       * <pre>
       * 所需道具个数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRequireCountListList() {
        return java.util.Collections.unmodifiableList(requireCountList_);
      }
      /**
       * <code>repeated int32 requireCountList = 6;</code>
       *
       * <pre>
       * 所需道具个数
       * </pre>
       */
      public int getRequireCountListCount() {
        return requireCountList_.size();
      }
      /**
       * <code>repeated int32 requireCountList = 6;</code>
       *
       * <pre>
       * 所需道具个数
       * </pre>
       */
      public int getRequireCountList(int index) {
        return requireCountList_.get(index);
      }
      /**
       * <code>repeated int32 requireCountList = 6;</code>
       *
       * <pre>
       * 所需道具个数
       * </pre>
       */
      public Builder setRequireCountList(
          int index, int value) {
        ensureRequireCountListIsMutable();
        requireCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireCountList = 6;</code>
       *
       * <pre>
       * 所需道具个数
       * </pre>
       */
      public Builder addRequireCountList(int value) {
        ensureRequireCountListIsMutable();
        requireCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireCountList = 6;</code>
       *
       * <pre>
       * 所需道具个数
       * </pre>
       */
      public Builder addAllRequireCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRequireCountListIsMutable();
        super.addAll(values, requireCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireCountList = 6;</code>
       *
       * <pre>
       * 所需道具个数
       * </pre>
       */
      public Builder clearRequireCountList() {
        requireCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // required int32 requireMoneyId = 7;
      private int requireMoneyId_ ;
      /**
       * <code>required int32 requireMoneyId = 7;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public boolean hasRequireMoneyId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 requireMoneyId = 7;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public int getRequireMoneyId() {
        return requireMoneyId_;
      }
      /**
       * <code>required int32 requireMoneyId = 7;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public Builder setRequireMoneyId(int value) {
        bitField0_ |= 0x00000040;
        requireMoneyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyId = 7;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public Builder clearRequireMoneyId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        requireMoneyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireMoneyCount = 8;
      private int requireMoneyCount_ ;
      /**
       * <code>required int32 requireMoneyCount = 8;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public boolean hasRequireMoneyCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 requireMoneyCount = 8;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public int getRequireMoneyCount() {
        return requireMoneyCount_;
      }
      /**
       * <code>required int32 requireMoneyCount = 8;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public Builder setRequireMoneyCount(int value) {
        bitField0_ |= 0x00000080;
        requireMoneyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyCount = 8;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public Builder clearRequireMoneyCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        requireMoneyCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 updataSuccess = 9;
      private int updataSuccess_ ;
      /**
       * <code>required int32 updataSuccess = 9;</code>
       *
       * <pre>
       * 升级成功率系数
       * </pre>
       */
      public boolean hasUpdataSuccess() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 updataSuccess = 9;</code>
       *
       * <pre>
       * 升级成功率系数
       * </pre>
       */
      public int getUpdataSuccess() {
        return updataSuccess_;
      }
      /**
       * <code>required int32 updataSuccess = 9;</code>
       *
       * <pre>
       * 升级成功率系数
       * </pre>
       */
      public Builder setUpdataSuccess(int value) {
        bitField0_ |= 0x00000100;
        updataSuccess_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 updataSuccess = 9;</code>
       *
       * <pre>
       * 升级成功率系数
       * </pre>
       */
      public Builder clearUpdataSuccess() {
        bitField0_ = (bitField0_ & ~0x00000100);
        updataSuccess_ = 0;
        onChanged();
        return this;
      }

      // required int32 updataKeyId = 10;
      private int updataKeyId_ ;
      /**
       * <code>required int32 updataKeyId = 10;</code>
       *
       * <pre>
       * 升级后id
       * </pre>
       */
      public boolean hasUpdataKeyId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 updataKeyId = 10;</code>
       *
       * <pre>
       * 升级后id
       * </pre>
       */
      public int getUpdataKeyId() {
        return updataKeyId_;
      }
      /**
       * <code>required int32 updataKeyId = 10;</code>
       *
       * <pre>
       * 升级后id
       * </pre>
       */
      public Builder setUpdataKeyId(int value) {
        bitField0_ |= 0x00000200;
        updataKeyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 updataKeyId = 10;</code>
       *
       * <pre>
       * 升级后id
       * </pre>
       */
      public Builder clearUpdataKeyId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        updataKeyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 luckyMax = 11;
      private int luckyMax_ ;
      /**
       * <code>required int32 luckyMax = 11;</code>
       *
       * <pre>
       * 幸运值上限
       * </pre>
       */
      public boolean hasLuckyMax() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 luckyMax = 11;</code>
       *
       * <pre>
       * 幸运值上限
       * </pre>
       */
      public int getLuckyMax() {
        return luckyMax_;
      }
      /**
       * <code>required int32 luckyMax = 11;</code>
       *
       * <pre>
       * 幸运值上限
       * </pre>
       */
      public Builder setLuckyMax(int value) {
        bitField0_ |= 0x00000400;
        luckyMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 luckyMax = 11;</code>
       *
       * <pre>
       * 幸运值上限
       * </pre>
       */
      public Builder clearLuckyMax() {
        bitField0_ = (bitField0_ & ~0x00000400);
        luckyMax_ = 0;
        onChanged();
        return this;
      }

      // required int32 luckyAdd = 12;
      private int luckyAdd_ ;
      /**
       * <code>required int32 luckyAdd = 12;</code>
       *
       * <pre>
       * 增加幸运值
       * </pre>
       */
      public boolean hasLuckyAdd() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 luckyAdd = 12;</code>
       *
       * <pre>
       * 增加幸运值
       * </pre>
       */
      public int getLuckyAdd() {
        return luckyAdd_;
      }
      /**
       * <code>required int32 luckyAdd = 12;</code>
       *
       * <pre>
       * 增加幸运值
       * </pre>
       */
      public Builder setLuckyAdd(int value) {
        bitField0_ |= 0x00000800;
        luckyAdd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 luckyAdd = 12;</code>
       *
       * <pre>
       * 增加幸运值
       * </pre>
       */
      public Builder clearLuckyAdd() {
        bitField0_ = (bitField0_ & ~0x00000800);
        luckyAdd_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlugItem)
    }

    static {
      defaultInstance = new PlugItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlugItem)
  }

  public interface ItemCombineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 合成后道具KeyId
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 合成后道具KeyId
     * </pre>
     */
    int getKeyId();

    // required int32 showLevel = 2;
    /**
     * <code>required int32 showLevel = 2;</code>
     *
     * <pre>
     * 显示优先级
     * </pre>
     */
    boolean hasShowLevel();
    /**
     * <code>required int32 showLevel = 2;</code>
     *
     * <pre>
     * 显示优先级
     * </pre>
     */
    int getShowLevel();

    // repeated int32 spendGoodsList = 3;
    /**
     * <code>repeated int32 spendGoodsList = 3;</code>
     *
     * <pre>
     * 所需道具
     * </pre>
     */
    java.util.List<java.lang.Integer> getSpendGoodsListList();
    /**
     * <code>repeated int32 spendGoodsList = 3;</code>
     *
     * <pre>
     * 所需道具
     * </pre>
     */
    int getSpendGoodsListCount();
    /**
     * <code>repeated int32 spendGoodsList = 3;</code>
     *
     * <pre>
     * 所需道具
     * </pre>
     */
    int getSpendGoodsList(int index);

    // repeated int32 spendCountList = 4;
    /**
     * <code>repeated int32 spendCountList = 4;</code>
     *
     * <pre>
     * 所需数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getSpendCountListList();
    /**
     * <code>repeated int32 spendCountList = 4;</code>
     *
     * <pre>
     * 所需数量
     * </pre>
     */
    int getSpendCountListCount();
    /**
     * <code>repeated int32 spendCountList = 4;</code>
     *
     * <pre>
     * 所需数量
     * </pre>
     */
    int getSpendCountList(int index);

    // required int32 requireMoneyId = 5;
    /**
     * <code>required int32 requireMoneyId = 5;</code>
     *
     * <pre>
     * 合成费货币类型
     * </pre>
     */
    boolean hasRequireMoneyId();
    /**
     * <code>required int32 requireMoneyId = 5;</code>
     *
     * <pre>
     * 合成费货币类型
     * </pre>
     */
    int getRequireMoneyId();

    // required int32 requireMoneyCount = 6;
    /**
     * <code>required int32 requireMoneyCount = 6;</code>
     *
     * <pre>
     * 合成费数量
     * </pre>
     */
    boolean hasRequireMoneyCount();
    /**
     * <code>required int32 requireMoneyCount = 6;</code>
     *
     * <pre>
     * 合成费数量
     * </pre>
     */
    int getRequireMoneyCount();
  }
  /**
   * Protobuf type {@code ItemCombine}
   */
  public static final class ItemCombine extends
      com.google.protobuf.GeneratedMessage
      implements ItemCombineOrBuilder {
    // Use ItemCombine.newBuilder() to construct.
    private ItemCombine(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ItemCombine(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ItemCombine defaultInstance;
    public static ItemCombine getDefaultInstance() {
      return defaultInstance;
    }

    public ItemCombine getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ItemCombine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              showLevel_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                spendGoodsList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              spendGoodsList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                spendGoodsList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                spendGoodsList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                spendCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              spendCountList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                spendCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                spendCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              requireMoneyId_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              requireMoneyCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          spendGoodsList_ = java.util.Collections.unmodifiableList(spendGoodsList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          spendCountList_ = java.util.Collections.unmodifiableList(spendCountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_ItemCombine_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.ItemProbuf.internal_static_ItemCombine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.ItemProbuf.ItemCombine.class, com.cwa.prototype.protobuf.ItemProbuf.ItemCombine.Builder.class);
    }

    public static com.google.protobuf.Parser<ItemCombine> PARSER =
        new com.google.protobuf.AbstractParser<ItemCombine>() {
      public ItemCombine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ItemCombine(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ItemCombine> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 合成后道具KeyId
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 合成后道具KeyId
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 showLevel = 2;
    public static final int SHOWLEVEL_FIELD_NUMBER = 2;
    private int showLevel_;
    /**
     * <code>required int32 showLevel = 2;</code>
     *
     * <pre>
     * 显示优先级
     * </pre>
     */
    public boolean hasShowLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 showLevel = 2;</code>
     *
     * <pre>
     * 显示优先级
     * </pre>
     */
    public int getShowLevel() {
      return showLevel_;
    }

    // repeated int32 spendGoodsList = 3;
    public static final int SPENDGOODSLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> spendGoodsList_;
    /**
     * <code>repeated int32 spendGoodsList = 3;</code>
     *
     * <pre>
     * 所需道具
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSpendGoodsListList() {
      return spendGoodsList_;
    }
    /**
     * <code>repeated int32 spendGoodsList = 3;</code>
     *
     * <pre>
     * 所需道具
     * </pre>
     */
    public int getSpendGoodsListCount() {
      return spendGoodsList_.size();
    }
    /**
     * <code>repeated int32 spendGoodsList = 3;</code>
     *
     * <pre>
     * 所需道具
     * </pre>
     */
    public int getSpendGoodsList(int index) {
      return spendGoodsList_.get(index);
    }

    // repeated int32 spendCountList = 4;
    public static final int SPENDCOUNTLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> spendCountList_;
    /**
     * <code>repeated int32 spendCountList = 4;</code>
     *
     * <pre>
     * 所需数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSpendCountListList() {
      return spendCountList_;
    }
    /**
     * <code>repeated int32 spendCountList = 4;</code>
     *
     * <pre>
     * 所需数量
     * </pre>
     */
    public int getSpendCountListCount() {
      return spendCountList_.size();
    }
    /**
     * <code>repeated int32 spendCountList = 4;</code>
     *
     * <pre>
     * 所需数量
     * </pre>
     */
    public int getSpendCountList(int index) {
      return spendCountList_.get(index);
    }

    // required int32 requireMoneyId = 5;
    public static final int REQUIREMONEYID_FIELD_NUMBER = 5;
    private int requireMoneyId_;
    /**
     * <code>required int32 requireMoneyId = 5;</code>
     *
     * <pre>
     * 合成费货币类型
     * </pre>
     */
    public boolean hasRequireMoneyId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 requireMoneyId = 5;</code>
     *
     * <pre>
     * 合成费货币类型
     * </pre>
     */
    public int getRequireMoneyId() {
      return requireMoneyId_;
    }

    // required int32 requireMoneyCount = 6;
    public static final int REQUIREMONEYCOUNT_FIELD_NUMBER = 6;
    private int requireMoneyCount_;
    /**
     * <code>required int32 requireMoneyCount = 6;</code>
     *
     * <pre>
     * 合成费数量
     * </pre>
     */
    public boolean hasRequireMoneyCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 requireMoneyCount = 6;</code>
     *
     * <pre>
     * 合成费数量
     * </pre>
     */
    public int getRequireMoneyCount() {
      return requireMoneyCount_;
    }

    private void initFields() {
      keyId_ = 0;
      showLevel_ = 0;
      spendGoodsList_ = java.util.Collections.emptyList();
      spendCountList_ = java.util.Collections.emptyList();
      requireMoneyId_ = 0;
      requireMoneyCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShowLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, showLevel_);
      }
      for (int i = 0; i < spendGoodsList_.size(); i++) {
        output.writeInt32(3, spendGoodsList_.get(i));
      }
      for (int i = 0; i < spendCountList_.size(); i++) {
        output.writeInt32(4, spendCountList_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, requireMoneyCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, showLevel_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < spendGoodsList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(spendGoodsList_.get(i));
        }
        size += dataSize;
        size += 1 * getSpendGoodsListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < spendCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(spendCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getSpendCountListList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, requireMoneyCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.ItemProbuf.ItemCombine prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ItemCombine}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.ItemProbuf.ItemCombineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_ItemCombine_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_ItemCombine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.ItemProbuf.ItemCombine.class, com.cwa.prototype.protobuf.ItemProbuf.ItemCombine.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.ItemProbuf.ItemCombine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        showLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        spendGoodsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        spendCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        requireMoneyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        requireMoneyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.internal_static_ItemCombine_descriptor;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.ItemCombine getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.ItemProbuf.ItemCombine.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.ItemProbuf.ItemCombine build() {
        com.cwa.prototype.protobuf.ItemProbuf.ItemCombine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.ItemProbuf.ItemCombine buildPartial() {
        com.cwa.prototype.protobuf.ItemProbuf.ItemCombine result = new com.cwa.prototype.protobuf.ItemProbuf.ItemCombine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.showLevel_ = showLevel_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          spendGoodsList_ = java.util.Collections.unmodifiableList(spendGoodsList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.spendGoodsList_ = spendGoodsList_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          spendCountList_ = java.util.Collections.unmodifiableList(spendCountList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.spendCountList_ = spendCountList_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.requireMoneyId_ = requireMoneyId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.requireMoneyCount_ = requireMoneyCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.ItemProbuf.ItemCombine) {
          return mergeFrom((com.cwa.prototype.protobuf.ItemProbuf.ItemCombine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.ItemProbuf.ItemCombine other) {
        if (other == com.cwa.prototype.protobuf.ItemProbuf.ItemCombine.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasShowLevel()) {
          setShowLevel(other.getShowLevel());
        }
        if (!other.spendGoodsList_.isEmpty()) {
          if (spendGoodsList_.isEmpty()) {
            spendGoodsList_ = other.spendGoodsList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSpendGoodsListIsMutable();
            spendGoodsList_.addAll(other.spendGoodsList_);
          }
          onChanged();
        }
        if (!other.spendCountList_.isEmpty()) {
          if (spendCountList_.isEmpty()) {
            spendCountList_ = other.spendCountList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSpendCountListIsMutable();
            spendCountList_.addAll(other.spendCountList_);
          }
          onChanged();
        }
        if (other.hasRequireMoneyId()) {
          setRequireMoneyId(other.getRequireMoneyId());
        }
        if (other.hasRequireMoneyCount()) {
          setRequireMoneyCount(other.getRequireMoneyCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasShowLevel()) {
          
          return false;
        }
        if (!hasRequireMoneyId()) {
          
          return false;
        }
        if (!hasRequireMoneyCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.ItemProbuf.ItemCombine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.ItemProbuf.ItemCombine) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 合成后道具KeyId
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 合成后道具KeyId
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 合成后道具KeyId
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 合成后道具KeyId
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 showLevel = 2;
      private int showLevel_ ;
      /**
       * <code>required int32 showLevel = 2;</code>
       *
       * <pre>
       * 显示优先级
       * </pre>
       */
      public boolean hasShowLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 showLevel = 2;</code>
       *
       * <pre>
       * 显示优先级
       * </pre>
       */
      public int getShowLevel() {
        return showLevel_;
      }
      /**
       * <code>required int32 showLevel = 2;</code>
       *
       * <pre>
       * 显示优先级
       * </pre>
       */
      public Builder setShowLevel(int value) {
        bitField0_ |= 0x00000002;
        showLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 showLevel = 2;</code>
       *
       * <pre>
       * 显示优先级
       * </pre>
       */
      public Builder clearShowLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        showLevel_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 spendGoodsList = 3;
      private java.util.List<java.lang.Integer> spendGoodsList_ = java.util.Collections.emptyList();
      private void ensureSpendGoodsListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          spendGoodsList_ = new java.util.ArrayList<java.lang.Integer>(spendGoodsList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 spendGoodsList = 3;</code>
       *
       * <pre>
       * 所需道具
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSpendGoodsListList() {
        return java.util.Collections.unmodifiableList(spendGoodsList_);
      }
      /**
       * <code>repeated int32 spendGoodsList = 3;</code>
       *
       * <pre>
       * 所需道具
       * </pre>
       */
      public int getSpendGoodsListCount() {
        return spendGoodsList_.size();
      }
      /**
       * <code>repeated int32 spendGoodsList = 3;</code>
       *
       * <pre>
       * 所需道具
       * </pre>
       */
      public int getSpendGoodsList(int index) {
        return spendGoodsList_.get(index);
      }
      /**
       * <code>repeated int32 spendGoodsList = 3;</code>
       *
       * <pre>
       * 所需道具
       * </pre>
       */
      public Builder setSpendGoodsList(
          int index, int value) {
        ensureSpendGoodsListIsMutable();
        spendGoodsList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spendGoodsList = 3;</code>
       *
       * <pre>
       * 所需道具
       * </pre>
       */
      public Builder addSpendGoodsList(int value) {
        ensureSpendGoodsListIsMutable();
        spendGoodsList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spendGoodsList = 3;</code>
       *
       * <pre>
       * 所需道具
       * </pre>
       */
      public Builder addAllSpendGoodsList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSpendGoodsListIsMutable();
        super.addAll(values, spendGoodsList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spendGoodsList = 3;</code>
       *
       * <pre>
       * 所需道具
       * </pre>
       */
      public Builder clearSpendGoodsList() {
        spendGoodsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 spendCountList = 4;
      private java.util.List<java.lang.Integer> spendCountList_ = java.util.Collections.emptyList();
      private void ensureSpendCountListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          spendCountList_ = new java.util.ArrayList<java.lang.Integer>(spendCountList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 spendCountList = 4;</code>
       *
       * <pre>
       * 所需数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSpendCountListList() {
        return java.util.Collections.unmodifiableList(spendCountList_);
      }
      /**
       * <code>repeated int32 spendCountList = 4;</code>
       *
       * <pre>
       * 所需数量
       * </pre>
       */
      public int getSpendCountListCount() {
        return spendCountList_.size();
      }
      /**
       * <code>repeated int32 spendCountList = 4;</code>
       *
       * <pre>
       * 所需数量
       * </pre>
       */
      public int getSpendCountList(int index) {
        return spendCountList_.get(index);
      }
      /**
       * <code>repeated int32 spendCountList = 4;</code>
       *
       * <pre>
       * 所需数量
       * </pre>
       */
      public Builder setSpendCountList(
          int index, int value) {
        ensureSpendCountListIsMutable();
        spendCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spendCountList = 4;</code>
       *
       * <pre>
       * 所需数量
       * </pre>
       */
      public Builder addSpendCountList(int value) {
        ensureSpendCountListIsMutable();
        spendCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spendCountList = 4;</code>
       *
       * <pre>
       * 所需数量
       * </pre>
       */
      public Builder addAllSpendCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSpendCountListIsMutable();
        super.addAll(values, spendCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spendCountList = 4;</code>
       *
       * <pre>
       * 所需数量
       * </pre>
       */
      public Builder clearSpendCountList() {
        spendCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // required int32 requireMoneyId = 5;
      private int requireMoneyId_ ;
      /**
       * <code>required int32 requireMoneyId = 5;</code>
       *
       * <pre>
       * 合成费货币类型
       * </pre>
       */
      public boolean hasRequireMoneyId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 requireMoneyId = 5;</code>
       *
       * <pre>
       * 合成费货币类型
       * </pre>
       */
      public int getRequireMoneyId() {
        return requireMoneyId_;
      }
      /**
       * <code>required int32 requireMoneyId = 5;</code>
       *
       * <pre>
       * 合成费货币类型
       * </pre>
       */
      public Builder setRequireMoneyId(int value) {
        bitField0_ |= 0x00000010;
        requireMoneyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyId = 5;</code>
       *
       * <pre>
       * 合成费货币类型
       * </pre>
       */
      public Builder clearRequireMoneyId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        requireMoneyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireMoneyCount = 6;
      private int requireMoneyCount_ ;
      /**
       * <code>required int32 requireMoneyCount = 6;</code>
       *
       * <pre>
       * 合成费数量
       * </pre>
       */
      public boolean hasRequireMoneyCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 requireMoneyCount = 6;</code>
       *
       * <pre>
       * 合成费数量
       * </pre>
       */
      public int getRequireMoneyCount() {
        return requireMoneyCount_;
      }
      /**
       * <code>required int32 requireMoneyCount = 6;</code>
       *
       * <pre>
       * 合成费数量
       * </pre>
       */
      public Builder setRequireMoneyCount(int value) {
        bitField0_ |= 0x00000020;
        requireMoneyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyCount = 6;</code>
       *
       * <pre>
       * 合成费数量
       * </pre>
       */
      public Builder clearRequireMoneyCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        requireMoneyCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ItemCombine)
    }

    static {
      defaultInstance = new ItemCombine(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ItemCombine)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Item_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Item_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BoxItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BoxItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BoxItemRate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BoxItemRate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HeroItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeroItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlugItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlugItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ItemCombine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ItemCombine_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020ItemProbuf.proto\"\264\001\n\004Item\022\r\n\005keyId\030\001 \002" +
      "(\005\022\014\n\004name\030\002 \002(\t\022\014\n\004desc\030\003 \002(\t\022\020\n\010itemTy" +
      "pe\030\004 \002(\005\022\r\n\005isUse\030\005 \002(\005\022\030\n\020requireRoleLe" +
      "vel\030\006 \002(\005\022\024\n\014holdMaxCount\030\007 \002(\005\022\016\n\006quali" +
      "t\030\010 \002(\005\022\r\n\005price\030\t \002(\005\022\021\n\titemImage\030\n \002(" +
      "\t\"\224\001\n\007BoxItem\022\r\n\005keyId\030\001 \002(\005\022\014\n\004name\030\002 \002" +
      "(\t\022\014\n\004desc\030\003 \002(\t\022\021\n\tcountList\030\004 \003(\005\022\027\n\017c" +
      "ountRatiosList\030\005 \003(\005\022\025\n\ritemBooksList\030\006 " +
      "\003(\005\022\033\n\023itemBooksRatiosList\030\007 \003(\005\"\217\001\n\013Box" +
      "ItemRate\022\r\n\005keyId\030\001 \002(\005\022\026\n\016itemKeyIdsLis",
      "t\030\002 \003(\005\022\026\n\016itemRatiosList\030\003 \003(\005\022\021\n\tcount" +
      "List\030\004 \003(\005\022\025\n\rcountMultiply\030\005 \003(\005\022\027\n\017cou" +
      "ntRatiosList\030\006 \003(\005\"_\n\010HeroItem\022\r\n\005keyId\030" +
      "\001 \002(\005\022\016\n\006heroId\030\002 \002(\005\022\017\n\007quality\030\003 \002(\005\022\020" +
      "\n\010dropItem\030\004 \002(\005\022\021\n\tdropCount\030\005 \002(\005\"\216\002\n\010" +
      "PlugItem\022\r\n\005keyId\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\025\n" +
      "\rraiseAttrList\030\003 \003(\005\022\026\n\016raiseValueList\030\004" +
      " \003(\005\022\031\n\021requireKeyIdsList\030\005 \003(\005\022\030\n\020requi" +
      "reCountList\030\006 \003(\005\022\026\n\016requireMoneyId\030\007 \002(" +
      "\005\022\031\n\021requireMoneyCount\030\010 \002(\005\022\025\n\rupdataSu",
      "ccess\030\t \002(\005\022\023\n\013updataKeyId\030\n \002(\005\022\020\n\010luck" +
      "yMax\030\013 \002(\005\022\020\n\010luckyAdd\030\014 \002(\005\"\222\001\n\013ItemCom" +
      "bine\022\r\n\005keyId\030\001 \002(\005\022\021\n\tshowLevel\030\002 \002(\005\022\026" +
      "\n\016spendGoodsList\030\003 \003(\005\022\026\n\016spendCountList" +
      "\030\004 \003(\005\022\026\n\016requireMoneyId\030\005 \002(\005\022\031\n\021requir" +
      "eMoneyCount\030\006 \002(\005B(\n\032com.cwa.prototype.p" +
      "rotobufB\nItemProbuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Item_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Item_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Item_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Desc", "ItemType", "IsUse", "RequireRoleLevel", "HoldMaxCount", "Qualit", "Price", "ItemImage", });
          internal_static_BoxItem_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_BoxItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BoxItem_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Desc", "CountList", "CountRatiosList", "ItemBooksList", "ItemBooksRatiosList", });
          internal_static_BoxItemRate_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_BoxItemRate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BoxItemRate_descriptor,
              new java.lang.String[] { "KeyId", "ItemKeyIdsList", "ItemRatiosList", "CountList", "CountMultiply", "CountRatiosList", });
          internal_static_HeroItem_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_HeroItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HeroItem_descriptor,
              new java.lang.String[] { "KeyId", "HeroId", "Quality", "DropItem", "DropCount", });
          internal_static_PlugItem_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_PlugItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlugItem_descriptor,
              new java.lang.String[] { "KeyId", "Type", "RaiseAttrList", "RaiseValueList", "RequireKeyIdsList", "RequireCountList", "RequireMoneyId", "RequireMoneyCount", "UpdataSuccess", "UpdataKeyId", "LuckyMax", "LuckyAdd", });
          internal_static_ItemCombine_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_ItemCombine_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ItemCombine_descriptor,
              new java.lang.String[] { "KeyId", "ShowLevel", "SpendGoodsList", "SpendCountList", "RequireMoneyId", "RequireMoneyCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
