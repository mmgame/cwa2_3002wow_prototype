// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatchProbuf.proto

package com.cwa.prototype.protobuf;

public final class MatchProbuf {
  private MatchProbuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MatchChapterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    int getKeyId();

    // required int32 limitLevel = 2;
    /**
     * <code>required int32 limitLevel = 2;</code>
     *
     * <pre>
     * 限制等级
     * </pre>
     */
    boolean hasLimitLevel();
    /**
     * <code>required int32 limitLevel = 2;</code>
     *
     * <pre>
     * 限制等级
     * </pre>
     */
    int getLimitLevel();

    // required string startAwardLists = 3;
    /**
     * <code>required string startAwardLists = 3;</code>
     *
     * <pre>
     * 星级奖励
     * </pre>
     */
    boolean hasStartAwardLists();
    /**
     * <code>required string startAwardLists = 3;</code>
     *
     * <pre>
     * 星级奖励
     * </pre>
     */
    java.lang.String getStartAwardLists();
    /**
     * <code>required string startAwardLists = 3;</code>
     *
     * <pre>
     * 星级奖励
     * </pre>
     */
    com.google.protobuf.ByteString
        getStartAwardListsBytes();

    // repeated int32 businessmanList = 4;
    /**
     * <code>repeated int32 businessmanList = 4;</code>
     *
     * <pre>
     * 商人
     * </pre>
     */
    java.util.List<java.lang.Integer> getBusinessmanListList();
    /**
     * <code>repeated int32 businessmanList = 4;</code>
     *
     * <pre>
     * 商人
     * </pre>
     */
    int getBusinessmanListCount();
    /**
     * <code>repeated int32 businessmanList = 4;</code>
     *
     * <pre>
     * 商人
     * </pre>
     */
    int getBusinessmanList(int index);

    // repeated int32 businessmanSatioList = 5;
    /**
     * <code>repeated int32 businessmanSatioList = 5;</code>
     *
     * <pre>
     * 商人几率系数
     * </pre>
     */
    java.util.List<java.lang.Integer> getBusinessmanSatioListList();
    /**
     * <code>repeated int32 businessmanSatioList = 5;</code>
     *
     * <pre>
     * 商人几率系数
     * </pre>
     */
    int getBusinessmanSatioListCount();
    /**
     * <code>repeated int32 businessmanSatioList = 5;</code>
     *
     * <pre>
     * 商人几率系数
     * </pre>
     */
    int getBusinessmanSatioList(int index);

    // repeated int32 normalMatchList = 6;
    /**
     * <code>repeated int32 normalMatchList = 6;</code>
     *
     * <pre>
     * 普通关
     * </pre>
     */
    java.util.List<java.lang.Integer> getNormalMatchListList();
    /**
     * <code>repeated int32 normalMatchList = 6;</code>
     *
     * <pre>
     * 普通关
     * </pre>
     */
    int getNormalMatchListCount();
    /**
     * <code>repeated int32 normalMatchList = 6;</code>
     *
     * <pre>
     * 普通关
     * </pre>
     */
    int getNormalMatchList(int index);

    // repeated int32 eliteMatchList = 7;
    /**
     * <code>repeated int32 eliteMatchList = 7;</code>
     *
     * <pre>
     * 精英关
     * </pre>
     */
    java.util.List<java.lang.Integer> getEliteMatchListList();
    /**
     * <code>repeated int32 eliteMatchList = 7;</code>
     *
     * <pre>
     * 精英关
     * </pre>
     */
    int getEliteMatchListCount();
    /**
     * <code>repeated int32 eliteMatchList = 7;</code>
     *
     * <pre>
     * 精英关
     * </pre>
     */
    int getEliteMatchList(int index);

    // required string mapFile = 8;
    /**
     * <code>required string mapFile = 8;</code>
     *
     * <pre>
     * 地图XML(数据前缀，图片前缀，图片数量)
     * </pre>
     */
    boolean hasMapFile();
    /**
     * <code>required string mapFile = 8;</code>
     *
     * <pre>
     * 地图XML(数据前缀，图片前缀，图片数量)
     * </pre>
     */
    java.lang.String getMapFile();
    /**
     * <code>required string mapFile = 8;</code>
     *
     * <pre>
     * 地图XML(数据前缀，图片前缀，图片数量)
     * </pre>
     */
    com.google.protobuf.ByteString
        getMapFileBytes();

    // required string name = 9;
    /**
     * <code>required string name = 9;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 9;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 9;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code MatchChapter}
   */
  public static final class MatchChapter extends
      com.google.protobuf.GeneratedMessage
      implements MatchChapterOrBuilder {
    // Use MatchChapter.newBuilder() to construct.
    private MatchChapter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchChapter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchChapter defaultInstance;
    public static MatchChapter getDefaultInstance() {
      return defaultInstance;
    }

    public MatchChapter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchChapter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              limitLevel_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              startAwardLists_ = input.readBytes();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                businessmanList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              businessmanList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                businessmanList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                businessmanList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                businessmanSatioList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              businessmanSatioList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                businessmanSatioList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                businessmanSatioList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                normalMatchList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              normalMatchList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                normalMatchList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                normalMatchList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                eliteMatchList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              eliteMatchList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                eliteMatchList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                eliteMatchList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 66: {
              bitField0_ |= 0x00000008;
              mapFile_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000010;
              name_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          businessmanList_ = java.util.Collections.unmodifiableList(businessmanList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          businessmanSatioList_ = java.util.Collections.unmodifiableList(businessmanSatioList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          normalMatchList_ = java.util.Collections.unmodifiableList(normalMatchList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          eliteMatchList_ = java.util.Collections.unmodifiableList(eliteMatchList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchChapter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchChapter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.MatchProbuf.MatchChapter.class, com.cwa.prototype.protobuf.MatchProbuf.MatchChapter.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchChapter> PARSER =
        new com.google.protobuf.AbstractParser<MatchChapter>() {
      public MatchChapter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchChapter(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchChapter> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 limitLevel = 2;
    public static final int LIMITLEVEL_FIELD_NUMBER = 2;
    private int limitLevel_;
    /**
     * <code>required int32 limitLevel = 2;</code>
     *
     * <pre>
     * 限制等级
     * </pre>
     */
    public boolean hasLimitLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 limitLevel = 2;</code>
     *
     * <pre>
     * 限制等级
     * </pre>
     */
    public int getLimitLevel() {
      return limitLevel_;
    }

    // required string startAwardLists = 3;
    public static final int STARTAWARDLISTS_FIELD_NUMBER = 3;
    private java.lang.Object startAwardLists_;
    /**
     * <code>required string startAwardLists = 3;</code>
     *
     * <pre>
     * 星级奖励
     * </pre>
     */
    public boolean hasStartAwardLists() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string startAwardLists = 3;</code>
     *
     * <pre>
     * 星级奖励
     * </pre>
     */
    public java.lang.String getStartAwardLists() {
      java.lang.Object ref = startAwardLists_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          startAwardLists_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string startAwardLists = 3;</code>
     *
     * <pre>
     * 星级奖励
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStartAwardListsBytes() {
      java.lang.Object ref = startAwardLists_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        startAwardLists_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 businessmanList = 4;
    public static final int BUSINESSMANLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> businessmanList_;
    /**
     * <code>repeated int32 businessmanList = 4;</code>
     *
     * <pre>
     * 商人
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBusinessmanListList() {
      return businessmanList_;
    }
    /**
     * <code>repeated int32 businessmanList = 4;</code>
     *
     * <pre>
     * 商人
     * </pre>
     */
    public int getBusinessmanListCount() {
      return businessmanList_.size();
    }
    /**
     * <code>repeated int32 businessmanList = 4;</code>
     *
     * <pre>
     * 商人
     * </pre>
     */
    public int getBusinessmanList(int index) {
      return businessmanList_.get(index);
    }

    // repeated int32 businessmanSatioList = 5;
    public static final int BUSINESSMANSATIOLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> businessmanSatioList_;
    /**
     * <code>repeated int32 businessmanSatioList = 5;</code>
     *
     * <pre>
     * 商人几率系数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBusinessmanSatioListList() {
      return businessmanSatioList_;
    }
    /**
     * <code>repeated int32 businessmanSatioList = 5;</code>
     *
     * <pre>
     * 商人几率系数
     * </pre>
     */
    public int getBusinessmanSatioListCount() {
      return businessmanSatioList_.size();
    }
    /**
     * <code>repeated int32 businessmanSatioList = 5;</code>
     *
     * <pre>
     * 商人几率系数
     * </pre>
     */
    public int getBusinessmanSatioList(int index) {
      return businessmanSatioList_.get(index);
    }

    // repeated int32 normalMatchList = 6;
    public static final int NORMALMATCHLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> normalMatchList_;
    /**
     * <code>repeated int32 normalMatchList = 6;</code>
     *
     * <pre>
     * 普通关
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getNormalMatchListList() {
      return normalMatchList_;
    }
    /**
     * <code>repeated int32 normalMatchList = 6;</code>
     *
     * <pre>
     * 普通关
     * </pre>
     */
    public int getNormalMatchListCount() {
      return normalMatchList_.size();
    }
    /**
     * <code>repeated int32 normalMatchList = 6;</code>
     *
     * <pre>
     * 普通关
     * </pre>
     */
    public int getNormalMatchList(int index) {
      return normalMatchList_.get(index);
    }

    // repeated int32 eliteMatchList = 7;
    public static final int ELITEMATCHLIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> eliteMatchList_;
    /**
     * <code>repeated int32 eliteMatchList = 7;</code>
     *
     * <pre>
     * 精英关
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEliteMatchListList() {
      return eliteMatchList_;
    }
    /**
     * <code>repeated int32 eliteMatchList = 7;</code>
     *
     * <pre>
     * 精英关
     * </pre>
     */
    public int getEliteMatchListCount() {
      return eliteMatchList_.size();
    }
    /**
     * <code>repeated int32 eliteMatchList = 7;</code>
     *
     * <pre>
     * 精英关
     * </pre>
     */
    public int getEliteMatchList(int index) {
      return eliteMatchList_.get(index);
    }

    // required string mapFile = 8;
    public static final int MAPFILE_FIELD_NUMBER = 8;
    private java.lang.Object mapFile_;
    /**
     * <code>required string mapFile = 8;</code>
     *
     * <pre>
     * 地图XML(数据前缀，图片前缀，图片数量)
     * </pre>
     */
    public boolean hasMapFile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string mapFile = 8;</code>
     *
     * <pre>
     * 地图XML(数据前缀，图片前缀，图片数量)
     * </pre>
     */
    public java.lang.String getMapFile() {
      java.lang.Object ref = mapFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mapFile_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mapFile = 8;</code>
     *
     * <pre>
     * 地图XML(数据前缀，图片前缀，图片数量)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMapFileBytes() {
      java.lang.Object ref = mapFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string name = 9;
    public static final int NAME_FIELD_NUMBER = 9;
    private java.lang.Object name_;
    /**
     * <code>required string name = 9;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string name = 9;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 9;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      keyId_ = 0;
      limitLevel_ = 0;
      startAwardLists_ = "";
      businessmanList_ = java.util.Collections.emptyList();
      businessmanSatioList_ = java.util.Collections.emptyList();
      normalMatchList_ = java.util.Collections.emptyList();
      eliteMatchList_ = java.util.Collections.emptyList();
      mapFile_ = "";
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLimitLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartAwardLists()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapFile()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, limitLevel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getStartAwardListsBytes());
      }
      for (int i = 0; i < businessmanList_.size(); i++) {
        output.writeInt32(4, businessmanList_.get(i));
      }
      for (int i = 0; i < businessmanSatioList_.size(); i++) {
        output.writeInt32(5, businessmanSatioList_.get(i));
      }
      for (int i = 0; i < normalMatchList_.size(); i++) {
        output.writeInt32(6, normalMatchList_.get(i));
      }
      for (int i = 0; i < eliteMatchList_.size(); i++) {
        output.writeInt32(7, eliteMatchList_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(8, getMapFileBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(9, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, limitLevel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getStartAwardListsBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < businessmanList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(businessmanList_.get(i));
        }
        size += dataSize;
        size += 1 * getBusinessmanListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < businessmanSatioList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(businessmanSatioList_.get(i));
        }
        size += dataSize;
        size += 1 * getBusinessmanSatioListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < normalMatchList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(normalMatchList_.get(i));
        }
        size += dataSize;
        size += 1 * getNormalMatchListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < eliteMatchList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(eliteMatchList_.get(i));
        }
        size += dataSize;
        size += 1 * getEliteMatchListList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getMapFileBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.MatchProbuf.MatchChapter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MatchChapter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.MatchProbuf.MatchChapterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchChapter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchChapter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.MatchProbuf.MatchChapter.class, com.cwa.prototype.protobuf.MatchProbuf.MatchChapter.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.MatchProbuf.MatchChapter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        limitLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        startAwardLists_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        businessmanList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        businessmanSatioList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        normalMatchList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        eliteMatchList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        mapFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchChapter_descriptor;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchChapter getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.MatchChapter.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchChapter build() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchChapter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchChapter buildPartial() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchChapter result = new com.cwa.prototype.protobuf.MatchProbuf.MatchChapter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.limitLevel_ = limitLevel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startAwardLists_ = startAwardLists_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          businessmanList_ = java.util.Collections.unmodifiableList(businessmanList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.businessmanList_ = businessmanList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          businessmanSatioList_ = java.util.Collections.unmodifiableList(businessmanSatioList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.businessmanSatioList_ = businessmanSatioList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          normalMatchList_ = java.util.Collections.unmodifiableList(normalMatchList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.normalMatchList_ = normalMatchList_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          eliteMatchList_ = java.util.Collections.unmodifiableList(eliteMatchList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.eliteMatchList_ = eliteMatchList_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mapFile_ = mapFile_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.MatchProbuf.MatchChapter) {
          return mergeFrom((com.cwa.prototype.protobuf.MatchProbuf.MatchChapter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.MatchProbuf.MatchChapter other) {
        if (other == com.cwa.prototype.protobuf.MatchProbuf.MatchChapter.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasLimitLevel()) {
          setLimitLevel(other.getLimitLevel());
        }
        if (other.hasStartAwardLists()) {
          bitField0_ |= 0x00000004;
          startAwardLists_ = other.startAwardLists_;
          onChanged();
        }
        if (!other.businessmanList_.isEmpty()) {
          if (businessmanList_.isEmpty()) {
            businessmanList_ = other.businessmanList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBusinessmanListIsMutable();
            businessmanList_.addAll(other.businessmanList_);
          }
          onChanged();
        }
        if (!other.businessmanSatioList_.isEmpty()) {
          if (businessmanSatioList_.isEmpty()) {
            businessmanSatioList_ = other.businessmanSatioList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureBusinessmanSatioListIsMutable();
            businessmanSatioList_.addAll(other.businessmanSatioList_);
          }
          onChanged();
        }
        if (!other.normalMatchList_.isEmpty()) {
          if (normalMatchList_.isEmpty()) {
            normalMatchList_ = other.normalMatchList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureNormalMatchListIsMutable();
            normalMatchList_.addAll(other.normalMatchList_);
          }
          onChanged();
        }
        if (!other.eliteMatchList_.isEmpty()) {
          if (eliteMatchList_.isEmpty()) {
            eliteMatchList_ = other.eliteMatchList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureEliteMatchListIsMutable();
            eliteMatchList_.addAll(other.eliteMatchList_);
          }
          onChanged();
        }
        if (other.hasMapFile()) {
          bitField0_ |= 0x00000080;
          mapFile_ = other.mapFile_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000100;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasLimitLevel()) {
          
          return false;
        }
        if (!hasStartAwardLists()) {
          
          return false;
        }
        if (!hasMapFile()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.MatchProbuf.MatchChapter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.MatchProbuf.MatchChapter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 limitLevel = 2;
      private int limitLevel_ ;
      /**
       * <code>required int32 limitLevel = 2;</code>
       *
       * <pre>
       * 限制等级
       * </pre>
       */
      public boolean hasLimitLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 limitLevel = 2;</code>
       *
       * <pre>
       * 限制等级
       * </pre>
       */
      public int getLimitLevel() {
        return limitLevel_;
      }
      /**
       * <code>required int32 limitLevel = 2;</code>
       *
       * <pre>
       * 限制等级
       * </pre>
       */
      public Builder setLimitLevel(int value) {
        bitField0_ |= 0x00000002;
        limitLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 limitLevel = 2;</code>
       *
       * <pre>
       * 限制等级
       * </pre>
       */
      public Builder clearLimitLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        limitLevel_ = 0;
        onChanged();
        return this;
      }

      // required string startAwardLists = 3;
      private java.lang.Object startAwardLists_ = "";
      /**
       * <code>required string startAwardLists = 3;</code>
       *
       * <pre>
       * 星级奖励
       * </pre>
       */
      public boolean hasStartAwardLists() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string startAwardLists = 3;</code>
       *
       * <pre>
       * 星级奖励
       * </pre>
       */
      public java.lang.String getStartAwardLists() {
        java.lang.Object ref = startAwardLists_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          startAwardLists_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string startAwardLists = 3;</code>
       *
       * <pre>
       * 星级奖励
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStartAwardListsBytes() {
        java.lang.Object ref = startAwardLists_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          startAwardLists_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string startAwardLists = 3;</code>
       *
       * <pre>
       * 星级奖励
       * </pre>
       */
      public Builder setStartAwardLists(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        startAwardLists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string startAwardLists = 3;</code>
       *
       * <pre>
       * 星级奖励
       * </pre>
       */
      public Builder clearStartAwardLists() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startAwardLists_ = getDefaultInstance().getStartAwardLists();
        onChanged();
        return this;
      }
      /**
       * <code>required string startAwardLists = 3;</code>
       *
       * <pre>
       * 星级奖励
       * </pre>
       */
      public Builder setStartAwardListsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        startAwardLists_ = value;
        onChanged();
        return this;
      }

      // repeated int32 businessmanList = 4;
      private java.util.List<java.lang.Integer> businessmanList_ = java.util.Collections.emptyList();
      private void ensureBusinessmanListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          businessmanList_ = new java.util.ArrayList<java.lang.Integer>(businessmanList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 businessmanList = 4;</code>
       *
       * <pre>
       * 商人
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBusinessmanListList() {
        return java.util.Collections.unmodifiableList(businessmanList_);
      }
      /**
       * <code>repeated int32 businessmanList = 4;</code>
       *
       * <pre>
       * 商人
       * </pre>
       */
      public int getBusinessmanListCount() {
        return businessmanList_.size();
      }
      /**
       * <code>repeated int32 businessmanList = 4;</code>
       *
       * <pre>
       * 商人
       * </pre>
       */
      public int getBusinessmanList(int index) {
        return businessmanList_.get(index);
      }
      /**
       * <code>repeated int32 businessmanList = 4;</code>
       *
       * <pre>
       * 商人
       * </pre>
       */
      public Builder setBusinessmanList(
          int index, int value) {
        ensureBusinessmanListIsMutable();
        businessmanList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 businessmanList = 4;</code>
       *
       * <pre>
       * 商人
       * </pre>
       */
      public Builder addBusinessmanList(int value) {
        ensureBusinessmanListIsMutable();
        businessmanList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 businessmanList = 4;</code>
       *
       * <pre>
       * 商人
       * </pre>
       */
      public Builder addAllBusinessmanList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBusinessmanListIsMutable();
        super.addAll(values, businessmanList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 businessmanList = 4;</code>
       *
       * <pre>
       * 商人
       * </pre>
       */
      public Builder clearBusinessmanList() {
        businessmanList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 businessmanSatioList = 5;
      private java.util.List<java.lang.Integer> businessmanSatioList_ = java.util.Collections.emptyList();
      private void ensureBusinessmanSatioListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          businessmanSatioList_ = new java.util.ArrayList<java.lang.Integer>(businessmanSatioList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 businessmanSatioList = 5;</code>
       *
       * <pre>
       * 商人几率系数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBusinessmanSatioListList() {
        return java.util.Collections.unmodifiableList(businessmanSatioList_);
      }
      /**
       * <code>repeated int32 businessmanSatioList = 5;</code>
       *
       * <pre>
       * 商人几率系数
       * </pre>
       */
      public int getBusinessmanSatioListCount() {
        return businessmanSatioList_.size();
      }
      /**
       * <code>repeated int32 businessmanSatioList = 5;</code>
       *
       * <pre>
       * 商人几率系数
       * </pre>
       */
      public int getBusinessmanSatioList(int index) {
        return businessmanSatioList_.get(index);
      }
      /**
       * <code>repeated int32 businessmanSatioList = 5;</code>
       *
       * <pre>
       * 商人几率系数
       * </pre>
       */
      public Builder setBusinessmanSatioList(
          int index, int value) {
        ensureBusinessmanSatioListIsMutable();
        businessmanSatioList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 businessmanSatioList = 5;</code>
       *
       * <pre>
       * 商人几率系数
       * </pre>
       */
      public Builder addBusinessmanSatioList(int value) {
        ensureBusinessmanSatioListIsMutable();
        businessmanSatioList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 businessmanSatioList = 5;</code>
       *
       * <pre>
       * 商人几率系数
       * </pre>
       */
      public Builder addAllBusinessmanSatioList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBusinessmanSatioListIsMutable();
        super.addAll(values, businessmanSatioList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 businessmanSatioList = 5;</code>
       *
       * <pre>
       * 商人几率系数
       * </pre>
       */
      public Builder clearBusinessmanSatioList() {
        businessmanSatioList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 normalMatchList = 6;
      private java.util.List<java.lang.Integer> normalMatchList_ = java.util.Collections.emptyList();
      private void ensureNormalMatchListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          normalMatchList_ = new java.util.ArrayList<java.lang.Integer>(normalMatchList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 normalMatchList = 6;</code>
       *
       * <pre>
       * 普通关
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getNormalMatchListList() {
        return java.util.Collections.unmodifiableList(normalMatchList_);
      }
      /**
       * <code>repeated int32 normalMatchList = 6;</code>
       *
       * <pre>
       * 普通关
       * </pre>
       */
      public int getNormalMatchListCount() {
        return normalMatchList_.size();
      }
      /**
       * <code>repeated int32 normalMatchList = 6;</code>
       *
       * <pre>
       * 普通关
       * </pre>
       */
      public int getNormalMatchList(int index) {
        return normalMatchList_.get(index);
      }
      /**
       * <code>repeated int32 normalMatchList = 6;</code>
       *
       * <pre>
       * 普通关
       * </pre>
       */
      public Builder setNormalMatchList(
          int index, int value) {
        ensureNormalMatchListIsMutable();
        normalMatchList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 normalMatchList = 6;</code>
       *
       * <pre>
       * 普通关
       * </pre>
       */
      public Builder addNormalMatchList(int value) {
        ensureNormalMatchListIsMutable();
        normalMatchList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 normalMatchList = 6;</code>
       *
       * <pre>
       * 普通关
       * </pre>
       */
      public Builder addAllNormalMatchList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNormalMatchListIsMutable();
        super.addAll(values, normalMatchList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 normalMatchList = 6;</code>
       *
       * <pre>
       * 普通关
       * </pre>
       */
      public Builder clearNormalMatchList() {
        normalMatchList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 eliteMatchList = 7;
      private java.util.List<java.lang.Integer> eliteMatchList_ = java.util.Collections.emptyList();
      private void ensureEliteMatchListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          eliteMatchList_ = new java.util.ArrayList<java.lang.Integer>(eliteMatchList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 eliteMatchList = 7;</code>
       *
       * <pre>
       * 精英关
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEliteMatchListList() {
        return java.util.Collections.unmodifiableList(eliteMatchList_);
      }
      /**
       * <code>repeated int32 eliteMatchList = 7;</code>
       *
       * <pre>
       * 精英关
       * </pre>
       */
      public int getEliteMatchListCount() {
        return eliteMatchList_.size();
      }
      /**
       * <code>repeated int32 eliteMatchList = 7;</code>
       *
       * <pre>
       * 精英关
       * </pre>
       */
      public int getEliteMatchList(int index) {
        return eliteMatchList_.get(index);
      }
      /**
       * <code>repeated int32 eliteMatchList = 7;</code>
       *
       * <pre>
       * 精英关
       * </pre>
       */
      public Builder setEliteMatchList(
          int index, int value) {
        ensureEliteMatchListIsMutable();
        eliteMatchList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 eliteMatchList = 7;</code>
       *
       * <pre>
       * 精英关
       * </pre>
       */
      public Builder addEliteMatchList(int value) {
        ensureEliteMatchListIsMutable();
        eliteMatchList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 eliteMatchList = 7;</code>
       *
       * <pre>
       * 精英关
       * </pre>
       */
      public Builder addAllEliteMatchList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEliteMatchListIsMutable();
        super.addAll(values, eliteMatchList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 eliteMatchList = 7;</code>
       *
       * <pre>
       * 精英关
       * </pre>
       */
      public Builder clearEliteMatchList() {
        eliteMatchList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // required string mapFile = 8;
      private java.lang.Object mapFile_ = "";
      /**
       * <code>required string mapFile = 8;</code>
       *
       * <pre>
       * 地图XML(数据前缀，图片前缀，图片数量)
       * </pre>
       */
      public boolean hasMapFile() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required string mapFile = 8;</code>
       *
       * <pre>
       * 地图XML(数据前缀，图片前缀，图片数量)
       * </pre>
       */
      public java.lang.String getMapFile() {
        java.lang.Object ref = mapFile_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mapFile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mapFile = 8;</code>
       *
       * <pre>
       * 地图XML(数据前缀，图片前缀，图片数量)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMapFileBytes() {
        java.lang.Object ref = mapFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mapFile = 8;</code>
       *
       * <pre>
       * 地图XML(数据前缀，图片前缀，图片数量)
       * </pre>
       */
      public Builder setMapFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        mapFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mapFile = 8;</code>
       *
       * <pre>
       * 地图XML(数据前缀，图片前缀，图片数量)
       * </pre>
       */
      public Builder clearMapFile() {
        bitField0_ = (bitField0_ & ~0x00000080);
        mapFile_ = getDefaultInstance().getMapFile();
        onChanged();
        return this;
      }
      /**
       * <code>required string mapFile = 8;</code>
       *
       * <pre>
       * 地图XML(数据前缀，图片前缀，图片数量)
       * </pre>
       */
      public Builder setMapFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        mapFile_ = value;
        onChanged();
        return this;
      }

      // required string name = 9;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 9;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required string name = 9;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 9;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 9;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 9;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000100);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 9;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        name_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MatchChapter)
    }

    static {
      defaultInstance = new MatchChapter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MatchChapter)
  }

  public interface MatchOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    int getKeyId();

    // required int32 chapter = 2;
    /**
     * <code>required int32 chapter = 2;</code>
     *
     * <pre>
     * 章节
     * </pre>
     */
    boolean hasChapter();
    /**
     * <code>required int32 chapter = 2;</code>
     *
     * <pre>
     * 章节
     * </pre>
     */
    int getChapter();

    // required int32 normalIndex = 3;
    /**
     * <code>required int32 normalIndex = 3;</code>
     *
     * <pre>
     * 关卡
     * </pre>
     */
    boolean hasNormalIndex();
    /**
     * <code>required int32 normalIndex = 3;</code>
     *
     * <pre>
     * 关卡
     * </pre>
     */
    int getNormalIndex();

    // required int32 type = 4;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 关卡类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 关卡类型
     * </pre>
     */
    int getType();

    // required int32 concealCondition = 5;
    /**
     * <code>required int32 concealCondition = 5;</code>
     *
     * <pre>
     * 隐藏关开启条件
     * </pre>
     */
    boolean hasConcealCondition();
    /**
     * <code>required int32 concealCondition = 5;</code>
     *
     * <pre>
     * 隐藏关开启条件
     * </pre>
     */
    int getConcealCondition();

    // required int32 concealTime = 6;
    /**
     * <code>required int32 concealTime = 6;</code>
     *
     * <pre>
     * 隐藏关卡时间限制
     * </pre>
     */
    boolean hasConcealTime();
    /**
     * <code>required int32 concealTime = 6;</code>
     *
     * <pre>
     * 隐藏关卡时间限制
     * </pre>
     */
    int getConcealTime();

    // required int32 requirePower = 7;
    /**
     * <code>required int32 requirePower = 7;</code>
     *
     * <pre>
     * 消耗体力
     * </pre>
     */
    boolean hasRequirePower();
    /**
     * <code>required int32 requirePower = 7;</code>
     *
     * <pre>
     * 消耗体力
     * </pre>
     */
    int getRequirePower();

    // required int32 concealPasscard = 8;
    /**
     * <code>required int32 concealPasscard = 8;</code>
     *
     * <pre>
     * 开启隐藏关
     * </pre>
     */
    boolean hasConcealPasscard();
    /**
     * <code>required int32 concealPasscard = 8;</code>
     *
     * <pre>
     * 开启隐藏关
     * </pre>
     */
    int getConcealPasscard();

    // required int32 concealRatios = 9;
    /**
     * <code>required int32 concealRatios = 9;</code>
     *
     * <pre>
     * 开启几率
     * </pre>
     */
    boolean hasConcealRatios();
    /**
     * <code>required int32 concealRatios = 9;</code>
     *
     * <pre>
     * 开启几率
     * </pre>
     */
    int getConcealRatios();

    // repeated int32 dropList = 10;
    /**
     * <code>repeated int32 dropList = 10;</code>
     *
     * <pre>
     * 掉落
     * </pre>
     */
    java.util.List<java.lang.Integer> getDropListList();
    /**
     * <code>repeated int32 dropList = 10;</code>
     *
     * <pre>
     * 掉落
     * </pre>
     */
    int getDropListCount();
    /**
     * <code>repeated int32 dropList = 10;</code>
     *
     * <pre>
     * 掉落
     * </pre>
     */
    int getDropList(int index);

    // required string map = 11;
    /**
     * <code>required string map = 11;</code>
     *
     * <pre>
     * 地图
     * </pre>
     */
    boolean hasMap();
    /**
     * <code>required string map = 11;</code>
     *
     * <pre>
     * 地图
     * </pre>
     */
    java.lang.String getMap();
    /**
     * <code>required string map = 11;</code>
     *
     * <pre>
     * 地图
     * </pre>
     */
    com.google.protobuf.ByteString
        getMapBytes();

    // required string name = 12;
    /**
     * <code>required string name = 12;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 12;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 12;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string desc = 13;
    /**
     * <code>required string desc = 13;</code>
     *
     * <pre>
     * 介绍
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 13;</code>
     *
     * <pre>
     * 介绍
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 13;</code>
     *
     * <pre>
     * 介绍
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();
  }
  /**
   * Protobuf type {@code Match}
   */
  public static final class Match extends
      com.google.protobuf.GeneratedMessage
      implements MatchOrBuilder {
    // Use Match.newBuilder() to construct.
    private Match(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Match(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Match defaultInstance;
    public static Match getDefaultInstance() {
      return defaultInstance;
    }

    public Match getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Match(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chapter_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              normalIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              concealCondition_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              concealTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              requirePower_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              concealPasscard_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              concealRatios_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                dropList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              dropList_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                dropList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                dropList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 90: {
              bitField0_ |= 0x00000200;
              map_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000400;
              name_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000800;
              desc_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          dropList_ = java.util.Collections.unmodifiableList(dropList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_Match_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_Match_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.MatchProbuf.Match.class, com.cwa.prototype.protobuf.MatchProbuf.Match.Builder.class);
    }

    public static com.google.protobuf.Parser<Match> PARSER =
        new com.google.protobuf.AbstractParser<Match>() {
      public Match parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Match(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Match> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 chapter = 2;
    public static final int CHAPTER_FIELD_NUMBER = 2;
    private int chapter_;
    /**
     * <code>required int32 chapter = 2;</code>
     *
     * <pre>
     * 章节
     * </pre>
     */
    public boolean hasChapter() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 chapter = 2;</code>
     *
     * <pre>
     * 章节
     * </pre>
     */
    public int getChapter() {
      return chapter_;
    }

    // required int32 normalIndex = 3;
    public static final int NORMALINDEX_FIELD_NUMBER = 3;
    private int normalIndex_;
    /**
     * <code>required int32 normalIndex = 3;</code>
     *
     * <pre>
     * 关卡
     * </pre>
     */
    public boolean hasNormalIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 normalIndex = 3;</code>
     *
     * <pre>
     * 关卡
     * </pre>
     */
    public int getNormalIndex() {
      return normalIndex_;
    }

    // required int32 type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 关卡类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 关卡类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 concealCondition = 5;
    public static final int CONCEALCONDITION_FIELD_NUMBER = 5;
    private int concealCondition_;
    /**
     * <code>required int32 concealCondition = 5;</code>
     *
     * <pre>
     * 隐藏关开启条件
     * </pre>
     */
    public boolean hasConcealCondition() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 concealCondition = 5;</code>
     *
     * <pre>
     * 隐藏关开启条件
     * </pre>
     */
    public int getConcealCondition() {
      return concealCondition_;
    }

    // required int32 concealTime = 6;
    public static final int CONCEALTIME_FIELD_NUMBER = 6;
    private int concealTime_;
    /**
     * <code>required int32 concealTime = 6;</code>
     *
     * <pre>
     * 隐藏关卡时间限制
     * </pre>
     */
    public boolean hasConcealTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 concealTime = 6;</code>
     *
     * <pre>
     * 隐藏关卡时间限制
     * </pre>
     */
    public int getConcealTime() {
      return concealTime_;
    }

    // required int32 requirePower = 7;
    public static final int REQUIREPOWER_FIELD_NUMBER = 7;
    private int requirePower_;
    /**
     * <code>required int32 requirePower = 7;</code>
     *
     * <pre>
     * 消耗体力
     * </pre>
     */
    public boolean hasRequirePower() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 requirePower = 7;</code>
     *
     * <pre>
     * 消耗体力
     * </pre>
     */
    public int getRequirePower() {
      return requirePower_;
    }

    // required int32 concealPasscard = 8;
    public static final int CONCEALPASSCARD_FIELD_NUMBER = 8;
    private int concealPasscard_;
    /**
     * <code>required int32 concealPasscard = 8;</code>
     *
     * <pre>
     * 开启隐藏关
     * </pre>
     */
    public boolean hasConcealPasscard() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 concealPasscard = 8;</code>
     *
     * <pre>
     * 开启隐藏关
     * </pre>
     */
    public int getConcealPasscard() {
      return concealPasscard_;
    }

    // required int32 concealRatios = 9;
    public static final int CONCEALRATIOS_FIELD_NUMBER = 9;
    private int concealRatios_;
    /**
     * <code>required int32 concealRatios = 9;</code>
     *
     * <pre>
     * 开启几率
     * </pre>
     */
    public boolean hasConcealRatios() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 concealRatios = 9;</code>
     *
     * <pre>
     * 开启几率
     * </pre>
     */
    public int getConcealRatios() {
      return concealRatios_;
    }

    // repeated int32 dropList = 10;
    public static final int DROPLIST_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> dropList_;
    /**
     * <code>repeated int32 dropList = 10;</code>
     *
     * <pre>
     * 掉落
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDropListList() {
      return dropList_;
    }
    /**
     * <code>repeated int32 dropList = 10;</code>
     *
     * <pre>
     * 掉落
     * </pre>
     */
    public int getDropListCount() {
      return dropList_.size();
    }
    /**
     * <code>repeated int32 dropList = 10;</code>
     *
     * <pre>
     * 掉落
     * </pre>
     */
    public int getDropList(int index) {
      return dropList_.get(index);
    }

    // required string map = 11;
    public static final int MAP_FIELD_NUMBER = 11;
    private java.lang.Object map_;
    /**
     * <code>required string map = 11;</code>
     *
     * <pre>
     * 地图
     * </pre>
     */
    public boolean hasMap() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required string map = 11;</code>
     *
     * <pre>
     * 地图
     * </pre>
     */
    public java.lang.String getMap() {
      java.lang.Object ref = map_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          map_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string map = 11;</code>
     *
     * <pre>
     * 地图
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMapBytes() {
      java.lang.Object ref = map_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        map_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string name = 12;
    public static final int NAME_FIELD_NUMBER = 12;
    private java.lang.Object name_;
    /**
     * <code>required string name = 12;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required string name = 12;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 12;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string desc = 13;
    public static final int DESC_FIELD_NUMBER = 13;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 13;</code>
     *
     * <pre>
     * 介绍
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required string desc = 13;</code>
     *
     * <pre>
     * 介绍
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 13;</code>
     *
     * <pre>
     * 介绍
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      keyId_ = 0;
      chapter_ = 0;
      normalIndex_ = 0;
      type_ = 0;
      concealCondition_ = 0;
      concealTime_ = 0;
      requirePower_ = 0;
      concealPasscard_ = 0;
      concealRatios_ = 0;
      dropList_ = java.util.Collections.emptyList();
      map_ = "";
      name_ = "";
      desc_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChapter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNormalIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConcealCondition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConcealTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequirePower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConcealPasscard()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConcealRatios()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMap()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, chapter_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, normalIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, concealCondition_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, concealTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, requirePower_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, concealPasscard_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, concealRatios_);
      }
      for (int i = 0; i < dropList_.size(); i++) {
        output.writeInt32(10, dropList_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, getMapBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getNameBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(13, getDescBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, chapter_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, normalIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, concealCondition_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, concealTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, requirePower_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, concealPasscard_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, concealRatios_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dropList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dropList_.get(i));
        }
        size += dataSize;
        size += 1 * getDropListList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getMapBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getNameBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getDescBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.Match parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.MatchProbuf.Match prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Match}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.MatchProbuf.MatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_Match_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_Match_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.MatchProbuf.Match.class, com.cwa.prototype.protobuf.MatchProbuf.Match.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.MatchProbuf.Match.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        chapter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        normalIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        concealCondition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        concealTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        requirePower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        concealPasscard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        concealRatios_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        dropList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        map_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_Match_descriptor;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.Match getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.Match.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.MatchProbuf.Match build() {
        com.cwa.prototype.protobuf.MatchProbuf.Match result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.Match buildPartial() {
        com.cwa.prototype.protobuf.MatchProbuf.Match result = new com.cwa.prototype.protobuf.MatchProbuf.Match(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chapter_ = chapter_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.normalIndex_ = normalIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.concealCondition_ = concealCondition_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.concealTime_ = concealTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.requirePower_ = requirePower_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.concealPasscard_ = concealPasscard_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.concealRatios_ = concealRatios_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          dropList_ = java.util.Collections.unmodifiableList(dropList_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.dropList_ = dropList_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.map_ = map_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.desc_ = desc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.MatchProbuf.Match) {
          return mergeFrom((com.cwa.prototype.protobuf.MatchProbuf.Match)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.MatchProbuf.Match other) {
        if (other == com.cwa.prototype.protobuf.MatchProbuf.Match.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasChapter()) {
          setChapter(other.getChapter());
        }
        if (other.hasNormalIndex()) {
          setNormalIndex(other.getNormalIndex());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasConcealCondition()) {
          setConcealCondition(other.getConcealCondition());
        }
        if (other.hasConcealTime()) {
          setConcealTime(other.getConcealTime());
        }
        if (other.hasRequirePower()) {
          setRequirePower(other.getRequirePower());
        }
        if (other.hasConcealPasscard()) {
          setConcealPasscard(other.getConcealPasscard());
        }
        if (other.hasConcealRatios()) {
          setConcealRatios(other.getConcealRatios());
        }
        if (!other.dropList_.isEmpty()) {
          if (dropList_.isEmpty()) {
            dropList_ = other.dropList_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureDropListIsMutable();
            dropList_.addAll(other.dropList_);
          }
          onChanged();
        }
        if (other.hasMap()) {
          bitField0_ |= 0x00000400;
          map_ = other.map_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000800;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00001000;
          desc_ = other.desc_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasChapter()) {
          
          return false;
        }
        if (!hasNormalIndex()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasConcealCondition()) {
          
          return false;
        }
        if (!hasConcealTime()) {
          
          return false;
        }
        if (!hasRequirePower()) {
          
          return false;
        }
        if (!hasConcealPasscard()) {
          
          return false;
        }
        if (!hasConcealRatios()) {
          
          return false;
        }
        if (!hasMap()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.MatchProbuf.Match parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.MatchProbuf.Match) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 chapter = 2;
      private int chapter_ ;
      /**
       * <code>required int32 chapter = 2;</code>
       *
       * <pre>
       * 章节
       * </pre>
       */
      public boolean hasChapter() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 chapter = 2;</code>
       *
       * <pre>
       * 章节
       * </pre>
       */
      public int getChapter() {
        return chapter_;
      }
      /**
       * <code>required int32 chapter = 2;</code>
       *
       * <pre>
       * 章节
       * </pre>
       */
      public Builder setChapter(int value) {
        bitField0_ |= 0x00000002;
        chapter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 chapter = 2;</code>
       *
       * <pre>
       * 章节
       * </pre>
       */
      public Builder clearChapter() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chapter_ = 0;
        onChanged();
        return this;
      }

      // required int32 normalIndex = 3;
      private int normalIndex_ ;
      /**
       * <code>required int32 normalIndex = 3;</code>
       *
       * <pre>
       * 关卡
       * </pre>
       */
      public boolean hasNormalIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 normalIndex = 3;</code>
       *
       * <pre>
       * 关卡
       * </pre>
       */
      public int getNormalIndex() {
        return normalIndex_;
      }
      /**
       * <code>required int32 normalIndex = 3;</code>
       *
       * <pre>
       * 关卡
       * </pre>
       */
      public Builder setNormalIndex(int value) {
        bitField0_ |= 0x00000004;
        normalIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 normalIndex = 3;</code>
       *
       * <pre>
       * 关卡
       * </pre>
       */
      public Builder clearNormalIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        normalIndex_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 4;
      private int type_ ;
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 关卡类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 关卡类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 关卡类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 关卡类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 concealCondition = 5;
      private int concealCondition_ ;
      /**
       * <code>required int32 concealCondition = 5;</code>
       *
       * <pre>
       * 隐藏关开启条件
       * </pre>
       */
      public boolean hasConcealCondition() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 concealCondition = 5;</code>
       *
       * <pre>
       * 隐藏关开启条件
       * </pre>
       */
      public int getConcealCondition() {
        return concealCondition_;
      }
      /**
       * <code>required int32 concealCondition = 5;</code>
       *
       * <pre>
       * 隐藏关开启条件
       * </pre>
       */
      public Builder setConcealCondition(int value) {
        bitField0_ |= 0x00000010;
        concealCondition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 concealCondition = 5;</code>
       *
       * <pre>
       * 隐藏关开启条件
       * </pre>
       */
      public Builder clearConcealCondition() {
        bitField0_ = (bitField0_ & ~0x00000010);
        concealCondition_ = 0;
        onChanged();
        return this;
      }

      // required int32 concealTime = 6;
      private int concealTime_ ;
      /**
       * <code>required int32 concealTime = 6;</code>
       *
       * <pre>
       * 隐藏关卡时间限制
       * </pre>
       */
      public boolean hasConcealTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 concealTime = 6;</code>
       *
       * <pre>
       * 隐藏关卡时间限制
       * </pre>
       */
      public int getConcealTime() {
        return concealTime_;
      }
      /**
       * <code>required int32 concealTime = 6;</code>
       *
       * <pre>
       * 隐藏关卡时间限制
       * </pre>
       */
      public Builder setConcealTime(int value) {
        bitField0_ |= 0x00000020;
        concealTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 concealTime = 6;</code>
       *
       * <pre>
       * 隐藏关卡时间限制
       * </pre>
       */
      public Builder clearConcealTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        concealTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 requirePower = 7;
      private int requirePower_ ;
      /**
       * <code>required int32 requirePower = 7;</code>
       *
       * <pre>
       * 消耗体力
       * </pre>
       */
      public boolean hasRequirePower() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 requirePower = 7;</code>
       *
       * <pre>
       * 消耗体力
       * </pre>
       */
      public int getRequirePower() {
        return requirePower_;
      }
      /**
       * <code>required int32 requirePower = 7;</code>
       *
       * <pre>
       * 消耗体力
       * </pre>
       */
      public Builder setRequirePower(int value) {
        bitField0_ |= 0x00000040;
        requirePower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requirePower = 7;</code>
       *
       * <pre>
       * 消耗体力
       * </pre>
       */
      public Builder clearRequirePower() {
        bitField0_ = (bitField0_ & ~0x00000040);
        requirePower_ = 0;
        onChanged();
        return this;
      }

      // required int32 concealPasscard = 8;
      private int concealPasscard_ ;
      /**
       * <code>required int32 concealPasscard = 8;</code>
       *
       * <pre>
       * 开启隐藏关
       * </pre>
       */
      public boolean hasConcealPasscard() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 concealPasscard = 8;</code>
       *
       * <pre>
       * 开启隐藏关
       * </pre>
       */
      public int getConcealPasscard() {
        return concealPasscard_;
      }
      /**
       * <code>required int32 concealPasscard = 8;</code>
       *
       * <pre>
       * 开启隐藏关
       * </pre>
       */
      public Builder setConcealPasscard(int value) {
        bitField0_ |= 0x00000080;
        concealPasscard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 concealPasscard = 8;</code>
       *
       * <pre>
       * 开启隐藏关
       * </pre>
       */
      public Builder clearConcealPasscard() {
        bitField0_ = (bitField0_ & ~0x00000080);
        concealPasscard_ = 0;
        onChanged();
        return this;
      }

      // required int32 concealRatios = 9;
      private int concealRatios_ ;
      /**
       * <code>required int32 concealRatios = 9;</code>
       *
       * <pre>
       * 开启几率
       * </pre>
       */
      public boolean hasConcealRatios() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 concealRatios = 9;</code>
       *
       * <pre>
       * 开启几率
       * </pre>
       */
      public int getConcealRatios() {
        return concealRatios_;
      }
      /**
       * <code>required int32 concealRatios = 9;</code>
       *
       * <pre>
       * 开启几率
       * </pre>
       */
      public Builder setConcealRatios(int value) {
        bitField0_ |= 0x00000100;
        concealRatios_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 concealRatios = 9;</code>
       *
       * <pre>
       * 开启几率
       * </pre>
       */
      public Builder clearConcealRatios() {
        bitField0_ = (bitField0_ & ~0x00000100);
        concealRatios_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 dropList = 10;
      private java.util.List<java.lang.Integer> dropList_ = java.util.Collections.emptyList();
      private void ensureDropListIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          dropList_ = new java.util.ArrayList<java.lang.Integer>(dropList_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 dropList = 10;</code>
       *
       * <pre>
       * 掉落
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDropListList() {
        return java.util.Collections.unmodifiableList(dropList_);
      }
      /**
       * <code>repeated int32 dropList = 10;</code>
       *
       * <pre>
       * 掉落
       * </pre>
       */
      public int getDropListCount() {
        return dropList_.size();
      }
      /**
       * <code>repeated int32 dropList = 10;</code>
       *
       * <pre>
       * 掉落
       * </pre>
       */
      public int getDropList(int index) {
        return dropList_.get(index);
      }
      /**
       * <code>repeated int32 dropList = 10;</code>
       *
       * <pre>
       * 掉落
       * </pre>
       */
      public Builder setDropList(
          int index, int value) {
        ensureDropListIsMutable();
        dropList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropList = 10;</code>
       *
       * <pre>
       * 掉落
       * </pre>
       */
      public Builder addDropList(int value) {
        ensureDropListIsMutable();
        dropList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropList = 10;</code>
       *
       * <pre>
       * 掉落
       * </pre>
       */
      public Builder addAllDropList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDropListIsMutable();
        super.addAll(values, dropList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropList = 10;</code>
       *
       * <pre>
       * 掉落
       * </pre>
       */
      public Builder clearDropList() {
        dropList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // required string map = 11;
      private java.lang.Object map_ = "";
      /**
       * <code>required string map = 11;</code>
       *
       * <pre>
       * 地图
       * </pre>
       */
      public boolean hasMap() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required string map = 11;</code>
       *
       * <pre>
       * 地图
       * </pre>
       */
      public java.lang.String getMap() {
        java.lang.Object ref = map_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          map_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string map = 11;</code>
       *
       * <pre>
       * 地图
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMapBytes() {
        java.lang.Object ref = map_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          map_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string map = 11;</code>
       *
       * <pre>
       * 地图
       * </pre>
       */
      public Builder setMap(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        map_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string map = 11;</code>
       *
       * <pre>
       * 地图
       * </pre>
       */
      public Builder clearMap() {
        bitField0_ = (bitField0_ & ~0x00000400);
        map_ = getDefaultInstance().getMap();
        onChanged();
        return this;
      }
      /**
       * <code>required string map = 11;</code>
       *
       * <pre>
       * 地图
       * </pre>
       */
      public Builder setMapBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        map_ = value;
        onChanged();
        return this;
      }

      // required string name = 12;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 12;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required string name = 12;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 12;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 12;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 12;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000800);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 12;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        name_ = value;
        onChanged();
        return this;
      }

      // required string desc = 13;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 13;</code>
       *
       * <pre>
       * 介绍
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required string desc = 13;</code>
       *
       * <pre>
       * 介绍
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 13;</code>
       *
       * <pre>
       * 介绍
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 13;</code>
       *
       * <pre>
       * 介绍
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 13;</code>
       *
       * <pre>
       * 介绍
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00001000);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 13;</code>
       *
       * <pre>
       * 介绍
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        desc_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Match)
    }

    static {
      defaultInstance = new Match(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Match)
  }

  public interface MatchDropOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    int getKeyId();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 关卡类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 关卡类型
     * </pre>
     */
    int getType();

    // required string npcLists = 3;
    /**
     * <code>required string npcLists = 3;</code>
     *
     * <pre>
     * 人物
     * </pre>
     */
    boolean hasNpcLists();
    /**
     * <code>required string npcLists = 3;</code>
     *
     * <pre>
     * 人物
     * </pre>
     */
    java.lang.String getNpcLists();
    /**
     * <code>required string npcLists = 3;</code>
     *
     * <pre>
     * 人物
     * </pre>
     */
    com.google.protobuf.ByteString
        getNpcListsBytes();

    // repeated int32 dropGoodList = 4;
    /**
     * <code>repeated int32 dropGoodList = 4;</code>
     *
     * <pre>
     * 固定掉落
     * </pre>
     */
    java.util.List<java.lang.Integer> getDropGoodListList();
    /**
     * <code>repeated int32 dropGoodList = 4;</code>
     *
     * <pre>
     * 固定掉落
     * </pre>
     */
    int getDropGoodListCount();
    /**
     * <code>repeated int32 dropGoodList = 4;</code>
     *
     * <pre>
     * 固定掉落
     * </pre>
     */
    int getDropGoodList(int index);

    // repeated int32 dropCountList = 5;
    /**
     * <code>repeated int32 dropCountList = 5;</code>
     *
     * <pre>
     * 固定掉落数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getDropCountListList();
    /**
     * <code>repeated int32 dropCountList = 5;</code>
     *
     * <pre>
     * 固定掉落数量
     * </pre>
     */
    int getDropCountListCount();
    /**
     * <code>repeated int32 dropCountList = 5;</code>
     *
     * <pre>
     * 固定掉落数量
     * </pre>
     */
    int getDropCountList(int index);

    // repeated int32 randomDropList = 6;
    /**
     * <code>repeated int32 randomDropList = 6;</code>
     *
     * <pre>
     * 随机掉落（宝箱）
     * </pre>
     */
    java.util.List<java.lang.Integer> getRandomDropListList();
    /**
     * <code>repeated int32 randomDropList = 6;</code>
     *
     * <pre>
     * 随机掉落（宝箱）
     * </pre>
     */
    int getRandomDropListCount();
    /**
     * <code>repeated int32 randomDropList = 6;</code>
     *
     * <pre>
     * 随机掉落（宝箱）
     * </pre>
     */
    int getRandomDropList(int index);

    // repeated int32 countRatiosList = 7;
    /**
     * <code>repeated int32 countRatiosList = 7;</code>
     *
     * <pre>
     * 随机掉落几率
     * </pre>
     */
    java.util.List<java.lang.Integer> getCountRatiosListList();
    /**
     * <code>repeated int32 countRatiosList = 7;</code>
     *
     * <pre>
     * 随机掉落几率
     * </pre>
     */
    int getCountRatiosListCount();
    /**
     * <code>repeated int32 countRatiosList = 7;</code>
     *
     * <pre>
     * 随机掉落几率
     * </pre>
     */
    int getCountRatiosList(int index);

    // required int32 gradeDrop = 8;
    /**
     * <code>required int32 gradeDrop = 8;</code>
     *
     * <pre>
     * 特产掉落
     * </pre>
     */
    boolean hasGradeDrop();
    /**
     * <code>required int32 gradeDrop = 8;</code>
     *
     * <pre>
     * 特产掉落
     * </pre>
     */
    int getGradeDrop();

    // required int32 requireGrade = 9;
    /**
     * <code>required int32 requireGrade = 9;</code>
     *
     * <pre>
     * 特产需求分数
     * </pre>
     */
    boolean hasRequireGrade();
    /**
     * <code>required int32 requireGrade = 9;</code>
     *
     * <pre>
     * 特产需求分数
     * </pre>
     */
    int getRequireGrade();

    // required int32 grade = 10;
    /**
     * <code>required int32 grade = 10;</code>
     *
     * <pre>
     * 关卡积分
     * </pre>
     */
    boolean hasGrade();
    /**
     * <code>required int32 grade = 10;</code>
     *
     * <pre>
     * 关卡积分
     * </pre>
     */
    int getGrade();

    // required string helpNpcLists = 11;
    /**
     * <code>required string helpNpcLists = 11;</code>
     *
     * <pre>
     * 助战NPC
     * </pre>
     */
    boolean hasHelpNpcLists();
    /**
     * <code>required string helpNpcLists = 11;</code>
     *
     * <pre>
     * 助战NPC
     * </pre>
     */
    java.lang.String getHelpNpcLists();
    /**
     * <code>required string helpNpcLists = 11;</code>
     *
     * <pre>
     * 助战NPC
     * </pre>
     */
    com.google.protobuf.ByteString
        getHelpNpcListsBytes();

    // required int32 nextKeyId = 12;
    /**
     * <code>required int32 nextKeyId = 12;</code>
     *
     * <pre>
     * 开启关卡
     * </pre>
     */
    boolean hasNextKeyId();
    /**
     * <code>required int32 nextKeyId = 12;</code>
     *
     * <pre>
     * 开启关卡
     * </pre>
     */
    int getNextKeyId();

    // repeated int32 dropViews = 13;
    /**
     * <code>repeated int32 dropViews = 13;</code>
     *
     * <pre>
     * 掉落显示
     * </pre>
     */
    java.util.List<java.lang.Integer> getDropViewsList();
    /**
     * <code>repeated int32 dropViews = 13;</code>
     *
     * <pre>
     * 掉落显示
     * </pre>
     */
    int getDropViewsCount();
    /**
     * <code>repeated int32 dropViews = 13;</code>
     *
     * <pre>
     * 掉落显示
     * </pre>
     */
    int getDropViews(int index);
  }
  /**
   * Protobuf type {@code MatchDrop}
   */
  public static final class MatchDrop extends
      com.google.protobuf.GeneratedMessage
      implements MatchDropOrBuilder {
    // Use MatchDrop.newBuilder() to construct.
    private MatchDrop(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchDrop(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchDrop defaultInstance;
    public static MatchDrop getDefaultInstance() {
      return defaultInstance;
    }

    public MatchDrop getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchDrop(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              npcLists_ = input.readBytes();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                dropGoodList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              dropGoodList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                dropGoodList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                dropGoodList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                dropCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              dropCountList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                dropCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                dropCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                randomDropList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              randomDropList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                randomDropList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                randomDropList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                countRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              countRatiosList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                countRatiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                countRatiosList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              gradeDrop_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              requireGrade_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              grade_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000040;
              helpNpcLists_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              nextKeyId_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                dropViews_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              dropViews_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                dropViews_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                dropViews_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          dropGoodList_ = java.util.Collections.unmodifiableList(dropGoodList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          dropCountList_ = java.util.Collections.unmodifiableList(dropCountList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          randomDropList_ = java.util.Collections.unmodifiableList(randomDropList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          countRatiosList_ = java.util.Collections.unmodifiableList(countRatiosList_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          dropViews_ = java.util.Collections.unmodifiableList(dropViews_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchDrop_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchDrop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.MatchProbuf.MatchDrop.class, com.cwa.prototype.protobuf.MatchProbuf.MatchDrop.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchDrop> PARSER =
        new com.google.protobuf.AbstractParser<MatchDrop>() {
      public MatchDrop parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchDrop(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchDrop> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 关卡类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 关卡类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required string npcLists = 3;
    public static final int NPCLISTS_FIELD_NUMBER = 3;
    private java.lang.Object npcLists_;
    /**
     * <code>required string npcLists = 3;</code>
     *
     * <pre>
     * 人物
     * </pre>
     */
    public boolean hasNpcLists() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string npcLists = 3;</code>
     *
     * <pre>
     * 人物
     * </pre>
     */
    public java.lang.String getNpcLists() {
      java.lang.Object ref = npcLists_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          npcLists_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string npcLists = 3;</code>
     *
     * <pre>
     * 人物
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNpcListsBytes() {
      java.lang.Object ref = npcLists_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        npcLists_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 dropGoodList = 4;
    public static final int DROPGOODLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> dropGoodList_;
    /**
     * <code>repeated int32 dropGoodList = 4;</code>
     *
     * <pre>
     * 固定掉落
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDropGoodListList() {
      return dropGoodList_;
    }
    /**
     * <code>repeated int32 dropGoodList = 4;</code>
     *
     * <pre>
     * 固定掉落
     * </pre>
     */
    public int getDropGoodListCount() {
      return dropGoodList_.size();
    }
    /**
     * <code>repeated int32 dropGoodList = 4;</code>
     *
     * <pre>
     * 固定掉落
     * </pre>
     */
    public int getDropGoodList(int index) {
      return dropGoodList_.get(index);
    }

    // repeated int32 dropCountList = 5;
    public static final int DROPCOUNTLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> dropCountList_;
    /**
     * <code>repeated int32 dropCountList = 5;</code>
     *
     * <pre>
     * 固定掉落数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDropCountListList() {
      return dropCountList_;
    }
    /**
     * <code>repeated int32 dropCountList = 5;</code>
     *
     * <pre>
     * 固定掉落数量
     * </pre>
     */
    public int getDropCountListCount() {
      return dropCountList_.size();
    }
    /**
     * <code>repeated int32 dropCountList = 5;</code>
     *
     * <pre>
     * 固定掉落数量
     * </pre>
     */
    public int getDropCountList(int index) {
      return dropCountList_.get(index);
    }

    // repeated int32 randomDropList = 6;
    public static final int RANDOMDROPLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> randomDropList_;
    /**
     * <code>repeated int32 randomDropList = 6;</code>
     *
     * <pre>
     * 随机掉落（宝箱）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRandomDropListList() {
      return randomDropList_;
    }
    /**
     * <code>repeated int32 randomDropList = 6;</code>
     *
     * <pre>
     * 随机掉落（宝箱）
     * </pre>
     */
    public int getRandomDropListCount() {
      return randomDropList_.size();
    }
    /**
     * <code>repeated int32 randomDropList = 6;</code>
     *
     * <pre>
     * 随机掉落（宝箱）
     * </pre>
     */
    public int getRandomDropList(int index) {
      return randomDropList_.get(index);
    }

    // repeated int32 countRatiosList = 7;
    public static final int COUNTRATIOSLIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> countRatiosList_;
    /**
     * <code>repeated int32 countRatiosList = 7;</code>
     *
     * <pre>
     * 随机掉落几率
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCountRatiosListList() {
      return countRatiosList_;
    }
    /**
     * <code>repeated int32 countRatiosList = 7;</code>
     *
     * <pre>
     * 随机掉落几率
     * </pre>
     */
    public int getCountRatiosListCount() {
      return countRatiosList_.size();
    }
    /**
     * <code>repeated int32 countRatiosList = 7;</code>
     *
     * <pre>
     * 随机掉落几率
     * </pre>
     */
    public int getCountRatiosList(int index) {
      return countRatiosList_.get(index);
    }

    // required int32 gradeDrop = 8;
    public static final int GRADEDROP_FIELD_NUMBER = 8;
    private int gradeDrop_;
    /**
     * <code>required int32 gradeDrop = 8;</code>
     *
     * <pre>
     * 特产掉落
     * </pre>
     */
    public boolean hasGradeDrop() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 gradeDrop = 8;</code>
     *
     * <pre>
     * 特产掉落
     * </pre>
     */
    public int getGradeDrop() {
      return gradeDrop_;
    }

    // required int32 requireGrade = 9;
    public static final int REQUIREGRADE_FIELD_NUMBER = 9;
    private int requireGrade_;
    /**
     * <code>required int32 requireGrade = 9;</code>
     *
     * <pre>
     * 特产需求分数
     * </pre>
     */
    public boolean hasRequireGrade() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 requireGrade = 9;</code>
     *
     * <pre>
     * 特产需求分数
     * </pre>
     */
    public int getRequireGrade() {
      return requireGrade_;
    }

    // required int32 grade = 10;
    public static final int GRADE_FIELD_NUMBER = 10;
    private int grade_;
    /**
     * <code>required int32 grade = 10;</code>
     *
     * <pre>
     * 关卡积分
     * </pre>
     */
    public boolean hasGrade() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 grade = 10;</code>
     *
     * <pre>
     * 关卡积分
     * </pre>
     */
    public int getGrade() {
      return grade_;
    }

    // required string helpNpcLists = 11;
    public static final int HELPNPCLISTS_FIELD_NUMBER = 11;
    private java.lang.Object helpNpcLists_;
    /**
     * <code>required string helpNpcLists = 11;</code>
     *
     * <pre>
     * 助战NPC
     * </pre>
     */
    public boolean hasHelpNpcLists() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required string helpNpcLists = 11;</code>
     *
     * <pre>
     * 助战NPC
     * </pre>
     */
    public java.lang.String getHelpNpcLists() {
      java.lang.Object ref = helpNpcLists_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          helpNpcLists_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string helpNpcLists = 11;</code>
     *
     * <pre>
     * 助战NPC
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHelpNpcListsBytes() {
      java.lang.Object ref = helpNpcLists_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        helpNpcLists_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 nextKeyId = 12;
    public static final int NEXTKEYID_FIELD_NUMBER = 12;
    private int nextKeyId_;
    /**
     * <code>required int32 nextKeyId = 12;</code>
     *
     * <pre>
     * 开启关卡
     * </pre>
     */
    public boolean hasNextKeyId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 nextKeyId = 12;</code>
     *
     * <pre>
     * 开启关卡
     * </pre>
     */
    public int getNextKeyId() {
      return nextKeyId_;
    }

    // repeated int32 dropViews = 13;
    public static final int DROPVIEWS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> dropViews_;
    /**
     * <code>repeated int32 dropViews = 13;</code>
     *
     * <pre>
     * 掉落显示
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDropViewsList() {
      return dropViews_;
    }
    /**
     * <code>repeated int32 dropViews = 13;</code>
     *
     * <pre>
     * 掉落显示
     * </pre>
     */
    public int getDropViewsCount() {
      return dropViews_.size();
    }
    /**
     * <code>repeated int32 dropViews = 13;</code>
     *
     * <pre>
     * 掉落显示
     * </pre>
     */
    public int getDropViews(int index) {
      return dropViews_.get(index);
    }

    private void initFields() {
      keyId_ = 0;
      type_ = 0;
      npcLists_ = "";
      dropGoodList_ = java.util.Collections.emptyList();
      dropCountList_ = java.util.Collections.emptyList();
      randomDropList_ = java.util.Collections.emptyList();
      countRatiosList_ = java.util.Collections.emptyList();
      gradeDrop_ = 0;
      requireGrade_ = 0;
      grade_ = 0;
      helpNpcLists_ = "";
      nextKeyId_ = 0;
      dropViews_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNpcLists()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGradeDrop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireGrade()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGrade()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHelpNpcLists()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNextKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNpcListsBytes());
      }
      for (int i = 0; i < dropGoodList_.size(); i++) {
        output.writeInt32(4, dropGoodList_.get(i));
      }
      for (int i = 0; i < dropCountList_.size(); i++) {
        output.writeInt32(5, dropCountList_.get(i));
      }
      for (int i = 0; i < randomDropList_.size(); i++) {
        output.writeInt32(6, randomDropList_.get(i));
      }
      for (int i = 0; i < countRatiosList_.size(); i++) {
        output.writeInt32(7, countRatiosList_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(8, gradeDrop_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(9, requireGrade_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, grade_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(11, getHelpNpcListsBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, nextKeyId_);
      }
      for (int i = 0; i < dropViews_.size(); i++) {
        output.writeInt32(13, dropViews_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNpcListsBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dropGoodList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dropGoodList_.get(i));
        }
        size += dataSize;
        size += 1 * getDropGoodListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dropCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dropCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getDropCountListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < randomDropList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(randomDropList_.get(i));
        }
        size += dataSize;
        size += 1 * getRandomDropListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < countRatiosList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(countRatiosList_.get(i));
        }
        size += dataSize;
        size += 1 * getCountRatiosListList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, gradeDrop_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, requireGrade_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, grade_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getHelpNpcListsBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, nextKeyId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dropViews_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dropViews_.get(i));
        }
        size += dataSize;
        size += 1 * getDropViewsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.MatchProbuf.MatchDrop prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MatchDrop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.MatchProbuf.MatchDropOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchDrop_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchDrop_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.MatchProbuf.MatchDrop.class, com.cwa.prototype.protobuf.MatchProbuf.MatchDrop.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.MatchProbuf.MatchDrop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        npcLists_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        dropGoodList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        dropCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        randomDropList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        countRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        gradeDrop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        requireGrade_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        grade_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        helpNpcLists_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        nextKeyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        dropViews_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchDrop_descriptor;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchDrop getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.MatchDrop.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchDrop build() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchDrop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchDrop buildPartial() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchDrop result = new com.cwa.prototype.protobuf.MatchProbuf.MatchDrop(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.npcLists_ = npcLists_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          dropGoodList_ = java.util.Collections.unmodifiableList(dropGoodList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.dropGoodList_ = dropGoodList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          dropCountList_ = java.util.Collections.unmodifiableList(dropCountList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.dropCountList_ = dropCountList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          randomDropList_ = java.util.Collections.unmodifiableList(randomDropList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.randomDropList_ = randomDropList_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          countRatiosList_ = java.util.Collections.unmodifiableList(countRatiosList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.countRatiosList_ = countRatiosList_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gradeDrop_ = gradeDrop_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.requireGrade_ = requireGrade_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.grade_ = grade_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.helpNpcLists_ = helpNpcLists_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.nextKeyId_ = nextKeyId_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          dropViews_ = java.util.Collections.unmodifiableList(dropViews_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.dropViews_ = dropViews_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.MatchProbuf.MatchDrop) {
          return mergeFrom((com.cwa.prototype.protobuf.MatchProbuf.MatchDrop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.MatchProbuf.MatchDrop other) {
        if (other == com.cwa.prototype.protobuf.MatchProbuf.MatchDrop.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasNpcLists()) {
          bitField0_ |= 0x00000004;
          npcLists_ = other.npcLists_;
          onChanged();
        }
        if (!other.dropGoodList_.isEmpty()) {
          if (dropGoodList_.isEmpty()) {
            dropGoodList_ = other.dropGoodList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDropGoodListIsMutable();
            dropGoodList_.addAll(other.dropGoodList_);
          }
          onChanged();
        }
        if (!other.dropCountList_.isEmpty()) {
          if (dropCountList_.isEmpty()) {
            dropCountList_ = other.dropCountList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDropCountListIsMutable();
            dropCountList_.addAll(other.dropCountList_);
          }
          onChanged();
        }
        if (!other.randomDropList_.isEmpty()) {
          if (randomDropList_.isEmpty()) {
            randomDropList_ = other.randomDropList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRandomDropListIsMutable();
            randomDropList_.addAll(other.randomDropList_);
          }
          onChanged();
        }
        if (!other.countRatiosList_.isEmpty()) {
          if (countRatiosList_.isEmpty()) {
            countRatiosList_ = other.countRatiosList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureCountRatiosListIsMutable();
            countRatiosList_.addAll(other.countRatiosList_);
          }
          onChanged();
        }
        if (other.hasGradeDrop()) {
          setGradeDrop(other.getGradeDrop());
        }
        if (other.hasRequireGrade()) {
          setRequireGrade(other.getRequireGrade());
        }
        if (other.hasGrade()) {
          setGrade(other.getGrade());
        }
        if (other.hasHelpNpcLists()) {
          bitField0_ |= 0x00000400;
          helpNpcLists_ = other.helpNpcLists_;
          onChanged();
        }
        if (other.hasNextKeyId()) {
          setNextKeyId(other.getNextKeyId());
        }
        if (!other.dropViews_.isEmpty()) {
          if (dropViews_.isEmpty()) {
            dropViews_ = other.dropViews_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureDropViewsIsMutable();
            dropViews_.addAll(other.dropViews_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasNpcLists()) {
          
          return false;
        }
        if (!hasGradeDrop()) {
          
          return false;
        }
        if (!hasRequireGrade()) {
          
          return false;
        }
        if (!hasGrade()) {
          
          return false;
        }
        if (!hasHelpNpcLists()) {
          
          return false;
        }
        if (!hasNextKeyId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.MatchProbuf.MatchDrop parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.MatchProbuf.MatchDrop) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 关卡类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 关卡类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 关卡类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 关卡类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required string npcLists = 3;
      private java.lang.Object npcLists_ = "";
      /**
       * <code>required string npcLists = 3;</code>
       *
       * <pre>
       * 人物
       * </pre>
       */
      public boolean hasNpcLists() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string npcLists = 3;</code>
       *
       * <pre>
       * 人物
       * </pre>
       */
      public java.lang.String getNpcLists() {
        java.lang.Object ref = npcLists_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          npcLists_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string npcLists = 3;</code>
       *
       * <pre>
       * 人物
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNpcListsBytes() {
        java.lang.Object ref = npcLists_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          npcLists_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string npcLists = 3;</code>
       *
       * <pre>
       * 人物
       * </pre>
       */
      public Builder setNpcLists(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        npcLists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string npcLists = 3;</code>
       *
       * <pre>
       * 人物
       * </pre>
       */
      public Builder clearNpcLists() {
        bitField0_ = (bitField0_ & ~0x00000004);
        npcLists_ = getDefaultInstance().getNpcLists();
        onChanged();
        return this;
      }
      /**
       * <code>required string npcLists = 3;</code>
       *
       * <pre>
       * 人物
       * </pre>
       */
      public Builder setNpcListsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        npcLists_ = value;
        onChanged();
        return this;
      }

      // repeated int32 dropGoodList = 4;
      private java.util.List<java.lang.Integer> dropGoodList_ = java.util.Collections.emptyList();
      private void ensureDropGoodListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          dropGoodList_ = new java.util.ArrayList<java.lang.Integer>(dropGoodList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 dropGoodList = 4;</code>
       *
       * <pre>
       * 固定掉落
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDropGoodListList() {
        return java.util.Collections.unmodifiableList(dropGoodList_);
      }
      /**
       * <code>repeated int32 dropGoodList = 4;</code>
       *
       * <pre>
       * 固定掉落
       * </pre>
       */
      public int getDropGoodListCount() {
        return dropGoodList_.size();
      }
      /**
       * <code>repeated int32 dropGoodList = 4;</code>
       *
       * <pre>
       * 固定掉落
       * </pre>
       */
      public int getDropGoodList(int index) {
        return dropGoodList_.get(index);
      }
      /**
       * <code>repeated int32 dropGoodList = 4;</code>
       *
       * <pre>
       * 固定掉落
       * </pre>
       */
      public Builder setDropGoodList(
          int index, int value) {
        ensureDropGoodListIsMutable();
        dropGoodList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropGoodList = 4;</code>
       *
       * <pre>
       * 固定掉落
       * </pre>
       */
      public Builder addDropGoodList(int value) {
        ensureDropGoodListIsMutable();
        dropGoodList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropGoodList = 4;</code>
       *
       * <pre>
       * 固定掉落
       * </pre>
       */
      public Builder addAllDropGoodList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDropGoodListIsMutable();
        super.addAll(values, dropGoodList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropGoodList = 4;</code>
       *
       * <pre>
       * 固定掉落
       * </pre>
       */
      public Builder clearDropGoodList() {
        dropGoodList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 dropCountList = 5;
      private java.util.List<java.lang.Integer> dropCountList_ = java.util.Collections.emptyList();
      private void ensureDropCountListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          dropCountList_ = new java.util.ArrayList<java.lang.Integer>(dropCountList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 dropCountList = 5;</code>
       *
       * <pre>
       * 固定掉落数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDropCountListList() {
        return java.util.Collections.unmodifiableList(dropCountList_);
      }
      /**
       * <code>repeated int32 dropCountList = 5;</code>
       *
       * <pre>
       * 固定掉落数量
       * </pre>
       */
      public int getDropCountListCount() {
        return dropCountList_.size();
      }
      /**
       * <code>repeated int32 dropCountList = 5;</code>
       *
       * <pre>
       * 固定掉落数量
       * </pre>
       */
      public int getDropCountList(int index) {
        return dropCountList_.get(index);
      }
      /**
       * <code>repeated int32 dropCountList = 5;</code>
       *
       * <pre>
       * 固定掉落数量
       * </pre>
       */
      public Builder setDropCountList(
          int index, int value) {
        ensureDropCountListIsMutable();
        dropCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropCountList = 5;</code>
       *
       * <pre>
       * 固定掉落数量
       * </pre>
       */
      public Builder addDropCountList(int value) {
        ensureDropCountListIsMutable();
        dropCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropCountList = 5;</code>
       *
       * <pre>
       * 固定掉落数量
       * </pre>
       */
      public Builder addAllDropCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDropCountListIsMutable();
        super.addAll(values, dropCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropCountList = 5;</code>
       *
       * <pre>
       * 固定掉落数量
       * </pre>
       */
      public Builder clearDropCountList() {
        dropCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 randomDropList = 6;
      private java.util.List<java.lang.Integer> randomDropList_ = java.util.Collections.emptyList();
      private void ensureRandomDropListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          randomDropList_ = new java.util.ArrayList<java.lang.Integer>(randomDropList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 randomDropList = 6;</code>
       *
       * <pre>
       * 随机掉落（宝箱）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRandomDropListList() {
        return java.util.Collections.unmodifiableList(randomDropList_);
      }
      /**
       * <code>repeated int32 randomDropList = 6;</code>
       *
       * <pre>
       * 随机掉落（宝箱）
       * </pre>
       */
      public int getRandomDropListCount() {
        return randomDropList_.size();
      }
      /**
       * <code>repeated int32 randomDropList = 6;</code>
       *
       * <pre>
       * 随机掉落（宝箱）
       * </pre>
       */
      public int getRandomDropList(int index) {
        return randomDropList_.get(index);
      }
      /**
       * <code>repeated int32 randomDropList = 6;</code>
       *
       * <pre>
       * 随机掉落（宝箱）
       * </pre>
       */
      public Builder setRandomDropList(
          int index, int value) {
        ensureRandomDropListIsMutable();
        randomDropList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 randomDropList = 6;</code>
       *
       * <pre>
       * 随机掉落（宝箱）
       * </pre>
       */
      public Builder addRandomDropList(int value) {
        ensureRandomDropListIsMutable();
        randomDropList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 randomDropList = 6;</code>
       *
       * <pre>
       * 随机掉落（宝箱）
       * </pre>
       */
      public Builder addAllRandomDropList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRandomDropListIsMutable();
        super.addAll(values, randomDropList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 randomDropList = 6;</code>
       *
       * <pre>
       * 随机掉落（宝箱）
       * </pre>
       */
      public Builder clearRandomDropList() {
        randomDropList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 countRatiosList = 7;
      private java.util.List<java.lang.Integer> countRatiosList_ = java.util.Collections.emptyList();
      private void ensureCountRatiosListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          countRatiosList_ = new java.util.ArrayList<java.lang.Integer>(countRatiosList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 countRatiosList = 7;</code>
       *
       * <pre>
       * 随机掉落几率
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCountRatiosListList() {
        return java.util.Collections.unmodifiableList(countRatiosList_);
      }
      /**
       * <code>repeated int32 countRatiosList = 7;</code>
       *
       * <pre>
       * 随机掉落几率
       * </pre>
       */
      public int getCountRatiosListCount() {
        return countRatiosList_.size();
      }
      /**
       * <code>repeated int32 countRatiosList = 7;</code>
       *
       * <pre>
       * 随机掉落几率
       * </pre>
       */
      public int getCountRatiosList(int index) {
        return countRatiosList_.get(index);
      }
      /**
       * <code>repeated int32 countRatiosList = 7;</code>
       *
       * <pre>
       * 随机掉落几率
       * </pre>
       */
      public Builder setCountRatiosList(
          int index, int value) {
        ensureCountRatiosListIsMutable();
        countRatiosList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 7;</code>
       *
       * <pre>
       * 随机掉落几率
       * </pre>
       */
      public Builder addCountRatiosList(int value) {
        ensureCountRatiosListIsMutable();
        countRatiosList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 7;</code>
       *
       * <pre>
       * 随机掉落几率
       * </pre>
       */
      public Builder addAllCountRatiosList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountRatiosListIsMutable();
        super.addAll(values, countRatiosList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countRatiosList = 7;</code>
       *
       * <pre>
       * 随机掉落几率
       * </pre>
       */
      public Builder clearCountRatiosList() {
        countRatiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // required int32 gradeDrop = 8;
      private int gradeDrop_ ;
      /**
       * <code>required int32 gradeDrop = 8;</code>
       *
       * <pre>
       * 特产掉落
       * </pre>
       */
      public boolean hasGradeDrop() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 gradeDrop = 8;</code>
       *
       * <pre>
       * 特产掉落
       * </pre>
       */
      public int getGradeDrop() {
        return gradeDrop_;
      }
      /**
       * <code>required int32 gradeDrop = 8;</code>
       *
       * <pre>
       * 特产掉落
       * </pre>
       */
      public Builder setGradeDrop(int value) {
        bitField0_ |= 0x00000080;
        gradeDrop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 gradeDrop = 8;</code>
       *
       * <pre>
       * 特产掉落
       * </pre>
       */
      public Builder clearGradeDrop() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gradeDrop_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireGrade = 9;
      private int requireGrade_ ;
      /**
       * <code>required int32 requireGrade = 9;</code>
       *
       * <pre>
       * 特产需求分数
       * </pre>
       */
      public boolean hasRequireGrade() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 requireGrade = 9;</code>
       *
       * <pre>
       * 特产需求分数
       * </pre>
       */
      public int getRequireGrade() {
        return requireGrade_;
      }
      /**
       * <code>required int32 requireGrade = 9;</code>
       *
       * <pre>
       * 特产需求分数
       * </pre>
       */
      public Builder setRequireGrade(int value) {
        bitField0_ |= 0x00000100;
        requireGrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireGrade = 9;</code>
       *
       * <pre>
       * 特产需求分数
       * </pre>
       */
      public Builder clearRequireGrade() {
        bitField0_ = (bitField0_ & ~0x00000100);
        requireGrade_ = 0;
        onChanged();
        return this;
      }

      // required int32 grade = 10;
      private int grade_ ;
      /**
       * <code>required int32 grade = 10;</code>
       *
       * <pre>
       * 关卡积分
       * </pre>
       */
      public boolean hasGrade() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 grade = 10;</code>
       *
       * <pre>
       * 关卡积分
       * </pre>
       */
      public int getGrade() {
        return grade_;
      }
      /**
       * <code>required int32 grade = 10;</code>
       *
       * <pre>
       * 关卡积分
       * </pre>
       */
      public Builder setGrade(int value) {
        bitField0_ |= 0x00000200;
        grade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 grade = 10;</code>
       *
       * <pre>
       * 关卡积分
       * </pre>
       */
      public Builder clearGrade() {
        bitField0_ = (bitField0_ & ~0x00000200);
        grade_ = 0;
        onChanged();
        return this;
      }

      // required string helpNpcLists = 11;
      private java.lang.Object helpNpcLists_ = "";
      /**
       * <code>required string helpNpcLists = 11;</code>
       *
       * <pre>
       * 助战NPC
       * </pre>
       */
      public boolean hasHelpNpcLists() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required string helpNpcLists = 11;</code>
       *
       * <pre>
       * 助战NPC
       * </pre>
       */
      public java.lang.String getHelpNpcLists() {
        java.lang.Object ref = helpNpcLists_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          helpNpcLists_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string helpNpcLists = 11;</code>
       *
       * <pre>
       * 助战NPC
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHelpNpcListsBytes() {
        java.lang.Object ref = helpNpcLists_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          helpNpcLists_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string helpNpcLists = 11;</code>
       *
       * <pre>
       * 助战NPC
       * </pre>
       */
      public Builder setHelpNpcLists(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        helpNpcLists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string helpNpcLists = 11;</code>
       *
       * <pre>
       * 助战NPC
       * </pre>
       */
      public Builder clearHelpNpcLists() {
        bitField0_ = (bitField0_ & ~0x00000400);
        helpNpcLists_ = getDefaultInstance().getHelpNpcLists();
        onChanged();
        return this;
      }
      /**
       * <code>required string helpNpcLists = 11;</code>
       *
       * <pre>
       * 助战NPC
       * </pre>
       */
      public Builder setHelpNpcListsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        helpNpcLists_ = value;
        onChanged();
        return this;
      }

      // required int32 nextKeyId = 12;
      private int nextKeyId_ ;
      /**
       * <code>required int32 nextKeyId = 12;</code>
       *
       * <pre>
       * 开启关卡
       * </pre>
       */
      public boolean hasNextKeyId() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 nextKeyId = 12;</code>
       *
       * <pre>
       * 开启关卡
       * </pre>
       */
      public int getNextKeyId() {
        return nextKeyId_;
      }
      /**
       * <code>required int32 nextKeyId = 12;</code>
       *
       * <pre>
       * 开启关卡
       * </pre>
       */
      public Builder setNextKeyId(int value) {
        bitField0_ |= 0x00000800;
        nextKeyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nextKeyId = 12;</code>
       *
       * <pre>
       * 开启关卡
       * </pre>
       */
      public Builder clearNextKeyId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        nextKeyId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 dropViews = 13;
      private java.util.List<java.lang.Integer> dropViews_ = java.util.Collections.emptyList();
      private void ensureDropViewsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          dropViews_ = new java.util.ArrayList<java.lang.Integer>(dropViews_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 dropViews = 13;</code>
       *
       * <pre>
       * 掉落显示
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDropViewsList() {
        return java.util.Collections.unmodifiableList(dropViews_);
      }
      /**
       * <code>repeated int32 dropViews = 13;</code>
       *
       * <pre>
       * 掉落显示
       * </pre>
       */
      public int getDropViewsCount() {
        return dropViews_.size();
      }
      /**
       * <code>repeated int32 dropViews = 13;</code>
       *
       * <pre>
       * 掉落显示
       * </pre>
       */
      public int getDropViews(int index) {
        return dropViews_.get(index);
      }
      /**
       * <code>repeated int32 dropViews = 13;</code>
       *
       * <pre>
       * 掉落显示
       * </pre>
       */
      public Builder setDropViews(
          int index, int value) {
        ensureDropViewsIsMutable();
        dropViews_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropViews = 13;</code>
       *
       * <pre>
       * 掉落显示
       * </pre>
       */
      public Builder addDropViews(int value) {
        ensureDropViewsIsMutable();
        dropViews_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropViews = 13;</code>
       *
       * <pre>
       * 掉落显示
       * </pre>
       */
      public Builder addAllDropViews(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDropViewsIsMutable();
        super.addAll(values, dropViews_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dropViews = 13;</code>
       *
       * <pre>
       * 掉落显示
       * </pre>
       */
      public Builder clearDropViews() {
        dropViews_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MatchDrop)
    }

    static {
      defaultInstance = new MatchDrop(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MatchDrop)
  }

  public interface MatchNpcOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required string heroName = 2;
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    boolean hasHeroName();
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    java.lang.String getHeroName();
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeroNameBytes();

    // required int32 quality = 3;
    /**
     * <code>required int32 quality = 3;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    boolean hasQuality();
    /**
     * <code>required int32 quality = 3;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    int getQuality();

    // required int32 heroClass = 4;
    /**
     * <code>required int32 heroClass = 4;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    boolean hasHeroClass();
    /**
     * <code>required int32 heroClass = 4;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    int getHeroClass();

    // repeated int32 basicAttributeList = 5;
    /**
     * <code>repeated int32 basicAttributeList = 5;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    java.util.List<java.lang.Integer> getBasicAttributeListList();
    /**
     * <code>repeated int32 basicAttributeList = 5;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    int getBasicAttributeListCount();
    /**
     * <code>repeated int32 basicAttributeList = 5;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    int getBasicAttributeList(int index);

    // required int32 basicAdvance = 6;
    /**
     * <code>required int32 basicAdvance = 6;</code>
     *
     * <pre>
     * 精英副本基础属性加成
     * </pre>
     */
    boolean hasBasicAdvance();
    /**
     * <code>required int32 basicAdvance = 6;</code>
     *
     * <pre>
     * 精英副本基础属性加成
     * </pre>
     */
    int getBasicAdvance();

    // repeated int32 resistanceList = 7;
    /**
     * <code>repeated int32 resistanceList = 7;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    java.util.List<java.lang.Integer> getResistanceListList();
    /**
     * <code>repeated int32 resistanceList = 7;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    int getResistanceListCount();
    /**
     * <code>repeated int32 resistanceList = 7;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    int getResistanceList(int index);

    // repeated int32 commonAttackList = 8;
    /**
     * <code>repeated int32 commonAttackList = 8;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    java.util.List<java.lang.Integer> getCommonAttackListList();
    /**
     * <code>repeated int32 commonAttackList = 8;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    int getCommonAttackListCount();
    /**
     * <code>repeated int32 commonAttackList = 8;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    int getCommonAttackList(int index);

    // repeated int32 elementMasterList = 9;
    /**
     * <code>repeated int32 elementMasterList = 9;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    java.util.List<java.lang.Integer> getElementMasterListList();
    /**
     * <code>repeated int32 elementMasterList = 9;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    int getElementMasterListCount();
    /**
     * <code>repeated int32 elementMasterList = 9;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    int getElementMasterList(int index);

    // repeated int32 raceRestrainList = 10;
    /**
     * <code>repeated int32 raceRestrainList = 10;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    java.util.List<java.lang.Integer> getRaceRestrainListList();
    /**
     * <code>repeated int32 raceRestrainList = 10;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    int getRaceRestrainListCount();
    /**
     * <code>repeated int32 raceRestrainList = 10;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    int getRaceRestrainList(int index);

    // repeated int32 debuffPatienceList = 11;
    /**
     * <code>repeated int32 debuffPatienceList = 11;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    java.util.List<java.lang.Integer> getDebuffPatienceListList();
    /**
     * <code>repeated int32 debuffPatienceList = 11;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    int getDebuffPatienceListCount();
    /**
     * <code>repeated int32 debuffPatienceList = 11;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    int getDebuffPatienceList(int index);

    // required int32 heroSize = 12;
    /**
     * <code>required int32 heroSize = 12;</code>
     *
     * <pre>
     * 碰撞大小
     * </pre>
     */
    boolean hasHeroSize();
    /**
     * <code>required int32 heroSize = 12;</code>
     *
     * <pre>
     * 碰撞大小
     * </pre>
     */
    int getHeroSize();

    // required string resource = 13;
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    boolean hasResource();
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    java.lang.String getResource();
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    com.google.protobuf.ByteString
        getResourceBytes();

    // repeated int32 effectTimeList = 14;
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    java.util.List<java.lang.Integer> getEffectTimeListList();
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    int getEffectTimeListCount();
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    int getEffectTimeList(int index);

    // repeated int32 actionTimeList = 15;
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    java.util.List<java.lang.Integer> getActionTimeListList();
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    int getActionTimeListCount();
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    int getActionTimeList(int index);

    // required int32 heroScale = 16;
    /**
     * <code>required int32 heroScale = 16;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    boolean hasHeroScale();
    /**
     * <code>required int32 heroScale = 16;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    int getHeroScale();
  }
  /**
   * Protobuf type {@code MatchNpc}
   */
  public static final class MatchNpc extends
      com.google.protobuf.GeneratedMessage
      implements MatchNpcOrBuilder {
    // Use MatchNpc.newBuilder() to construct.
    private MatchNpc(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchNpc(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchNpc defaultInstance;
    public static MatchNpc getDefaultInstance() {
      return defaultInstance;
    }

    public MatchNpc getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchNpc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              heroName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              quality_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              heroClass_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              basicAttributeList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                basicAttributeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              basicAdvance_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                resistanceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              resistanceList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                resistanceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                resistanceList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                commonAttackList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              commonAttackList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                commonAttackList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                commonAttackList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                elementMasterList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              elementMasterList_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                elementMasterList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                elementMasterList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              raceRestrainList_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                raceRestrainList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              debuffPatienceList_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                debuffPatienceList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000020;
              heroSize_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000040;
              resource_ = input.readBytes();
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                effectTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              effectTimeList_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                effectTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                effectTimeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                actionTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              actionTimeList_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                actionTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                actionTimeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              bitField0_ |= 0x00000080;
              heroScale_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          basicAttributeList_ = java.util.Collections.unmodifiableList(basicAttributeList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          resistanceList_ = java.util.Collections.unmodifiableList(resistanceList_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          commonAttackList_ = java.util.Collections.unmodifiableList(commonAttackList_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          elementMasterList_ = java.util.Collections.unmodifiableList(elementMasterList_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          raceRestrainList_ = java.util.Collections.unmodifiableList(raceRestrainList_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          debuffPatienceList_ = java.util.Collections.unmodifiableList(debuffPatienceList_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          effectTimeList_ = java.util.Collections.unmodifiableList(effectTimeList_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          actionTimeList_ = java.util.Collections.unmodifiableList(actionTimeList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchNpc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchNpc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.MatchProbuf.MatchNpc.class, com.cwa.prototype.protobuf.MatchProbuf.MatchNpc.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchNpc> PARSER =
        new com.google.protobuf.AbstractParser<MatchNpc>() {
      public MatchNpc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchNpc(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchNpc> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string heroName = 2;
    public static final int HERONAME_FIELD_NUMBER = 2;
    private java.lang.Object heroName_;
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public boolean hasHeroName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public java.lang.String getHeroName() {
      java.lang.Object ref = heroName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          heroName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeroNameBytes() {
      java.lang.Object ref = heroName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        heroName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 quality = 3;
    public static final int QUALITY_FIELD_NUMBER = 3;
    private int quality_;
    /**
     * <code>required int32 quality = 3;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 quality = 3;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    public int getQuality() {
      return quality_;
    }

    // required int32 heroClass = 4;
    public static final int HEROCLASS_FIELD_NUMBER = 4;
    private int heroClass_;
    /**
     * <code>required int32 heroClass = 4;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    public boolean hasHeroClass() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 heroClass = 4;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    public int getHeroClass() {
      return heroClass_;
    }

    // repeated int32 basicAttributeList = 5;
    public static final int BASICATTRIBUTELIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> basicAttributeList_;
    /**
     * <code>repeated int32 basicAttributeList = 5;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBasicAttributeListList() {
      return basicAttributeList_;
    }
    /**
     * <code>repeated int32 basicAttributeList = 5;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public int getBasicAttributeListCount() {
      return basicAttributeList_.size();
    }
    /**
     * <code>repeated int32 basicAttributeList = 5;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public int getBasicAttributeList(int index) {
      return basicAttributeList_.get(index);
    }

    // required int32 basicAdvance = 6;
    public static final int BASICADVANCE_FIELD_NUMBER = 6;
    private int basicAdvance_;
    /**
     * <code>required int32 basicAdvance = 6;</code>
     *
     * <pre>
     * 精英副本基础属性加成
     * </pre>
     */
    public boolean hasBasicAdvance() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 basicAdvance = 6;</code>
     *
     * <pre>
     * 精英副本基础属性加成
     * </pre>
     */
    public int getBasicAdvance() {
      return basicAdvance_;
    }

    // repeated int32 resistanceList = 7;
    public static final int RESISTANCELIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> resistanceList_;
    /**
     * <code>repeated int32 resistanceList = 7;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getResistanceListList() {
      return resistanceList_;
    }
    /**
     * <code>repeated int32 resistanceList = 7;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public int getResistanceListCount() {
      return resistanceList_.size();
    }
    /**
     * <code>repeated int32 resistanceList = 7;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public int getResistanceList(int index) {
      return resistanceList_.get(index);
    }

    // repeated int32 commonAttackList = 8;
    public static final int COMMONATTACKLIST_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> commonAttackList_;
    /**
     * <code>repeated int32 commonAttackList = 8;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCommonAttackListList() {
      return commonAttackList_;
    }
    /**
     * <code>repeated int32 commonAttackList = 8;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public int getCommonAttackListCount() {
      return commonAttackList_.size();
    }
    /**
     * <code>repeated int32 commonAttackList = 8;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public int getCommonAttackList(int index) {
      return commonAttackList_.get(index);
    }

    // repeated int32 elementMasterList = 9;
    public static final int ELEMENTMASTERLIST_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> elementMasterList_;
    /**
     * <code>repeated int32 elementMasterList = 9;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getElementMasterListList() {
      return elementMasterList_;
    }
    /**
     * <code>repeated int32 elementMasterList = 9;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public int getElementMasterListCount() {
      return elementMasterList_.size();
    }
    /**
     * <code>repeated int32 elementMasterList = 9;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public int getElementMasterList(int index) {
      return elementMasterList_.get(index);
    }

    // repeated int32 raceRestrainList = 10;
    public static final int RACERESTRAINLIST_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> raceRestrainList_;
    /**
     * <code>repeated int32 raceRestrainList = 10;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRaceRestrainListList() {
      return raceRestrainList_;
    }
    /**
     * <code>repeated int32 raceRestrainList = 10;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public int getRaceRestrainListCount() {
      return raceRestrainList_.size();
    }
    /**
     * <code>repeated int32 raceRestrainList = 10;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public int getRaceRestrainList(int index) {
      return raceRestrainList_.get(index);
    }

    // repeated int32 debuffPatienceList = 11;
    public static final int DEBUFFPATIENCELIST_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> debuffPatienceList_;
    /**
     * <code>repeated int32 debuffPatienceList = 11;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDebuffPatienceListList() {
      return debuffPatienceList_;
    }
    /**
     * <code>repeated int32 debuffPatienceList = 11;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public int getDebuffPatienceListCount() {
      return debuffPatienceList_.size();
    }
    /**
     * <code>repeated int32 debuffPatienceList = 11;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public int getDebuffPatienceList(int index) {
      return debuffPatienceList_.get(index);
    }

    // required int32 heroSize = 12;
    public static final int HEROSIZE_FIELD_NUMBER = 12;
    private int heroSize_;
    /**
     * <code>required int32 heroSize = 12;</code>
     *
     * <pre>
     * 碰撞大小
     * </pre>
     */
    public boolean hasHeroSize() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 heroSize = 12;</code>
     *
     * <pre>
     * 碰撞大小
     * </pre>
     */
    public int getHeroSize() {
      return heroSize_;
    }

    // required string resource = 13;
    public static final int RESOURCE_FIELD_NUMBER = 13;
    private java.lang.Object resource_;
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public boolean hasResource() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public java.lang.String getResource() {
      java.lang.Object ref = resource_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resource_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public com.google.protobuf.ByteString
        getResourceBytes() {
      java.lang.Object ref = resource_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 effectTimeList = 14;
    public static final int EFFECTTIMELIST_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> effectTimeList_;
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEffectTimeListList() {
      return effectTimeList_;
    }
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public int getEffectTimeListCount() {
      return effectTimeList_.size();
    }
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public int getEffectTimeList(int index) {
      return effectTimeList_.get(index);
    }

    // repeated int32 actionTimeList = 15;
    public static final int ACTIONTIMELIST_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> actionTimeList_;
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getActionTimeListList() {
      return actionTimeList_;
    }
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public int getActionTimeListCount() {
      return actionTimeList_.size();
    }
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public int getActionTimeList(int index) {
      return actionTimeList_.get(index);
    }

    // required int32 heroScale = 16;
    public static final int HEROSCALE_FIELD_NUMBER = 16;
    private int heroScale_;
    /**
     * <code>required int32 heroScale = 16;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    public boolean hasHeroScale() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 heroScale = 16;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    public int getHeroScale() {
      return heroScale_;
    }

    private void initFields() {
      keyId_ = 0;
      heroName_ = "";
      quality_ = 0;
      heroClass_ = 0;
      basicAttributeList_ = java.util.Collections.emptyList();
      basicAdvance_ = 0;
      resistanceList_ = java.util.Collections.emptyList();
      commonAttackList_ = java.util.Collections.emptyList();
      elementMasterList_ = java.util.Collections.emptyList();
      raceRestrainList_ = java.util.Collections.emptyList();
      debuffPatienceList_ = java.util.Collections.emptyList();
      heroSize_ = 0;
      resource_ = "";
      effectTimeList_ = java.util.Collections.emptyList();
      actionTimeList_ = java.util.Collections.emptyList();
      heroScale_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuality()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroClass()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBasicAdvance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResource()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getHeroNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, quality_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, heroClass_);
      }
      for (int i = 0; i < basicAttributeList_.size(); i++) {
        output.writeInt32(5, basicAttributeList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, basicAdvance_);
      }
      for (int i = 0; i < resistanceList_.size(); i++) {
        output.writeInt32(7, resistanceList_.get(i));
      }
      for (int i = 0; i < commonAttackList_.size(); i++) {
        output.writeInt32(8, commonAttackList_.get(i));
      }
      for (int i = 0; i < elementMasterList_.size(); i++) {
        output.writeInt32(9, elementMasterList_.get(i));
      }
      for (int i = 0; i < raceRestrainList_.size(); i++) {
        output.writeInt32(10, raceRestrainList_.get(i));
      }
      for (int i = 0; i < debuffPatienceList_.size(); i++) {
        output.writeInt32(11, debuffPatienceList_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(12, heroSize_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(13, getResourceBytes());
      }
      for (int i = 0; i < effectTimeList_.size(); i++) {
        output.writeInt32(14, effectTimeList_.get(i));
      }
      for (int i = 0; i < actionTimeList_.size(); i++) {
        output.writeInt32(15, actionTimeList_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(16, heroScale_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getHeroNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, quality_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, heroClass_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < basicAttributeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(basicAttributeList_.get(i));
        }
        size += dataSize;
        size += 1 * getBasicAttributeListList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, basicAdvance_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < resistanceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(resistanceList_.get(i));
        }
        size += dataSize;
        size += 1 * getResistanceListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < commonAttackList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(commonAttackList_.get(i));
        }
        size += dataSize;
        size += 1 * getCommonAttackListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < elementMasterList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(elementMasterList_.get(i));
        }
        size += dataSize;
        size += 1 * getElementMasterListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < raceRestrainList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(raceRestrainList_.get(i));
        }
        size += dataSize;
        size += 1 * getRaceRestrainListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < debuffPatienceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(debuffPatienceList_.get(i));
        }
        size += dataSize;
        size += 1 * getDebuffPatienceListList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, heroSize_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getResourceBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < effectTimeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(effectTimeList_.get(i));
        }
        size += dataSize;
        size += 1 * getEffectTimeListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actionTimeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actionTimeList_.get(i));
        }
        size += dataSize;
        size += 1 * getActionTimeListList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, heroScale_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.MatchProbuf.MatchNpc prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MatchNpc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.MatchProbuf.MatchNpcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchNpc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchNpc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.MatchProbuf.MatchNpc.class, com.cwa.prototype.protobuf.MatchProbuf.MatchNpc.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.MatchProbuf.MatchNpc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        heroName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        heroClass_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        basicAttributeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        basicAdvance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        resistanceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        commonAttackList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        elementMasterList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        raceRestrainList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        debuffPatienceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        heroSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        resource_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        effectTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        actionTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        heroScale_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchNpc_descriptor;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchNpc getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.MatchNpc.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchNpc build() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchNpc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchNpc buildPartial() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchNpc result = new com.cwa.prototype.protobuf.MatchProbuf.MatchNpc(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heroName_ = heroName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.heroClass_ = heroClass_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          basicAttributeList_ = java.util.Collections.unmodifiableList(basicAttributeList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.basicAttributeList_ = basicAttributeList_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.basicAdvance_ = basicAdvance_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          resistanceList_ = java.util.Collections.unmodifiableList(resistanceList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.resistanceList_ = resistanceList_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          commonAttackList_ = java.util.Collections.unmodifiableList(commonAttackList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.commonAttackList_ = commonAttackList_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          elementMasterList_ = java.util.Collections.unmodifiableList(elementMasterList_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.elementMasterList_ = elementMasterList_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          raceRestrainList_ = java.util.Collections.unmodifiableList(raceRestrainList_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.raceRestrainList_ = raceRestrainList_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          debuffPatienceList_ = java.util.Collections.unmodifiableList(debuffPatienceList_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.debuffPatienceList_ = debuffPatienceList_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000020;
        }
        result.heroSize_ = heroSize_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resource_ = resource_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          effectTimeList_ = java.util.Collections.unmodifiableList(effectTimeList_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.effectTimeList_ = effectTimeList_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          actionTimeList_ = java.util.Collections.unmodifiableList(actionTimeList_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.actionTimeList_ = actionTimeList_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.heroScale_ = heroScale_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.MatchProbuf.MatchNpc) {
          return mergeFrom((com.cwa.prototype.protobuf.MatchProbuf.MatchNpc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.MatchProbuf.MatchNpc other) {
        if (other == com.cwa.prototype.protobuf.MatchProbuf.MatchNpc.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasHeroName()) {
          bitField0_ |= 0x00000002;
          heroName_ = other.heroName_;
          onChanged();
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasHeroClass()) {
          setHeroClass(other.getHeroClass());
        }
        if (!other.basicAttributeList_.isEmpty()) {
          if (basicAttributeList_.isEmpty()) {
            basicAttributeList_ = other.basicAttributeList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureBasicAttributeListIsMutable();
            basicAttributeList_.addAll(other.basicAttributeList_);
          }
          onChanged();
        }
        if (other.hasBasicAdvance()) {
          setBasicAdvance(other.getBasicAdvance());
        }
        if (!other.resistanceList_.isEmpty()) {
          if (resistanceList_.isEmpty()) {
            resistanceList_ = other.resistanceList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureResistanceListIsMutable();
            resistanceList_.addAll(other.resistanceList_);
          }
          onChanged();
        }
        if (!other.commonAttackList_.isEmpty()) {
          if (commonAttackList_.isEmpty()) {
            commonAttackList_ = other.commonAttackList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCommonAttackListIsMutable();
            commonAttackList_.addAll(other.commonAttackList_);
          }
          onChanged();
        }
        if (!other.elementMasterList_.isEmpty()) {
          if (elementMasterList_.isEmpty()) {
            elementMasterList_ = other.elementMasterList_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureElementMasterListIsMutable();
            elementMasterList_.addAll(other.elementMasterList_);
          }
          onChanged();
        }
        if (!other.raceRestrainList_.isEmpty()) {
          if (raceRestrainList_.isEmpty()) {
            raceRestrainList_ = other.raceRestrainList_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureRaceRestrainListIsMutable();
            raceRestrainList_.addAll(other.raceRestrainList_);
          }
          onChanged();
        }
        if (!other.debuffPatienceList_.isEmpty()) {
          if (debuffPatienceList_.isEmpty()) {
            debuffPatienceList_ = other.debuffPatienceList_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureDebuffPatienceListIsMutable();
            debuffPatienceList_.addAll(other.debuffPatienceList_);
          }
          onChanged();
        }
        if (other.hasHeroSize()) {
          setHeroSize(other.getHeroSize());
        }
        if (other.hasResource()) {
          bitField0_ |= 0x00001000;
          resource_ = other.resource_;
          onChanged();
        }
        if (!other.effectTimeList_.isEmpty()) {
          if (effectTimeList_.isEmpty()) {
            effectTimeList_ = other.effectTimeList_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureEffectTimeListIsMutable();
            effectTimeList_.addAll(other.effectTimeList_);
          }
          onChanged();
        }
        if (!other.actionTimeList_.isEmpty()) {
          if (actionTimeList_.isEmpty()) {
            actionTimeList_ = other.actionTimeList_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureActionTimeListIsMutable();
            actionTimeList_.addAll(other.actionTimeList_);
          }
          onChanged();
        }
        if (other.hasHeroScale()) {
          setHeroScale(other.getHeroScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasHeroName()) {
          
          return false;
        }
        if (!hasQuality()) {
          
          return false;
        }
        if (!hasHeroClass()) {
          
          return false;
        }
        if (!hasBasicAdvance()) {
          
          return false;
        }
        if (!hasHeroSize()) {
          
          return false;
        }
        if (!hasResource()) {
          
          return false;
        }
        if (!hasHeroScale()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.MatchProbuf.MatchNpc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.MatchProbuf.MatchNpc) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string heroName = 2;
      private java.lang.Object heroName_ = "";
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public boolean hasHeroName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public java.lang.String getHeroName() {
        java.lang.Object ref = heroName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          heroName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeroNameBytes() {
        java.lang.Object ref = heroName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          heroName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder setHeroName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        heroName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder clearHeroName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heroName_ = getDefaultInstance().getHeroName();
        onChanged();
        return this;
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder setHeroNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        heroName_ = value;
        onChanged();
        return this;
      }

      // required int32 quality = 3;
      private int quality_ ;
      /**
       * <code>required int32 quality = 3;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 quality = 3;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>required int32 quality = 3;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000004;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 quality = 3;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000004);
        quality_ = 0;
        onChanged();
        return this;
      }

      // required int32 heroClass = 4;
      private int heroClass_ ;
      /**
       * <code>required int32 heroClass = 4;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public boolean hasHeroClass() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 heroClass = 4;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public int getHeroClass() {
        return heroClass_;
      }
      /**
       * <code>required int32 heroClass = 4;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public Builder setHeroClass(int value) {
        bitField0_ |= 0x00000008;
        heroClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroClass = 4;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public Builder clearHeroClass() {
        bitField0_ = (bitField0_ & ~0x00000008);
        heroClass_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 basicAttributeList = 5;
      private java.util.List<java.lang.Integer> basicAttributeList_ = java.util.Collections.emptyList();
      private void ensureBasicAttributeListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>(basicAttributeList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 basicAttributeList = 5;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBasicAttributeListList() {
        return java.util.Collections.unmodifiableList(basicAttributeList_);
      }
      /**
       * <code>repeated int32 basicAttributeList = 5;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public int getBasicAttributeListCount() {
        return basicAttributeList_.size();
      }
      /**
       * <code>repeated int32 basicAttributeList = 5;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public int getBasicAttributeList(int index) {
        return basicAttributeList_.get(index);
      }
      /**
       * <code>repeated int32 basicAttributeList = 5;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder setBasicAttributeList(
          int index, int value) {
        ensureBasicAttributeListIsMutable();
        basicAttributeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 5;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder addBasicAttributeList(int value) {
        ensureBasicAttributeListIsMutable();
        basicAttributeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 5;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder addAllBasicAttributeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBasicAttributeListIsMutable();
        super.addAll(values, basicAttributeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 5;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder clearBasicAttributeList() {
        basicAttributeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // required int32 basicAdvance = 6;
      private int basicAdvance_ ;
      /**
       * <code>required int32 basicAdvance = 6;</code>
       *
       * <pre>
       * 精英副本基础属性加成
       * </pre>
       */
      public boolean hasBasicAdvance() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 basicAdvance = 6;</code>
       *
       * <pre>
       * 精英副本基础属性加成
       * </pre>
       */
      public int getBasicAdvance() {
        return basicAdvance_;
      }
      /**
       * <code>required int32 basicAdvance = 6;</code>
       *
       * <pre>
       * 精英副本基础属性加成
       * </pre>
       */
      public Builder setBasicAdvance(int value) {
        bitField0_ |= 0x00000020;
        basicAdvance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 basicAdvance = 6;</code>
       *
       * <pre>
       * 精英副本基础属性加成
       * </pre>
       */
      public Builder clearBasicAdvance() {
        bitField0_ = (bitField0_ & ~0x00000020);
        basicAdvance_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 resistanceList = 7;
      private java.util.List<java.lang.Integer> resistanceList_ = java.util.Collections.emptyList();
      private void ensureResistanceListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          resistanceList_ = new java.util.ArrayList<java.lang.Integer>(resistanceList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 resistanceList = 7;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getResistanceListList() {
        return java.util.Collections.unmodifiableList(resistanceList_);
      }
      /**
       * <code>repeated int32 resistanceList = 7;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public int getResistanceListCount() {
        return resistanceList_.size();
      }
      /**
       * <code>repeated int32 resistanceList = 7;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public int getResistanceList(int index) {
        return resistanceList_.get(index);
      }
      /**
       * <code>repeated int32 resistanceList = 7;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder setResistanceList(
          int index, int value) {
        ensureResistanceListIsMutable();
        resistanceList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 7;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder addResistanceList(int value) {
        ensureResistanceListIsMutable();
        resistanceList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 7;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder addAllResistanceList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureResistanceListIsMutable();
        super.addAll(values, resistanceList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 7;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder clearResistanceList() {
        resistanceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 commonAttackList = 8;
      private java.util.List<java.lang.Integer> commonAttackList_ = java.util.Collections.emptyList();
      private void ensureCommonAttackListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          commonAttackList_ = new java.util.ArrayList<java.lang.Integer>(commonAttackList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 commonAttackList = 8;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCommonAttackListList() {
        return java.util.Collections.unmodifiableList(commonAttackList_);
      }
      /**
       * <code>repeated int32 commonAttackList = 8;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public int getCommonAttackListCount() {
        return commonAttackList_.size();
      }
      /**
       * <code>repeated int32 commonAttackList = 8;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public int getCommonAttackList(int index) {
        return commonAttackList_.get(index);
      }
      /**
       * <code>repeated int32 commonAttackList = 8;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder setCommonAttackList(
          int index, int value) {
        ensureCommonAttackListIsMutable();
        commonAttackList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 8;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder addCommonAttackList(int value) {
        ensureCommonAttackListIsMutable();
        commonAttackList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 8;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder addAllCommonAttackList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCommonAttackListIsMutable();
        super.addAll(values, commonAttackList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 8;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder clearCommonAttackList() {
        commonAttackList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 elementMasterList = 9;
      private java.util.List<java.lang.Integer> elementMasterList_ = java.util.Collections.emptyList();
      private void ensureElementMasterListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          elementMasterList_ = new java.util.ArrayList<java.lang.Integer>(elementMasterList_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 elementMasterList = 9;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getElementMasterListList() {
        return java.util.Collections.unmodifiableList(elementMasterList_);
      }
      /**
       * <code>repeated int32 elementMasterList = 9;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public int getElementMasterListCount() {
        return elementMasterList_.size();
      }
      /**
       * <code>repeated int32 elementMasterList = 9;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public int getElementMasterList(int index) {
        return elementMasterList_.get(index);
      }
      /**
       * <code>repeated int32 elementMasterList = 9;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder setElementMasterList(
          int index, int value) {
        ensureElementMasterListIsMutable();
        elementMasterList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 9;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder addElementMasterList(int value) {
        ensureElementMasterListIsMutable();
        elementMasterList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 9;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder addAllElementMasterList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureElementMasterListIsMutable();
        super.addAll(values, elementMasterList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 9;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder clearElementMasterList() {
        elementMasterList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 raceRestrainList = 10;
      private java.util.List<java.lang.Integer> raceRestrainList_ = java.util.Collections.emptyList();
      private void ensureRaceRestrainListIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>(raceRestrainList_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 raceRestrainList = 10;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRaceRestrainListList() {
        return java.util.Collections.unmodifiableList(raceRestrainList_);
      }
      /**
       * <code>repeated int32 raceRestrainList = 10;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public int getRaceRestrainListCount() {
        return raceRestrainList_.size();
      }
      /**
       * <code>repeated int32 raceRestrainList = 10;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public int getRaceRestrainList(int index) {
        return raceRestrainList_.get(index);
      }
      /**
       * <code>repeated int32 raceRestrainList = 10;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder setRaceRestrainList(
          int index, int value) {
        ensureRaceRestrainListIsMutable();
        raceRestrainList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 10;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder addRaceRestrainList(int value) {
        ensureRaceRestrainListIsMutable();
        raceRestrainList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 10;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder addAllRaceRestrainList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRaceRestrainListIsMutable();
        super.addAll(values, raceRestrainList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 10;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder clearRaceRestrainList() {
        raceRestrainList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 debuffPatienceList = 11;
      private java.util.List<java.lang.Integer> debuffPatienceList_ = java.util.Collections.emptyList();
      private void ensureDebuffPatienceListIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>(debuffPatienceList_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 debuffPatienceList = 11;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDebuffPatienceListList() {
        return java.util.Collections.unmodifiableList(debuffPatienceList_);
      }
      /**
       * <code>repeated int32 debuffPatienceList = 11;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public int getDebuffPatienceListCount() {
        return debuffPatienceList_.size();
      }
      /**
       * <code>repeated int32 debuffPatienceList = 11;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public int getDebuffPatienceList(int index) {
        return debuffPatienceList_.get(index);
      }
      /**
       * <code>repeated int32 debuffPatienceList = 11;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder setDebuffPatienceList(
          int index, int value) {
        ensureDebuffPatienceListIsMutable();
        debuffPatienceList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 11;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder addDebuffPatienceList(int value) {
        ensureDebuffPatienceListIsMutable();
        debuffPatienceList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 11;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder addAllDebuffPatienceList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDebuffPatienceListIsMutable();
        super.addAll(values, debuffPatienceList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 11;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder clearDebuffPatienceList() {
        debuffPatienceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // required int32 heroSize = 12;
      private int heroSize_ ;
      /**
       * <code>required int32 heroSize = 12;</code>
       *
       * <pre>
       * 碰撞大小
       * </pre>
       */
      public boolean hasHeroSize() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 heroSize = 12;</code>
       *
       * <pre>
       * 碰撞大小
       * </pre>
       */
      public int getHeroSize() {
        return heroSize_;
      }
      /**
       * <code>required int32 heroSize = 12;</code>
       *
       * <pre>
       * 碰撞大小
       * </pre>
       */
      public Builder setHeroSize(int value) {
        bitField0_ |= 0x00000800;
        heroSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroSize = 12;</code>
       *
       * <pre>
       * 碰撞大小
       * </pre>
       */
      public Builder clearHeroSize() {
        bitField0_ = (bitField0_ & ~0x00000800);
        heroSize_ = 0;
        onChanged();
        return this;
      }

      // required string resource = 13;
      private java.lang.Object resource_ = "";
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public boolean hasResource() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public java.lang.String getResource() {
        java.lang.Object ref = resource_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          resource_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public com.google.protobuf.ByteString
          getResourceBytes() {
        java.lang.Object ref = resource_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resource_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder setResource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        resource_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder clearResource() {
        bitField0_ = (bitField0_ & ~0x00001000);
        resource_ = getDefaultInstance().getResource();
        onChanged();
        return this;
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder setResourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        resource_ = value;
        onChanged();
        return this;
      }

      // repeated int32 effectTimeList = 14;
      private java.util.List<java.lang.Integer> effectTimeList_ = java.util.Collections.emptyList();
      private void ensureEffectTimeListIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          effectTimeList_ = new java.util.ArrayList<java.lang.Integer>(effectTimeList_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEffectTimeListList() {
        return java.util.Collections.unmodifiableList(effectTimeList_);
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public int getEffectTimeListCount() {
        return effectTimeList_.size();
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public int getEffectTimeList(int index) {
        return effectTimeList_.get(index);
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder setEffectTimeList(
          int index, int value) {
        ensureEffectTimeListIsMutable();
        effectTimeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder addEffectTimeList(int value) {
        ensureEffectTimeListIsMutable();
        effectTimeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder addAllEffectTimeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEffectTimeListIsMutable();
        super.addAll(values, effectTimeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder clearEffectTimeList() {
        effectTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 actionTimeList = 15;
      private java.util.List<java.lang.Integer> actionTimeList_ = java.util.Collections.emptyList();
      private void ensureActionTimeListIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          actionTimeList_ = new java.util.ArrayList<java.lang.Integer>(actionTimeList_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getActionTimeListList() {
        return java.util.Collections.unmodifiableList(actionTimeList_);
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public int getActionTimeListCount() {
        return actionTimeList_.size();
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public int getActionTimeList(int index) {
        return actionTimeList_.get(index);
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder setActionTimeList(
          int index, int value) {
        ensureActionTimeListIsMutable();
        actionTimeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder addActionTimeList(int value) {
        ensureActionTimeListIsMutable();
        actionTimeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder addAllActionTimeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActionTimeListIsMutable();
        super.addAll(values, actionTimeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder clearActionTimeList() {
        actionTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // required int32 heroScale = 16;
      private int heroScale_ ;
      /**
       * <code>required int32 heroScale = 16;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public boolean hasHeroScale() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 heroScale = 16;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public int getHeroScale() {
        return heroScale_;
      }
      /**
       * <code>required int32 heroScale = 16;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public Builder setHeroScale(int value) {
        bitField0_ |= 0x00008000;
        heroScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroScale = 16;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public Builder clearHeroScale() {
        bitField0_ = (bitField0_ & ~0x00008000);
        heroScale_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MatchNpc)
    }

    static {
      defaultInstance = new MatchNpc(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MatchNpc)
  }

  public interface MatchShopOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    int getKeyId();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 商店类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 商店类型
     * </pre>
     */
    int getType();

    // repeated int32 goodList = 3;
    /**
     * <code>repeated int32 goodList = 3;</code>
     *
     * <pre>
     * 格位
     * </pre>
     */
    java.util.List<java.lang.Integer> getGoodListList();
    /**
     * <code>repeated int32 goodList = 3;</code>
     *
     * <pre>
     * 格位
     * </pre>
     */
    int getGoodListCount();
    /**
     * <code>repeated int32 goodList = 3;</code>
     *
     * <pre>
     * 格位
     * </pre>
     */
    int getGoodList(int index);

    // required int32 requireMoneyType = 4;
    /**
     * <code>required int32 requireMoneyType = 4;</code>
     *
     * <pre>
     * 刷新货币
     * </pre>
     */
    boolean hasRequireMoneyType();
    /**
     * <code>required int32 requireMoneyType = 4;</code>
     *
     * <pre>
     * 刷新货币
     * </pre>
     */
    int getRequireMoneyType();

    // repeated int32 requireMoneyCountList = 5;
    /**
     * <code>repeated int32 requireMoneyCountList = 5;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    java.util.List<java.lang.Integer> getRequireMoneyCountListList();
    /**
     * <code>repeated int32 requireMoneyCountList = 5;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    int getRequireMoneyCountListCount();
    /**
     * <code>repeated int32 requireMoneyCountList = 5;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    int getRequireMoneyCountList(int index);
  }
  /**
   * Protobuf type {@code MatchShop}
   */
  public static final class MatchShop extends
      com.google.protobuf.GeneratedMessage
      implements MatchShopOrBuilder {
    // Use MatchShop.newBuilder() to construct.
    private MatchShop(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchShop(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchShop defaultInstance;
    public static MatchShop getDefaultInstance() {
      return defaultInstance;
    }

    public MatchShop getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchShop(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                goodList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              goodList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                goodList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                goodList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              requireMoneyType_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                requireMoneyCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              requireMoneyCountList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                requireMoneyCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                requireMoneyCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          goodList_ = java.util.Collections.unmodifiableList(goodList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          requireMoneyCountList_ = java.util.Collections.unmodifiableList(requireMoneyCountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchShop_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchShop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.MatchProbuf.MatchShop.class, com.cwa.prototype.protobuf.MatchProbuf.MatchShop.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchShop> PARSER =
        new com.google.protobuf.AbstractParser<MatchShop>() {
      public MatchShop parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchShop(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchShop> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 商店类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 商店类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // repeated int32 goodList = 3;
    public static final int GOODLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> goodList_;
    /**
     * <code>repeated int32 goodList = 3;</code>
     *
     * <pre>
     * 格位
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGoodListList() {
      return goodList_;
    }
    /**
     * <code>repeated int32 goodList = 3;</code>
     *
     * <pre>
     * 格位
     * </pre>
     */
    public int getGoodListCount() {
      return goodList_.size();
    }
    /**
     * <code>repeated int32 goodList = 3;</code>
     *
     * <pre>
     * 格位
     * </pre>
     */
    public int getGoodList(int index) {
      return goodList_.get(index);
    }

    // required int32 requireMoneyType = 4;
    public static final int REQUIREMONEYTYPE_FIELD_NUMBER = 4;
    private int requireMoneyType_;
    /**
     * <code>required int32 requireMoneyType = 4;</code>
     *
     * <pre>
     * 刷新货币
     * </pre>
     */
    public boolean hasRequireMoneyType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 requireMoneyType = 4;</code>
     *
     * <pre>
     * 刷新货币
     * </pre>
     */
    public int getRequireMoneyType() {
      return requireMoneyType_;
    }

    // repeated int32 requireMoneyCountList = 5;
    public static final int REQUIREMONEYCOUNTLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> requireMoneyCountList_;
    /**
     * <code>repeated int32 requireMoneyCountList = 5;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRequireMoneyCountListList() {
      return requireMoneyCountList_;
    }
    /**
     * <code>repeated int32 requireMoneyCountList = 5;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    public int getRequireMoneyCountListCount() {
      return requireMoneyCountList_.size();
    }
    /**
     * <code>repeated int32 requireMoneyCountList = 5;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    public int getRequireMoneyCountList(int index) {
      return requireMoneyCountList_.get(index);
    }

    private void initFields() {
      keyId_ = 0;
      type_ = 0;
      goodList_ = java.util.Collections.emptyList();
      requireMoneyType_ = 0;
      requireMoneyCountList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      for (int i = 0; i < goodList_.size(); i++) {
        output.writeInt32(3, goodList_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, requireMoneyType_);
      }
      for (int i = 0; i < requireMoneyCountList_.size(); i++) {
        output.writeInt32(5, requireMoneyCountList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < goodList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(goodList_.get(i));
        }
        size += dataSize;
        size += 1 * getGoodListList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, requireMoneyType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requireMoneyCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(requireMoneyCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getRequireMoneyCountListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchShop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.MatchProbuf.MatchShop prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MatchShop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.MatchProbuf.MatchShopOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchShop_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchShop_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.MatchProbuf.MatchShop.class, com.cwa.prototype.protobuf.MatchProbuf.MatchShop.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.MatchProbuf.MatchShop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        goodList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        requireMoneyType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        requireMoneyCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchShop_descriptor;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchShop getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.MatchShop.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchShop build() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchShop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchShop buildPartial() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchShop result = new com.cwa.prototype.protobuf.MatchProbuf.MatchShop(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          goodList_ = java.util.Collections.unmodifiableList(goodList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.goodList_ = goodList_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.requireMoneyType_ = requireMoneyType_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          requireMoneyCountList_ = java.util.Collections.unmodifiableList(requireMoneyCountList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.requireMoneyCountList_ = requireMoneyCountList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.MatchProbuf.MatchShop) {
          return mergeFrom((com.cwa.prototype.protobuf.MatchProbuf.MatchShop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.MatchProbuf.MatchShop other) {
        if (other == com.cwa.prototype.protobuf.MatchProbuf.MatchShop.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.goodList_.isEmpty()) {
          if (goodList_.isEmpty()) {
            goodList_ = other.goodList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureGoodListIsMutable();
            goodList_.addAll(other.goodList_);
          }
          onChanged();
        }
        if (other.hasRequireMoneyType()) {
          setRequireMoneyType(other.getRequireMoneyType());
        }
        if (!other.requireMoneyCountList_.isEmpty()) {
          if (requireMoneyCountList_.isEmpty()) {
            requireMoneyCountList_ = other.requireMoneyCountList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRequireMoneyCountListIsMutable();
            requireMoneyCountList_.addAll(other.requireMoneyCountList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasRequireMoneyType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.MatchProbuf.MatchShop parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.MatchProbuf.MatchShop) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 商店类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 商店类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 商店类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 商店类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 goodList = 3;
      private java.util.List<java.lang.Integer> goodList_ = java.util.Collections.emptyList();
      private void ensureGoodListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          goodList_ = new java.util.ArrayList<java.lang.Integer>(goodList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 goodList = 3;</code>
       *
       * <pre>
       * 格位
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGoodListList() {
        return java.util.Collections.unmodifiableList(goodList_);
      }
      /**
       * <code>repeated int32 goodList = 3;</code>
       *
       * <pre>
       * 格位
       * </pre>
       */
      public int getGoodListCount() {
        return goodList_.size();
      }
      /**
       * <code>repeated int32 goodList = 3;</code>
       *
       * <pre>
       * 格位
       * </pre>
       */
      public int getGoodList(int index) {
        return goodList_.get(index);
      }
      /**
       * <code>repeated int32 goodList = 3;</code>
       *
       * <pre>
       * 格位
       * </pre>
       */
      public Builder setGoodList(
          int index, int value) {
        ensureGoodListIsMutable();
        goodList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 goodList = 3;</code>
       *
       * <pre>
       * 格位
       * </pre>
       */
      public Builder addGoodList(int value) {
        ensureGoodListIsMutable();
        goodList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 goodList = 3;</code>
       *
       * <pre>
       * 格位
       * </pre>
       */
      public Builder addAllGoodList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGoodListIsMutable();
        super.addAll(values, goodList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 goodList = 3;</code>
       *
       * <pre>
       * 格位
       * </pre>
       */
      public Builder clearGoodList() {
        goodList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // required int32 requireMoneyType = 4;
      private int requireMoneyType_ ;
      /**
       * <code>required int32 requireMoneyType = 4;</code>
       *
       * <pre>
       * 刷新货币
       * </pre>
       */
      public boolean hasRequireMoneyType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 requireMoneyType = 4;</code>
       *
       * <pre>
       * 刷新货币
       * </pre>
       */
      public int getRequireMoneyType() {
        return requireMoneyType_;
      }
      /**
       * <code>required int32 requireMoneyType = 4;</code>
       *
       * <pre>
       * 刷新货币
       * </pre>
       */
      public Builder setRequireMoneyType(int value) {
        bitField0_ |= 0x00000008;
        requireMoneyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyType = 4;</code>
       *
       * <pre>
       * 刷新货币
       * </pre>
       */
      public Builder clearRequireMoneyType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        requireMoneyType_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 requireMoneyCountList = 5;
      private java.util.List<java.lang.Integer> requireMoneyCountList_ = java.util.Collections.emptyList();
      private void ensureRequireMoneyCountListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          requireMoneyCountList_ = new java.util.ArrayList<java.lang.Integer>(requireMoneyCountList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 5;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRequireMoneyCountListList() {
        return java.util.Collections.unmodifiableList(requireMoneyCountList_);
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 5;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public int getRequireMoneyCountListCount() {
        return requireMoneyCountList_.size();
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 5;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public int getRequireMoneyCountList(int index) {
        return requireMoneyCountList_.get(index);
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 5;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public Builder setRequireMoneyCountList(
          int index, int value) {
        ensureRequireMoneyCountListIsMutable();
        requireMoneyCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 5;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public Builder addRequireMoneyCountList(int value) {
        ensureRequireMoneyCountListIsMutable();
        requireMoneyCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 5;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public Builder addAllRequireMoneyCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRequireMoneyCountListIsMutable();
        super.addAll(values, requireMoneyCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 5;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public Builder clearRequireMoneyCountList() {
        requireMoneyCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MatchShop)
    }

    static {
      defaultInstance = new MatchShop(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MatchShop)
  }

  public interface MatchGoodsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    int getKeyId();

    // repeated int32 goodList = 2;
    /**
     * <code>repeated int32 goodList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    java.util.List<java.lang.Integer> getGoodListList();
    /**
     * <code>repeated int32 goodList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    int getGoodListCount();
    /**
     * <code>repeated int32 goodList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    int getGoodList(int index);

    // repeated int32 countList = 3;
    /**
     * <code>repeated int32 countList = 3;</code>
     *
     * <pre>
     * 个数
     * </pre>
     */
    java.util.List<java.lang.Integer> getCountListList();
    /**
     * <code>repeated int32 countList = 3;</code>
     *
     * <pre>
     * 个数
     * </pre>
     */
    int getCountListCount();
    /**
     * <code>repeated int32 countList = 3;</code>
     *
     * <pre>
     * 个数
     * </pre>
     */
    int getCountList(int index);

    // repeated int32 ratiosList = 4;
    /**
     * <code>repeated int32 ratiosList = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    java.util.List<java.lang.Integer> getRatiosListList();
    /**
     * <code>repeated int32 ratiosList = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    int getRatiosListCount();
    /**
     * <code>repeated int32 ratiosList = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    int getRatiosList(int index);

    // repeated int32 moneyTypeList = 5;
    /**
     * <code>repeated int32 moneyTypeList = 5;</code>
     *
     * <pre>
     * 货币
     * </pre>
     */
    java.util.List<java.lang.Integer> getMoneyTypeListList();
    /**
     * <code>repeated int32 moneyTypeList = 5;</code>
     *
     * <pre>
     * 货币
     * </pre>
     */
    int getMoneyTypeListCount();
    /**
     * <code>repeated int32 moneyTypeList = 5;</code>
     *
     * <pre>
     * 货币
     * </pre>
     */
    int getMoneyTypeList(int index);

    // repeated int32 moneyCountList = 6;
    /**
     * <code>repeated int32 moneyCountList = 6;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    java.util.List<java.lang.Integer> getMoneyCountListList();
    /**
     * <code>repeated int32 moneyCountList = 6;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    int getMoneyCountListCount();
    /**
     * <code>repeated int32 moneyCountList = 6;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    int getMoneyCountList(int index);
  }
  /**
   * Protobuf type {@code MatchGoods}
   */
  public static final class MatchGoods extends
      com.google.protobuf.GeneratedMessage
      implements MatchGoodsOrBuilder {
    // Use MatchGoods.newBuilder() to construct.
    private MatchGoods(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchGoods(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchGoods defaultInstance;
    public static MatchGoods getDefaultInstance() {
      return defaultInstance;
    }

    public MatchGoods getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchGoods(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                goodList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              goodList_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                goodList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                goodList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                countList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              countList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                countList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                countList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ratiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              ratiosList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                ratiosList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                ratiosList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                moneyTypeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              moneyTypeList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                moneyTypeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                moneyTypeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                moneyCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              moneyCountList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                moneyCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                moneyCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          goodList_ = java.util.Collections.unmodifiableList(goodList_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          countList_ = java.util.Collections.unmodifiableList(countList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ratiosList_ = java.util.Collections.unmodifiableList(ratiosList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          moneyTypeList_ = java.util.Collections.unmodifiableList(moneyTypeList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          moneyCountList_ = java.util.Collections.unmodifiableList(moneyCountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchGoods_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchGoods_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.MatchProbuf.MatchGoods.class, com.cwa.prototype.protobuf.MatchProbuf.MatchGoods.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchGoods> PARSER =
        new com.google.protobuf.AbstractParser<MatchGoods>() {
      public MatchGoods parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchGoods(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchGoods> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // repeated int32 goodList = 2;
    public static final int GOODLIST_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> goodList_;
    /**
     * <code>repeated int32 goodList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGoodListList() {
      return goodList_;
    }
    /**
     * <code>repeated int32 goodList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    public int getGoodListCount() {
      return goodList_.size();
    }
    /**
     * <code>repeated int32 goodList = 2;</code>
     *
     * <pre>
     * 物品
     * </pre>
     */
    public int getGoodList(int index) {
      return goodList_.get(index);
    }

    // repeated int32 countList = 3;
    public static final int COUNTLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> countList_;
    /**
     * <code>repeated int32 countList = 3;</code>
     *
     * <pre>
     * 个数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCountListList() {
      return countList_;
    }
    /**
     * <code>repeated int32 countList = 3;</code>
     *
     * <pre>
     * 个数
     * </pre>
     */
    public int getCountListCount() {
      return countList_.size();
    }
    /**
     * <code>repeated int32 countList = 3;</code>
     *
     * <pre>
     * 个数
     * </pre>
     */
    public int getCountList(int index) {
      return countList_.get(index);
    }

    // repeated int32 ratiosList = 4;
    public static final int RATIOSLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> ratiosList_;
    /**
     * <code>repeated int32 ratiosList = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRatiosListList() {
      return ratiosList_;
    }
    /**
     * <code>repeated int32 ratiosList = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    public int getRatiosListCount() {
      return ratiosList_.size();
    }
    /**
     * <code>repeated int32 ratiosList = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    public int getRatiosList(int index) {
      return ratiosList_.get(index);
    }

    // repeated int32 moneyTypeList = 5;
    public static final int MONEYTYPELIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> moneyTypeList_;
    /**
     * <code>repeated int32 moneyTypeList = 5;</code>
     *
     * <pre>
     * 货币
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMoneyTypeListList() {
      return moneyTypeList_;
    }
    /**
     * <code>repeated int32 moneyTypeList = 5;</code>
     *
     * <pre>
     * 货币
     * </pre>
     */
    public int getMoneyTypeListCount() {
      return moneyTypeList_.size();
    }
    /**
     * <code>repeated int32 moneyTypeList = 5;</code>
     *
     * <pre>
     * 货币
     * </pre>
     */
    public int getMoneyTypeList(int index) {
      return moneyTypeList_.get(index);
    }

    // repeated int32 moneyCountList = 6;
    public static final int MONEYCOUNTLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> moneyCountList_;
    /**
     * <code>repeated int32 moneyCountList = 6;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMoneyCountListList() {
      return moneyCountList_;
    }
    /**
     * <code>repeated int32 moneyCountList = 6;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    public int getMoneyCountListCount() {
      return moneyCountList_.size();
    }
    /**
     * <code>repeated int32 moneyCountList = 6;</code>
     *
     * <pre>
     * 价格
     * </pre>
     */
    public int getMoneyCountList(int index) {
      return moneyCountList_.get(index);
    }

    private void initFields() {
      keyId_ = 0;
      goodList_ = java.util.Collections.emptyList();
      countList_ = java.util.Collections.emptyList();
      ratiosList_ = java.util.Collections.emptyList();
      moneyTypeList_ = java.util.Collections.emptyList();
      moneyCountList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      for (int i = 0; i < goodList_.size(); i++) {
        output.writeInt32(2, goodList_.get(i));
      }
      for (int i = 0; i < countList_.size(); i++) {
        output.writeInt32(3, countList_.get(i));
      }
      for (int i = 0; i < ratiosList_.size(); i++) {
        output.writeInt32(4, ratiosList_.get(i));
      }
      for (int i = 0; i < moneyTypeList_.size(); i++) {
        output.writeInt32(5, moneyTypeList_.get(i));
      }
      for (int i = 0; i < moneyCountList_.size(); i++) {
        output.writeInt32(6, moneyCountList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < goodList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(goodList_.get(i));
        }
        size += dataSize;
        size += 1 * getGoodListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < countList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(countList_.get(i));
        }
        size += dataSize;
        size += 1 * getCountListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ratiosList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ratiosList_.get(i));
        }
        size += dataSize;
        size += 1 * getRatiosListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < moneyTypeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(moneyTypeList_.get(i));
        }
        size += dataSize;
        size += 1 * getMoneyTypeListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < moneyCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(moneyCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getMoneyCountListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.MatchProbuf.MatchGoods prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MatchGoods}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.MatchProbuf.MatchGoodsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchGoods_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchGoods_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.MatchProbuf.MatchGoods.class, com.cwa.prototype.protobuf.MatchProbuf.MatchGoods.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.MatchProbuf.MatchGoods.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        goodList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        countList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        ratiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        moneyTypeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        moneyCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_MatchGoods_descriptor;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchGoods getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.MatchGoods.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchGoods build() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchGoods result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.MatchGoods buildPartial() {
        com.cwa.prototype.protobuf.MatchProbuf.MatchGoods result = new com.cwa.prototype.protobuf.MatchProbuf.MatchGoods(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          goodList_ = java.util.Collections.unmodifiableList(goodList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.goodList_ = goodList_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          countList_ = java.util.Collections.unmodifiableList(countList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.countList_ = countList_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ratiosList_ = java.util.Collections.unmodifiableList(ratiosList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ratiosList_ = ratiosList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          moneyTypeList_ = java.util.Collections.unmodifiableList(moneyTypeList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.moneyTypeList_ = moneyTypeList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          moneyCountList_ = java.util.Collections.unmodifiableList(moneyCountList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.moneyCountList_ = moneyCountList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.MatchProbuf.MatchGoods) {
          return mergeFrom((com.cwa.prototype.protobuf.MatchProbuf.MatchGoods)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.MatchProbuf.MatchGoods other) {
        if (other == com.cwa.prototype.protobuf.MatchProbuf.MatchGoods.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (!other.goodList_.isEmpty()) {
          if (goodList_.isEmpty()) {
            goodList_ = other.goodList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureGoodListIsMutable();
            goodList_.addAll(other.goodList_);
          }
          onChanged();
        }
        if (!other.countList_.isEmpty()) {
          if (countList_.isEmpty()) {
            countList_ = other.countList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCountListIsMutable();
            countList_.addAll(other.countList_);
          }
          onChanged();
        }
        if (!other.ratiosList_.isEmpty()) {
          if (ratiosList_.isEmpty()) {
            ratiosList_ = other.ratiosList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRatiosListIsMutable();
            ratiosList_.addAll(other.ratiosList_);
          }
          onChanged();
        }
        if (!other.moneyTypeList_.isEmpty()) {
          if (moneyTypeList_.isEmpty()) {
            moneyTypeList_ = other.moneyTypeList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureMoneyTypeListIsMutable();
            moneyTypeList_.addAll(other.moneyTypeList_);
          }
          onChanged();
        }
        if (!other.moneyCountList_.isEmpty()) {
          if (moneyCountList_.isEmpty()) {
            moneyCountList_ = other.moneyCountList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureMoneyCountListIsMutable();
            moneyCountList_.addAll(other.moneyCountList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.MatchProbuf.MatchGoods parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.MatchProbuf.MatchGoods) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 goodList = 2;
      private java.util.List<java.lang.Integer> goodList_ = java.util.Collections.emptyList();
      private void ensureGoodListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          goodList_ = new java.util.ArrayList<java.lang.Integer>(goodList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 goodList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGoodListList() {
        return java.util.Collections.unmodifiableList(goodList_);
      }
      /**
       * <code>repeated int32 goodList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public int getGoodListCount() {
        return goodList_.size();
      }
      /**
       * <code>repeated int32 goodList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public int getGoodList(int index) {
        return goodList_.get(index);
      }
      /**
       * <code>repeated int32 goodList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public Builder setGoodList(
          int index, int value) {
        ensureGoodListIsMutable();
        goodList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 goodList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public Builder addGoodList(int value) {
        ensureGoodListIsMutable();
        goodList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 goodList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public Builder addAllGoodList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGoodListIsMutable();
        super.addAll(values, goodList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 goodList = 2;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public Builder clearGoodList() {
        goodList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 countList = 3;
      private java.util.List<java.lang.Integer> countList_ = java.util.Collections.emptyList();
      private void ensureCountListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          countList_ = new java.util.ArrayList<java.lang.Integer>(countList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 countList = 3;</code>
       *
       * <pre>
       * 个数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCountListList() {
        return java.util.Collections.unmodifiableList(countList_);
      }
      /**
       * <code>repeated int32 countList = 3;</code>
       *
       * <pre>
       * 个数
       * </pre>
       */
      public int getCountListCount() {
        return countList_.size();
      }
      /**
       * <code>repeated int32 countList = 3;</code>
       *
       * <pre>
       * 个数
       * </pre>
       */
      public int getCountList(int index) {
        return countList_.get(index);
      }
      /**
       * <code>repeated int32 countList = 3;</code>
       *
       * <pre>
       * 个数
       * </pre>
       */
      public Builder setCountList(
          int index, int value) {
        ensureCountListIsMutable();
        countList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 3;</code>
       *
       * <pre>
       * 个数
       * </pre>
       */
      public Builder addCountList(int value) {
        ensureCountListIsMutable();
        countList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 3;</code>
       *
       * <pre>
       * 个数
       * </pre>
       */
      public Builder addAllCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountListIsMutable();
        super.addAll(values, countList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 countList = 3;</code>
       *
       * <pre>
       * 个数
       * </pre>
       */
      public Builder clearCountList() {
        countList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 ratiosList = 4;
      private java.util.List<java.lang.Integer> ratiosList_ = java.util.Collections.emptyList();
      private void ensureRatiosListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ratiosList_ = new java.util.ArrayList<java.lang.Integer>(ratiosList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 ratiosList = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRatiosListList() {
        return java.util.Collections.unmodifiableList(ratiosList_);
      }
      /**
       * <code>repeated int32 ratiosList = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public int getRatiosListCount() {
        return ratiosList_.size();
      }
      /**
       * <code>repeated int32 ratiosList = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public int getRatiosList(int index) {
        return ratiosList_.get(index);
      }
      /**
       * <code>repeated int32 ratiosList = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public Builder setRatiosList(
          int index, int value) {
        ensureRatiosListIsMutable();
        ratiosList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ratiosList = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public Builder addRatiosList(int value) {
        ensureRatiosListIsMutable();
        ratiosList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ratiosList = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public Builder addAllRatiosList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRatiosListIsMutable();
        super.addAll(values, ratiosList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ratiosList = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public Builder clearRatiosList() {
        ratiosList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 moneyTypeList = 5;
      private java.util.List<java.lang.Integer> moneyTypeList_ = java.util.Collections.emptyList();
      private void ensureMoneyTypeListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          moneyTypeList_ = new java.util.ArrayList<java.lang.Integer>(moneyTypeList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 moneyTypeList = 5;</code>
       *
       * <pre>
       * 货币
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMoneyTypeListList() {
        return java.util.Collections.unmodifiableList(moneyTypeList_);
      }
      /**
       * <code>repeated int32 moneyTypeList = 5;</code>
       *
       * <pre>
       * 货币
       * </pre>
       */
      public int getMoneyTypeListCount() {
        return moneyTypeList_.size();
      }
      /**
       * <code>repeated int32 moneyTypeList = 5;</code>
       *
       * <pre>
       * 货币
       * </pre>
       */
      public int getMoneyTypeList(int index) {
        return moneyTypeList_.get(index);
      }
      /**
       * <code>repeated int32 moneyTypeList = 5;</code>
       *
       * <pre>
       * 货币
       * </pre>
       */
      public Builder setMoneyTypeList(
          int index, int value) {
        ensureMoneyTypeListIsMutable();
        moneyTypeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moneyTypeList = 5;</code>
       *
       * <pre>
       * 货币
       * </pre>
       */
      public Builder addMoneyTypeList(int value) {
        ensureMoneyTypeListIsMutable();
        moneyTypeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moneyTypeList = 5;</code>
       *
       * <pre>
       * 货币
       * </pre>
       */
      public Builder addAllMoneyTypeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMoneyTypeListIsMutable();
        super.addAll(values, moneyTypeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moneyTypeList = 5;</code>
       *
       * <pre>
       * 货币
       * </pre>
       */
      public Builder clearMoneyTypeList() {
        moneyTypeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 moneyCountList = 6;
      private java.util.List<java.lang.Integer> moneyCountList_ = java.util.Collections.emptyList();
      private void ensureMoneyCountListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          moneyCountList_ = new java.util.ArrayList<java.lang.Integer>(moneyCountList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 moneyCountList = 6;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMoneyCountListList() {
        return java.util.Collections.unmodifiableList(moneyCountList_);
      }
      /**
       * <code>repeated int32 moneyCountList = 6;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public int getMoneyCountListCount() {
        return moneyCountList_.size();
      }
      /**
       * <code>repeated int32 moneyCountList = 6;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public int getMoneyCountList(int index) {
        return moneyCountList_.get(index);
      }
      /**
       * <code>repeated int32 moneyCountList = 6;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public Builder setMoneyCountList(
          int index, int value) {
        ensureMoneyCountListIsMutable();
        moneyCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moneyCountList = 6;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public Builder addMoneyCountList(int value) {
        ensureMoneyCountListIsMutable();
        moneyCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moneyCountList = 6;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public Builder addAllMoneyCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMoneyCountListIsMutable();
        super.addAll(values, moneyCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moneyCountList = 6;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public Builder clearMoneyCountList() {
        moneyCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MatchGoods)
    }

    static {
      defaultInstance = new MatchGoods(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MatchGoods)
  }

  public interface ConcealConditionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    int getKeyId();

    // required int32 condition = 2;
    /**
     * <code>required int32 condition = 2;</code>
     *
     * <pre>
     * 条件
     * </pre>
     */
    boolean hasCondition();
    /**
     * <code>required int32 condition = 2;</code>
     *
     * <pre>
     * 条件
     * </pre>
     */
    int getCondition();

    // repeated string conditionParamList = 3;
    /**
     * <code>repeated string conditionParamList = 3;</code>
     *
     * <pre>
     * 任务条件参数
     * </pre>
     */
    java.util.List<java.lang.String>
    getConditionParamListList();
    /**
     * <code>repeated string conditionParamList = 3;</code>
     *
     * <pre>
     * 任务条件参数
     * </pre>
     */
    int getConditionParamListCount();
    /**
     * <code>repeated string conditionParamList = 3;</code>
     *
     * <pre>
     * 任务条件参数
     * </pre>
     */
    java.lang.String getConditionParamList(int index);
    /**
     * <code>repeated string conditionParamList = 3;</code>
     *
     * <pre>
     * 任务条件参数
     * </pre>
     */
    com.google.protobuf.ByteString
        getConditionParamListBytes(int index);
  }
  /**
   * Protobuf type {@code ConcealCondition}
   */
  public static final class ConcealCondition extends
      com.google.protobuf.GeneratedMessage
      implements ConcealConditionOrBuilder {
    // Use ConcealCondition.newBuilder() to construct.
    private ConcealCondition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConcealCondition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConcealCondition defaultInstance;
    public static ConcealCondition getDefaultInstance() {
      return defaultInstance;
    }

    public ConcealCondition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConcealCondition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              condition_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                conditionParamList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              conditionParamList_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          conditionParamList_ = new com.google.protobuf.UnmodifiableLazyStringList(conditionParamList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_ConcealCondition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.MatchProbuf.internal_static_ConcealCondition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition.class, com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition.Builder.class);
    }

    public static com.google.protobuf.Parser<ConcealCondition> PARSER =
        new com.google.protobuf.AbstractParser<ConcealCondition>() {
      public ConcealCondition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConcealCondition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConcealCondition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 condition = 2;
    public static final int CONDITION_FIELD_NUMBER = 2;
    private int condition_;
    /**
     * <code>required int32 condition = 2;</code>
     *
     * <pre>
     * 条件
     * </pre>
     */
    public boolean hasCondition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 condition = 2;</code>
     *
     * <pre>
     * 条件
     * </pre>
     */
    public int getCondition() {
      return condition_;
    }

    // repeated string conditionParamList = 3;
    public static final int CONDITIONPARAMLIST_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList conditionParamList_;
    /**
     * <code>repeated string conditionParamList = 3;</code>
     *
     * <pre>
     * 任务条件参数
     * </pre>
     */
    public java.util.List<java.lang.String>
        getConditionParamListList() {
      return conditionParamList_;
    }
    /**
     * <code>repeated string conditionParamList = 3;</code>
     *
     * <pre>
     * 任务条件参数
     * </pre>
     */
    public int getConditionParamListCount() {
      return conditionParamList_.size();
    }
    /**
     * <code>repeated string conditionParamList = 3;</code>
     *
     * <pre>
     * 任务条件参数
     * </pre>
     */
    public java.lang.String getConditionParamList(int index) {
      return conditionParamList_.get(index);
    }
    /**
     * <code>repeated string conditionParamList = 3;</code>
     *
     * <pre>
     * 任务条件参数
     * </pre>
     */
    public com.google.protobuf.ByteString
        getConditionParamListBytes(int index) {
      return conditionParamList_.getByteString(index);
    }

    private void initFields() {
      keyId_ = 0;
      condition_ = 0;
      conditionParamList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCondition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, condition_);
      }
      for (int i = 0; i < conditionParamList_.size(); i++) {
        output.writeBytes(3, conditionParamList_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, condition_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < conditionParamList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(conditionParamList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getConditionParamListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ConcealCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.MatchProbuf.ConcealConditionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_ConcealCondition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_ConcealCondition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition.class, com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        condition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        conditionParamList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.internal_static_ConcealCondition_descriptor;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition build() {
        com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition buildPartial() {
        com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition result = new com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.condition_ = condition_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          conditionParamList_ = new com.google.protobuf.UnmodifiableLazyStringList(
              conditionParamList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.conditionParamList_ = conditionParamList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition) {
          return mergeFrom((com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition other) {
        if (other == com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasCondition()) {
          setCondition(other.getCondition());
        }
        if (!other.conditionParamList_.isEmpty()) {
          if (conditionParamList_.isEmpty()) {
            conditionParamList_ = other.conditionParamList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureConditionParamListIsMutable();
            conditionParamList_.addAll(other.conditionParamList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasCondition()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.MatchProbuf.ConcealCondition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 condition = 2;
      private int condition_ ;
      /**
       * <code>required int32 condition = 2;</code>
       *
       * <pre>
       * 条件
       * </pre>
       */
      public boolean hasCondition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 condition = 2;</code>
       *
       * <pre>
       * 条件
       * </pre>
       */
      public int getCondition() {
        return condition_;
      }
      /**
       * <code>required int32 condition = 2;</code>
       *
       * <pre>
       * 条件
       * </pre>
       */
      public Builder setCondition(int value) {
        bitField0_ |= 0x00000002;
        condition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 condition = 2;</code>
       *
       * <pre>
       * 条件
       * </pre>
       */
      public Builder clearCondition() {
        bitField0_ = (bitField0_ & ~0x00000002);
        condition_ = 0;
        onChanged();
        return this;
      }

      // repeated string conditionParamList = 3;
      private com.google.protobuf.LazyStringList conditionParamList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureConditionParamListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          conditionParamList_ = new com.google.protobuf.LazyStringArrayList(conditionParamList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public java.util.List<java.lang.String>
          getConditionParamListList() {
        return java.util.Collections.unmodifiableList(conditionParamList_);
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public int getConditionParamListCount() {
        return conditionParamList_.size();
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public java.lang.String getConditionParamList(int index) {
        return conditionParamList_.get(index);
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public com.google.protobuf.ByteString
          getConditionParamListBytes(int index) {
        return conditionParamList_.getByteString(index);
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public Builder setConditionParamList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureConditionParamListIsMutable();
        conditionParamList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public Builder addConditionParamList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureConditionParamListIsMutable();
        conditionParamList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public Builder addAllConditionParamList(
          java.lang.Iterable<java.lang.String> values) {
        ensureConditionParamListIsMutable();
        super.addAll(values, conditionParamList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public Builder clearConditionParamList() {
        conditionParamList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string conditionParamList = 3;</code>
       *
       * <pre>
       * 任务条件参数
       * </pre>
       */
      public Builder addConditionParamListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureConditionParamListIsMutable();
        conditionParamList_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ConcealCondition)
    }

    static {
      defaultInstance = new ConcealCondition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ConcealCondition)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MatchChapter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MatchChapter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Match_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Match_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MatchDrop_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MatchDrop_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MatchNpc_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MatchNpc_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MatchShop_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MatchShop_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MatchGoods_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MatchGoods_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ConcealCondition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ConcealCondition_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021MatchProbuf.proto\"\321\001\n\014MatchChapter\022\r\n\005" +
      "keyId\030\001 \002(\005\022\022\n\nlimitLevel\030\002 \002(\005\022\027\n\017start" +
      "AwardLists\030\003 \002(\t\022\027\n\017businessmanList\030\004 \003(" +
      "\005\022\034\n\024businessmanSatioList\030\005 \003(\005\022\027\n\017norma" +
      "lMatchList\030\006 \003(\005\022\026\n\016eliteMatchList\030\007 \003(\005" +
      "\022\017\n\007mapFile\030\010 \002(\t\022\014\n\004name\030\t \002(\t\"\372\001\n\005Matc" +
      "h\022\r\n\005keyId\030\001 \002(\005\022\017\n\007chapter\030\002 \002(\005\022\023\n\013nor" +
      "malIndex\030\003 \002(\005\022\014\n\004type\030\004 \002(\005\022\030\n\020concealC" +
      "ondition\030\005 \002(\005\022\023\n\013concealTime\030\006 \002(\005\022\024\n\014r" +
      "equirePower\030\007 \002(\005\022\027\n\017concealPasscard\030\010 \002",
      "(\005\022\025\n\rconcealRatios\030\t \002(\005\022\020\n\010dropList\030\n " +
      "\003(\005\022\013\n\003map\030\013 \002(\t\022\014\n\004name\030\014 \002(\t\022\014\n\004desc\030\r" +
      " \002(\t\"\214\002\n\tMatchDrop\022\r\n\005keyId\030\001 \002(\005\022\014\n\004typ" +
      "e\030\002 \002(\005\022\020\n\010npcLists\030\003 \002(\t\022\024\n\014dropGoodLis" +
      "t\030\004 \003(\005\022\025\n\rdropCountList\030\005 \003(\005\022\026\n\016random" +
      "DropList\030\006 \003(\005\022\027\n\017countRatiosList\030\007 \003(\005\022" +
      "\021\n\tgradeDrop\030\010 \002(\005\022\024\n\014requireGrade\030\t \002(\005" +
      "\022\r\n\005grade\030\n \002(\005\022\024\n\014helpNpcLists\030\013 \002(\t\022\021\n" +
      "\tnextKeyId\030\014 \002(\005\022\021\n\tdropViews\030\r \003(\005\"\353\002\n\010" +
      "MatchNpc\022\r\n\005keyId\030\001 \002(\005\022\020\n\010heroName\030\002 \002(",
      "\t\022\017\n\007quality\030\003 \002(\005\022\021\n\theroClass\030\004 \002(\005\022\032\n" +
      "\022basicAttributeList\030\005 \003(\005\022\024\n\014basicAdvanc" +
      "e\030\006 \002(\005\022\026\n\016resistanceList\030\007 \003(\005\022\030\n\020commo" +
      "nAttackList\030\010 \003(\005\022\031\n\021elementMasterList\030\t" +
      " \003(\005\022\030\n\020raceRestrainList\030\n \003(\005\022\032\n\022debuff" +
      "PatienceList\030\013 \003(\005\022\020\n\010heroSize\030\014 \002(\005\022\020\n\010" +
      "resource\030\r \002(\t\022\026\n\016effectTimeList\030\016 \003(\005\022\026" +
      "\n\016actionTimeList\030\017 \003(\005\022\021\n\theroScale\030\020 \002(" +
      "\005\"s\n\tMatchShop\022\r\n\005keyId\030\001 \002(\005\022\014\n\004type\030\002 " +
      "\002(\005\022\020\n\010goodList\030\003 \003(\005\022\030\n\020requireMoneyTyp",
      "e\030\004 \002(\005\022\035\n\025requireMoneyCountList\030\005 \003(\005\"\203" +
      "\001\n\nMatchGoods\022\r\n\005keyId\030\001 \002(\005\022\020\n\010goodList" +
      "\030\002 \003(\005\022\021\n\tcountList\030\003 \003(\005\022\022\n\nratiosList\030" +
      "\004 \003(\005\022\025\n\rmoneyTypeList\030\005 \003(\005\022\026\n\016moneyCou" +
      "ntList\030\006 \003(\005\"P\n\020ConcealCondition\022\r\n\005keyI" +
      "d\030\001 \002(\005\022\021\n\tcondition\030\002 \002(\005\022\032\n\022conditionP" +
      "aramList\030\003 \003(\tB)\n\032com.cwa.prototype.prot" +
      "obufB\013MatchProbuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MatchChapter_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MatchChapter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MatchChapter_descriptor,
              new java.lang.String[] { "KeyId", "LimitLevel", "StartAwardLists", "BusinessmanList", "BusinessmanSatioList", "NormalMatchList", "EliteMatchList", "MapFile", "Name", });
          internal_static_Match_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Match_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Match_descriptor,
              new java.lang.String[] { "KeyId", "Chapter", "NormalIndex", "Type", "ConcealCondition", "ConcealTime", "RequirePower", "ConcealPasscard", "ConcealRatios", "DropList", "Map", "Name", "Desc", });
          internal_static_MatchDrop_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_MatchDrop_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MatchDrop_descriptor,
              new java.lang.String[] { "KeyId", "Type", "NpcLists", "DropGoodList", "DropCountList", "RandomDropList", "CountRatiosList", "GradeDrop", "RequireGrade", "Grade", "HelpNpcLists", "NextKeyId", "DropViews", });
          internal_static_MatchNpc_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_MatchNpc_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MatchNpc_descriptor,
              new java.lang.String[] { "KeyId", "HeroName", "Quality", "HeroClass", "BasicAttributeList", "BasicAdvance", "ResistanceList", "CommonAttackList", "ElementMasterList", "RaceRestrainList", "DebuffPatienceList", "HeroSize", "Resource", "EffectTimeList", "ActionTimeList", "HeroScale", });
          internal_static_MatchShop_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_MatchShop_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MatchShop_descriptor,
              new java.lang.String[] { "KeyId", "Type", "GoodList", "RequireMoneyType", "RequireMoneyCountList", });
          internal_static_MatchGoods_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_MatchGoods_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MatchGoods_descriptor,
              new java.lang.String[] { "KeyId", "GoodList", "CountList", "RatiosList", "MoneyTypeList", "MoneyCountList", });
          internal_static_ConcealCondition_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_ConcealCondition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ConcealCondition_descriptor,
              new java.lang.String[] { "KeyId", "Condition", "ConditionParamList", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
