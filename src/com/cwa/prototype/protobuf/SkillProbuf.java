// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkillProbuf.proto

package com.cwa.prototype.protobuf;

public final class SkillProbuf {
  private SkillProbuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SkillOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 技能名
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 技能名
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 技能名
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string describe = 3;
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    boolean hasDescribe();
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    java.lang.String getDescribe();
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescribeBytes();

    // required int32 shootingDistance = 4;
    /**
     * <code>required int32 shootingDistance = 4;</code>
     *
     * <pre>
     * 射程
     * </pre>
     */
    boolean hasShootingDistance();
    /**
     * <code>required int32 shootingDistance = 4;</code>
     *
     * <pre>
     * 射程
     * </pre>
     */
    int getShootingDistance();

    // required int32 releaseType = 5;
    /**
     * <code>required int32 releaseType = 5;</code>
     *
     * <pre>
     * 释放类型
     * </pre>
     */
    boolean hasReleaseType();
    /**
     * <code>required int32 releaseType = 5;</code>
     *
     * <pre>
     * 释放类型
     * </pre>
     */
    int getReleaseType();

    // required int32 releaseRule = 6;
    /**
     * <code>required int32 releaseRule = 6;</code>
     *
     * <pre>
     * 释放规则
     * </pre>
     */
    boolean hasReleaseRule();
    /**
     * <code>required int32 releaseRule = 6;</code>
     *
     * <pre>
     * 释放规则
     * </pre>
     */
    int getReleaseRule();

    // required int32 cdTime = 7;
    /**
     * <code>required int32 cdTime = 7;</code>
     *
     * <pre>
     * CD时间
     * </pre>
     */
    boolean hasCdTime();
    /**
     * <code>required int32 cdTime = 7;</code>
     *
     * <pre>
     * CD时间
     * </pre>
     */
    int getCdTime();

    // repeated int32 mpList = 8;
    /**
     * <code>repeated int32 mpList = 8;</code>
     *
     * <pre>
     * 消耗MP
     * </pre>
     */
    java.util.List<java.lang.Integer> getMpListList();
    /**
     * <code>repeated int32 mpList = 8;</code>
     *
     * <pre>
     * 消耗MP
     * </pre>
     */
    int getMpListCount();
    /**
     * <code>repeated int32 mpList = 8;</code>
     *
     * <pre>
     * 消耗MP
     * </pre>
     */
    int getMpList(int index);

    // required int32 elements = 9;
    /**
     * <code>required int32 elements = 9;</code>
     *
     * <pre>
     * 元素
     * </pre>
     */
    boolean hasElements();
    /**
     * <code>required int32 elements = 9;</code>
     *
     * <pre>
     * 元素
     * </pre>
     */
    int getElements();

    // required string incidentalEffectLists = 10;
    /**
     * <code>required string incidentalEffectLists = 10;</code>
     *
     * <pre>
     * 附带效果
     * </pre>
     */
    boolean hasIncidentalEffectLists();
    /**
     * <code>required string incidentalEffectLists = 10;</code>
     *
     * <pre>
     * 附带效果
     * </pre>
     */
    java.lang.String getIncidentalEffectLists();
    /**
     * <code>required string incidentalEffectLists = 10;</code>
     *
     * <pre>
     * 附带效果
     * </pre>
     */
    com.google.protobuf.ByteString
        getIncidentalEffectListsBytes();

    // required int32 playSequence = 11;
    /**
     * <code>required int32 playSequence = 11;</code>
     *
     * <pre>
     * 播放顺序
     * </pre>
     */
    boolean hasPlaySequence();
    /**
     * <code>required int32 playSequence = 11;</code>
     *
     * <pre>
     * 播放顺序
     * </pre>
     */
    int getPlaySequence();

    // required int32 commonAttack = 12;
    /**
     * <code>required int32 commonAttack = 12;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    boolean hasCommonAttack();
    /**
     * <code>required int32 commonAttack = 12;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    int getCommonAttack();

    // required int32 count = 13;
    /**
     * <code>required int32 count = 13;</code>
     *
     * <pre>
     * 次数
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>required int32 count = 13;</code>
     *
     * <pre>
     * 次数
     * </pre>
     */
    int getCount();

    // required int32 type = 14;
    /**
     * <code>required int32 type = 14;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 14;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    int getType();

    // required string icon = 15;
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    boolean hasIcon();
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    java.lang.String getIcon();
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // required int32 actionTime = 16;
    /**
     * <code>required int32 actionTime = 16;</code>
     *
     * <pre>
     * 动作时间
     * </pre>
     */
    boolean hasActionTime();
    /**
     * <code>required int32 actionTime = 16;</code>
     *
     * <pre>
     * 动作时间
     * </pre>
     */
    int getActionTime();
  }
  /**
   * Protobuf type {@code Skill}
   */
  public static final class Skill extends
      com.google.protobuf.GeneratedMessage
      implements SkillOrBuilder {
    // Use Skill.newBuilder() to construct.
    private Skill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Skill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Skill defaultInstance;
    public static Skill getDefaultInstance() {
      return defaultInstance;
    }

    public Skill getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Skill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              describe_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              shootingDistance_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              releaseType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              releaseRule_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              cdTime_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                mpList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              mpList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                mpList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                mpList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              elements_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000100;
              incidentalEffectLists_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              playSequence_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              commonAttack_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              count_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              type_ = input.readInt32();
              break;
            }
            case 122: {
              bitField0_ |= 0x00002000;
              icon_ = input.readBytes();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              actionTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          mpList_ = java.util.Collections.unmodifiableList(mpList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Skill_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Skill_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.SkillProbuf.Skill.class, com.cwa.prototype.protobuf.SkillProbuf.Skill.Builder.class);
    }

    public static com.google.protobuf.Parser<Skill> PARSER =
        new com.google.protobuf.AbstractParser<Skill>() {
      public Skill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Skill(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Skill> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 技能名
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 技能名
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 技能名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string describe = 3;
    public static final int DESCRIBE_FIELD_NUMBER = 3;
    private java.lang.Object describe_;
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    public boolean hasDescribe() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    public java.lang.String getDescribe() {
      java.lang.Object ref = describe_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          describe_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescribeBytes() {
      java.lang.Object ref = describe_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        describe_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 shootingDistance = 4;
    public static final int SHOOTINGDISTANCE_FIELD_NUMBER = 4;
    private int shootingDistance_;
    /**
     * <code>required int32 shootingDistance = 4;</code>
     *
     * <pre>
     * 射程
     * </pre>
     */
    public boolean hasShootingDistance() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 shootingDistance = 4;</code>
     *
     * <pre>
     * 射程
     * </pre>
     */
    public int getShootingDistance() {
      return shootingDistance_;
    }

    // required int32 releaseType = 5;
    public static final int RELEASETYPE_FIELD_NUMBER = 5;
    private int releaseType_;
    /**
     * <code>required int32 releaseType = 5;</code>
     *
     * <pre>
     * 释放类型
     * </pre>
     */
    public boolean hasReleaseType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 releaseType = 5;</code>
     *
     * <pre>
     * 释放类型
     * </pre>
     */
    public int getReleaseType() {
      return releaseType_;
    }

    // required int32 releaseRule = 6;
    public static final int RELEASERULE_FIELD_NUMBER = 6;
    private int releaseRule_;
    /**
     * <code>required int32 releaseRule = 6;</code>
     *
     * <pre>
     * 释放规则
     * </pre>
     */
    public boolean hasReleaseRule() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 releaseRule = 6;</code>
     *
     * <pre>
     * 释放规则
     * </pre>
     */
    public int getReleaseRule() {
      return releaseRule_;
    }

    // required int32 cdTime = 7;
    public static final int CDTIME_FIELD_NUMBER = 7;
    private int cdTime_;
    /**
     * <code>required int32 cdTime = 7;</code>
     *
     * <pre>
     * CD时间
     * </pre>
     */
    public boolean hasCdTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 cdTime = 7;</code>
     *
     * <pre>
     * CD时间
     * </pre>
     */
    public int getCdTime() {
      return cdTime_;
    }

    // repeated int32 mpList = 8;
    public static final int MPLIST_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> mpList_;
    /**
     * <code>repeated int32 mpList = 8;</code>
     *
     * <pre>
     * 消耗MP
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMpListList() {
      return mpList_;
    }
    /**
     * <code>repeated int32 mpList = 8;</code>
     *
     * <pre>
     * 消耗MP
     * </pre>
     */
    public int getMpListCount() {
      return mpList_.size();
    }
    /**
     * <code>repeated int32 mpList = 8;</code>
     *
     * <pre>
     * 消耗MP
     * </pre>
     */
    public int getMpList(int index) {
      return mpList_.get(index);
    }

    // required int32 elements = 9;
    public static final int ELEMENTS_FIELD_NUMBER = 9;
    private int elements_;
    /**
     * <code>required int32 elements = 9;</code>
     *
     * <pre>
     * 元素
     * </pre>
     */
    public boolean hasElements() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 elements = 9;</code>
     *
     * <pre>
     * 元素
     * </pre>
     */
    public int getElements() {
      return elements_;
    }

    // required string incidentalEffectLists = 10;
    public static final int INCIDENTALEFFECTLISTS_FIELD_NUMBER = 10;
    private java.lang.Object incidentalEffectLists_;
    /**
     * <code>required string incidentalEffectLists = 10;</code>
     *
     * <pre>
     * 附带效果
     * </pre>
     */
    public boolean hasIncidentalEffectLists() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required string incidentalEffectLists = 10;</code>
     *
     * <pre>
     * 附带效果
     * </pre>
     */
    public java.lang.String getIncidentalEffectLists() {
      java.lang.Object ref = incidentalEffectLists_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          incidentalEffectLists_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string incidentalEffectLists = 10;</code>
     *
     * <pre>
     * 附带效果
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIncidentalEffectListsBytes() {
      java.lang.Object ref = incidentalEffectLists_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        incidentalEffectLists_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 playSequence = 11;
    public static final int PLAYSEQUENCE_FIELD_NUMBER = 11;
    private int playSequence_;
    /**
     * <code>required int32 playSequence = 11;</code>
     *
     * <pre>
     * 播放顺序
     * </pre>
     */
    public boolean hasPlaySequence() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 playSequence = 11;</code>
     *
     * <pre>
     * 播放顺序
     * </pre>
     */
    public int getPlaySequence() {
      return playSequence_;
    }

    // required int32 commonAttack = 12;
    public static final int COMMONATTACK_FIELD_NUMBER = 12;
    private int commonAttack_;
    /**
     * <code>required int32 commonAttack = 12;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public boolean hasCommonAttack() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 commonAttack = 12;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public int getCommonAttack() {
      return commonAttack_;
    }

    // required int32 count = 13;
    public static final int COUNT_FIELD_NUMBER = 13;
    private int count_;
    /**
     * <code>required int32 count = 13;</code>
     *
     * <pre>
     * 次数
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 count = 13;</code>
     *
     * <pre>
     * 次数
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    // required int32 type = 14;
    public static final int TYPE_FIELD_NUMBER = 14;
    private int type_;
    /**
     * <code>required int32 type = 14;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 type = 14;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required string icon = 15;
    public static final int ICON_FIELD_NUMBER = 15;
    private java.lang.Object icon_;
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 actionTime = 16;
    public static final int ACTIONTIME_FIELD_NUMBER = 16;
    private int actionTime_;
    /**
     * <code>required int32 actionTime = 16;</code>
     *
     * <pre>
     * 动作时间
     * </pre>
     */
    public boolean hasActionTime() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 actionTime = 16;</code>
     *
     * <pre>
     * 动作时间
     * </pre>
     */
    public int getActionTime() {
      return actionTime_;
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      describe_ = "";
      shootingDistance_ = 0;
      releaseType_ = 0;
      releaseRule_ = 0;
      cdTime_ = 0;
      mpList_ = java.util.Collections.emptyList();
      elements_ = 0;
      incidentalEffectLists_ = "";
      playSequence_ = 0;
      commonAttack_ = 0;
      count_ = 0;
      type_ = 0;
      icon_ = "";
      actionTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDescribe()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShootingDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReleaseType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReleaseRule()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCdTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasElements()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIncidentalEffectLists()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlaySequence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommonAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIcon()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActionTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescribeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, shootingDistance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, releaseType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, releaseRule_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, cdTime_);
      }
      for (int i = 0; i < mpList_.size(); i++) {
        output.writeInt32(8, mpList_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, elements_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getIncidentalEffectListsBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, playSequence_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, commonAttack_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, count_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(14, type_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(15, getIconBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(16, actionTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescribeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, shootingDistance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, releaseType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, releaseRule_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cdTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mpList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(mpList_.get(i));
        }
        size += dataSize;
        size += 1 * getMpListList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, elements_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIncidentalEffectListsBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, playSequence_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, commonAttack_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, count_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, type_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getIconBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, actionTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Skill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.SkillProbuf.Skill prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Skill}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.SkillProbuf.SkillOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Skill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Skill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.SkillProbuf.Skill.class, com.cwa.prototype.protobuf.SkillProbuf.Skill.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.SkillProbuf.Skill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        describe_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        shootingDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        releaseType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        releaseRule_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        cdTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        mpList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        elements_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        incidentalEffectLists_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        playSequence_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        commonAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        actionTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Skill_descriptor;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Skill getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.Skill.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Skill build() {
        com.cwa.prototype.protobuf.SkillProbuf.Skill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Skill buildPartial() {
        com.cwa.prototype.protobuf.SkillProbuf.Skill result = new com.cwa.prototype.protobuf.SkillProbuf.Skill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.describe_ = describe_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shootingDistance_ = shootingDistance_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.releaseType_ = releaseType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.releaseRule_ = releaseRule_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.cdTime_ = cdTime_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          mpList_ = java.util.Collections.unmodifiableList(mpList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.mpList_ = mpList_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.elements_ = elements_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.incidentalEffectLists_ = incidentalEffectLists_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.playSequence_ = playSequence_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.commonAttack_ = commonAttack_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.actionTime_ = actionTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.SkillProbuf.Skill) {
          return mergeFrom((com.cwa.prototype.protobuf.SkillProbuf.Skill)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.SkillProbuf.Skill other) {
        if (other == com.cwa.prototype.protobuf.SkillProbuf.Skill.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescribe()) {
          bitField0_ |= 0x00000004;
          describe_ = other.describe_;
          onChanged();
        }
        if (other.hasShootingDistance()) {
          setShootingDistance(other.getShootingDistance());
        }
        if (other.hasReleaseType()) {
          setReleaseType(other.getReleaseType());
        }
        if (other.hasReleaseRule()) {
          setReleaseRule(other.getReleaseRule());
        }
        if (other.hasCdTime()) {
          setCdTime(other.getCdTime());
        }
        if (!other.mpList_.isEmpty()) {
          if (mpList_.isEmpty()) {
            mpList_ = other.mpList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureMpListIsMutable();
            mpList_.addAll(other.mpList_);
          }
          onChanged();
        }
        if (other.hasElements()) {
          setElements(other.getElements());
        }
        if (other.hasIncidentalEffectLists()) {
          bitField0_ |= 0x00000200;
          incidentalEffectLists_ = other.incidentalEffectLists_;
          onChanged();
        }
        if (other.hasPlaySequence()) {
          setPlaySequence(other.getPlaySequence());
        }
        if (other.hasCommonAttack()) {
          setCommonAttack(other.getCommonAttack());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00004000;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasActionTime()) {
          setActionTime(other.getActionTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDescribe()) {
          
          return false;
        }
        if (!hasShootingDistance()) {
          
          return false;
        }
        if (!hasReleaseType()) {
          
          return false;
        }
        if (!hasReleaseRule()) {
          
          return false;
        }
        if (!hasCdTime()) {
          
          return false;
        }
        if (!hasElements()) {
          
          return false;
        }
        if (!hasIncidentalEffectLists()) {
          
          return false;
        }
        if (!hasPlaySequence()) {
          
          return false;
        }
        if (!hasCommonAttack()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasIcon()) {
          
          return false;
        }
        if (!hasActionTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.SkillProbuf.Skill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.SkillProbuf.Skill) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 技能名
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 技能名
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 技能名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 技能名
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 技能名
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 技能名
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string describe = 3;
      private java.lang.Object describe_ = "";
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public boolean hasDescribe() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public java.lang.String getDescribe() {
        java.lang.Object ref = describe_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          describe_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescribeBytes() {
        java.lang.Object ref = describe_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          describe_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public Builder setDescribe(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        describe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public Builder clearDescribe() {
        bitField0_ = (bitField0_ & ~0x00000004);
        describe_ = getDefaultInstance().getDescribe();
        onChanged();
        return this;
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public Builder setDescribeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        describe_ = value;
        onChanged();
        return this;
      }

      // required int32 shootingDistance = 4;
      private int shootingDistance_ ;
      /**
       * <code>required int32 shootingDistance = 4;</code>
       *
       * <pre>
       * 射程
       * </pre>
       */
      public boolean hasShootingDistance() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 shootingDistance = 4;</code>
       *
       * <pre>
       * 射程
       * </pre>
       */
      public int getShootingDistance() {
        return shootingDistance_;
      }
      /**
       * <code>required int32 shootingDistance = 4;</code>
       *
       * <pre>
       * 射程
       * </pre>
       */
      public Builder setShootingDistance(int value) {
        bitField0_ |= 0x00000008;
        shootingDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 shootingDistance = 4;</code>
       *
       * <pre>
       * 射程
       * </pre>
       */
      public Builder clearShootingDistance() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shootingDistance_ = 0;
        onChanged();
        return this;
      }

      // required int32 releaseType = 5;
      private int releaseType_ ;
      /**
       * <code>required int32 releaseType = 5;</code>
       *
       * <pre>
       * 释放类型
       * </pre>
       */
      public boolean hasReleaseType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 releaseType = 5;</code>
       *
       * <pre>
       * 释放类型
       * </pre>
       */
      public int getReleaseType() {
        return releaseType_;
      }
      /**
       * <code>required int32 releaseType = 5;</code>
       *
       * <pre>
       * 释放类型
       * </pre>
       */
      public Builder setReleaseType(int value) {
        bitField0_ |= 0x00000010;
        releaseType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 releaseType = 5;</code>
       *
       * <pre>
       * 释放类型
       * </pre>
       */
      public Builder clearReleaseType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        releaseType_ = 0;
        onChanged();
        return this;
      }

      // required int32 releaseRule = 6;
      private int releaseRule_ ;
      /**
       * <code>required int32 releaseRule = 6;</code>
       *
       * <pre>
       * 释放规则
       * </pre>
       */
      public boolean hasReleaseRule() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 releaseRule = 6;</code>
       *
       * <pre>
       * 释放规则
       * </pre>
       */
      public int getReleaseRule() {
        return releaseRule_;
      }
      /**
       * <code>required int32 releaseRule = 6;</code>
       *
       * <pre>
       * 释放规则
       * </pre>
       */
      public Builder setReleaseRule(int value) {
        bitField0_ |= 0x00000020;
        releaseRule_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 releaseRule = 6;</code>
       *
       * <pre>
       * 释放规则
       * </pre>
       */
      public Builder clearReleaseRule() {
        bitField0_ = (bitField0_ & ~0x00000020);
        releaseRule_ = 0;
        onChanged();
        return this;
      }

      // required int32 cdTime = 7;
      private int cdTime_ ;
      /**
       * <code>required int32 cdTime = 7;</code>
       *
       * <pre>
       * CD时间
       * </pre>
       */
      public boolean hasCdTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 cdTime = 7;</code>
       *
       * <pre>
       * CD时间
       * </pre>
       */
      public int getCdTime() {
        return cdTime_;
      }
      /**
       * <code>required int32 cdTime = 7;</code>
       *
       * <pre>
       * CD时间
       * </pre>
       */
      public Builder setCdTime(int value) {
        bitField0_ |= 0x00000040;
        cdTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cdTime = 7;</code>
       *
       * <pre>
       * CD时间
       * </pre>
       */
      public Builder clearCdTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cdTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 mpList = 8;
      private java.util.List<java.lang.Integer> mpList_ = java.util.Collections.emptyList();
      private void ensureMpListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          mpList_ = new java.util.ArrayList<java.lang.Integer>(mpList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 mpList = 8;</code>
       *
       * <pre>
       * 消耗MP
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMpListList() {
        return java.util.Collections.unmodifiableList(mpList_);
      }
      /**
       * <code>repeated int32 mpList = 8;</code>
       *
       * <pre>
       * 消耗MP
       * </pre>
       */
      public int getMpListCount() {
        return mpList_.size();
      }
      /**
       * <code>repeated int32 mpList = 8;</code>
       *
       * <pre>
       * 消耗MP
       * </pre>
       */
      public int getMpList(int index) {
        return mpList_.get(index);
      }
      /**
       * <code>repeated int32 mpList = 8;</code>
       *
       * <pre>
       * 消耗MP
       * </pre>
       */
      public Builder setMpList(
          int index, int value) {
        ensureMpListIsMutable();
        mpList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mpList = 8;</code>
       *
       * <pre>
       * 消耗MP
       * </pre>
       */
      public Builder addMpList(int value) {
        ensureMpListIsMutable();
        mpList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mpList = 8;</code>
       *
       * <pre>
       * 消耗MP
       * </pre>
       */
      public Builder addAllMpList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMpListIsMutable();
        super.addAll(values, mpList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mpList = 8;</code>
       *
       * <pre>
       * 消耗MP
       * </pre>
       */
      public Builder clearMpList() {
        mpList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // required int32 elements = 9;
      private int elements_ ;
      /**
       * <code>required int32 elements = 9;</code>
       *
       * <pre>
       * 元素
       * </pre>
       */
      public boolean hasElements() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 elements = 9;</code>
       *
       * <pre>
       * 元素
       * </pre>
       */
      public int getElements() {
        return elements_;
      }
      /**
       * <code>required int32 elements = 9;</code>
       *
       * <pre>
       * 元素
       * </pre>
       */
      public Builder setElements(int value) {
        bitField0_ |= 0x00000100;
        elements_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 elements = 9;</code>
       *
       * <pre>
       * 元素
       * </pre>
       */
      public Builder clearElements() {
        bitField0_ = (bitField0_ & ~0x00000100);
        elements_ = 0;
        onChanged();
        return this;
      }

      // required string incidentalEffectLists = 10;
      private java.lang.Object incidentalEffectLists_ = "";
      /**
       * <code>required string incidentalEffectLists = 10;</code>
       *
       * <pre>
       * 附带效果
       * </pre>
       */
      public boolean hasIncidentalEffectLists() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required string incidentalEffectLists = 10;</code>
       *
       * <pre>
       * 附带效果
       * </pre>
       */
      public java.lang.String getIncidentalEffectLists() {
        java.lang.Object ref = incidentalEffectLists_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          incidentalEffectLists_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string incidentalEffectLists = 10;</code>
       *
       * <pre>
       * 附带效果
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIncidentalEffectListsBytes() {
        java.lang.Object ref = incidentalEffectLists_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          incidentalEffectLists_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string incidentalEffectLists = 10;</code>
       *
       * <pre>
       * 附带效果
       * </pre>
       */
      public Builder setIncidentalEffectLists(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        incidentalEffectLists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string incidentalEffectLists = 10;</code>
       *
       * <pre>
       * 附带效果
       * </pre>
       */
      public Builder clearIncidentalEffectLists() {
        bitField0_ = (bitField0_ & ~0x00000200);
        incidentalEffectLists_ = getDefaultInstance().getIncidentalEffectLists();
        onChanged();
        return this;
      }
      /**
       * <code>required string incidentalEffectLists = 10;</code>
       *
       * <pre>
       * 附带效果
       * </pre>
       */
      public Builder setIncidentalEffectListsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        incidentalEffectLists_ = value;
        onChanged();
        return this;
      }

      // required int32 playSequence = 11;
      private int playSequence_ ;
      /**
       * <code>required int32 playSequence = 11;</code>
       *
       * <pre>
       * 播放顺序
       * </pre>
       */
      public boolean hasPlaySequence() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 playSequence = 11;</code>
       *
       * <pre>
       * 播放顺序
       * </pre>
       */
      public int getPlaySequence() {
        return playSequence_;
      }
      /**
       * <code>required int32 playSequence = 11;</code>
       *
       * <pre>
       * 播放顺序
       * </pre>
       */
      public Builder setPlaySequence(int value) {
        bitField0_ |= 0x00000400;
        playSequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 playSequence = 11;</code>
       *
       * <pre>
       * 播放顺序
       * </pre>
       */
      public Builder clearPlaySequence() {
        bitField0_ = (bitField0_ & ~0x00000400);
        playSequence_ = 0;
        onChanged();
        return this;
      }

      // required int32 commonAttack = 12;
      private int commonAttack_ ;
      /**
       * <code>required int32 commonAttack = 12;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public boolean hasCommonAttack() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 commonAttack = 12;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public int getCommonAttack() {
        return commonAttack_;
      }
      /**
       * <code>required int32 commonAttack = 12;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder setCommonAttack(int value) {
        bitField0_ |= 0x00000800;
        commonAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 commonAttack = 12;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder clearCommonAttack() {
        bitField0_ = (bitField0_ & ~0x00000800);
        commonAttack_ = 0;
        onChanged();
        return this;
      }

      // required int32 count = 13;
      private int count_ ;
      /**
       * <code>required int32 count = 13;</code>
       *
       * <pre>
       * 次数
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 count = 13;</code>
       *
       * <pre>
       * 次数
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required int32 count = 13;</code>
       *
       * <pre>
       * 次数
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00001000;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 count = 13;</code>
       *
       * <pre>
       * 次数
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00001000);
        count_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 14;
      private int type_ ;
      /**
       * <code>required int32 type = 14;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 type = 14;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 14;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00002000;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 14;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00002000);
        type_ = 0;
        onChanged();
        return this;
      }

      // required string icon = 15;
      private java.lang.Object icon_ = "";
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00004000);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        icon_ = value;
        onChanged();
        return this;
      }

      // required int32 actionTime = 16;
      private int actionTime_ ;
      /**
       * <code>required int32 actionTime = 16;</code>
       *
       * <pre>
       * 动作时间
       * </pre>
       */
      public boolean hasActionTime() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 actionTime = 16;</code>
       *
       * <pre>
       * 动作时间
       * </pre>
       */
      public int getActionTime() {
        return actionTime_;
      }
      /**
       * <code>required int32 actionTime = 16;</code>
       *
       * <pre>
       * 动作时间
       * </pre>
       */
      public Builder setActionTime(int value) {
        bitField0_ |= 0x00008000;
        actionTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 actionTime = 16;</code>
       *
       * <pre>
       * 动作时间
       * </pre>
       */
      public Builder clearActionTime() {
        bitField0_ = (bitField0_ & ~0x00008000);
        actionTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Skill)
    }

    static {
      defaultInstance = new Skill(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Skill)
  }

  public interface EffectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 效果名
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 效果名
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 效果名
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 element = 3;
    /**
     * <code>required int32 element = 3;</code>
     *
     * <pre>
     * 元素
     * </pre>
     */
    boolean hasElement();
    /**
     * <code>required int32 element = 3;</code>
     *
     * <pre>
     * 元素
     * </pre>
     */
    int getElement();

    // required int32 type = 4;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    int getType();

    // required int32 targetRule = 5;
    /**
     * <code>required int32 targetRule = 5;</code>
     *
     * <pre>
     * 目标规则
     * </pre>
     */
    boolean hasTargetRule();
    /**
     * <code>required int32 targetRule = 5;</code>
     *
     * <pre>
     * 目标规则
     * </pre>
     */
    int getTargetRule();

    // required int32 range = 6;
    /**
     * <code>required int32 range = 6;</code>
     *
     * <pre>
     * 范围
     * </pre>
     */
    boolean hasRange();
    /**
     * <code>required int32 range = 6;</code>
     *
     * <pre>
     * 范围
     * </pre>
     */
    int getRange();

    // required int32 flySpeed = 7;
    /**
     * <code>required int32 flySpeed = 7;</code>
     *
     * <pre>
     * 技能飞行速度
     * </pre>
     */
    boolean hasFlySpeed();
    /**
     * <code>required int32 flySpeed = 7;</code>
     *
     * <pre>
     * 技能飞行速度
     * </pre>
     */
    int getFlySpeed();

    // repeated int32 rateList = 8;
    /**
     * <code>repeated int32 rateList = 8;</code>
     *
     * <pre>
     * 倍率（多个和技能等级走）
     * </pre>
     */
    java.util.List<java.lang.Integer> getRateListList();
    /**
     * <code>repeated int32 rateList = 8;</code>
     *
     * <pre>
     * 倍率（多个和技能等级走）
     * </pre>
     */
    int getRateListCount();
    /**
     * <code>repeated int32 rateList = 8;</code>
     *
     * <pre>
     * 倍率（多个和技能等级走）
     * </pre>
     */
    int getRateList(int index);

    // repeated int32 incidentalParamList = 9;
    /**
     * <code>repeated int32 incidentalParamList = 9;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    java.util.List<java.lang.Integer> getIncidentalParamListList();
    /**
     * <code>repeated int32 incidentalParamList = 9;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    int getIncidentalParamListCount();
    /**
     * <code>repeated int32 incidentalParamList = 9;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    int getIncidentalParamList(int index);

    // repeated int32 summonHeroList = 10;
    /**
     * <code>repeated int32 summonHeroList = 10;</code>
     *
     * <pre>
     * 召唤帮手
     * </pre>
     */
    java.util.List<java.lang.Integer> getSummonHeroListList();
    /**
     * <code>repeated int32 summonHeroList = 10;</code>
     *
     * <pre>
     * 召唤帮手
     * </pre>
     */
    int getSummonHeroListCount();
    /**
     * <code>repeated int32 summonHeroList = 10;</code>
     *
     * <pre>
     * 召唤帮手
     * </pre>
     */
    int getSummonHeroList(int index);

    // repeated int32 summonProbabilityList = 11;
    /**
     * <code>repeated int32 summonProbabilityList = 11;</code>
     *
     * <pre>
     * 召唤概率
     * </pre>
     */
    java.util.List<java.lang.Integer> getSummonProbabilityListList();
    /**
     * <code>repeated int32 summonProbabilityList = 11;</code>
     *
     * <pre>
     * 召唤概率
     * </pre>
     */
    int getSummonProbabilityListCount();
    /**
     * <code>repeated int32 summonProbabilityList = 11;</code>
     *
     * <pre>
     * 召唤概率
     * </pre>
     */
    int getSummonProbabilityList(int index);

    // repeated int32 frameNum = 12;
    /**
     * <code>repeated int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    java.util.List<java.lang.Integer> getFrameNumList();
    /**
     * <code>repeated int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    int getFrameNumCount();
    /**
     * <code>repeated int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    int getFrameNum(int index);

    // repeated int32 effectPosition = 13;
    /**
     * <code>repeated int32 effectPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    java.util.List<java.lang.Integer> getEffectPositionList();
    /**
     * <code>repeated int32 effectPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    int getEffectPositionCount();
    /**
     * <code>repeated int32 effectPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    int getEffectPosition(int index);

    // repeated string visualEffects = 14;
    /**
     * <code>repeated string visualEffects = 14;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    java.util.List<java.lang.String>
    getVisualEffectsList();
    /**
     * <code>repeated string visualEffects = 14;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    int getVisualEffectsCount();
    /**
     * <code>repeated string visualEffects = 14;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    java.lang.String getVisualEffects(int index);
    /**
     * <code>repeated string visualEffects = 14;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    com.google.protobuf.ByteString
        getVisualEffectsBytes(int index);
  }
  /**
   * Protobuf type {@code Effect}
   */
  public static final class Effect extends
      com.google.protobuf.GeneratedMessage
      implements EffectOrBuilder {
    // Use Effect.newBuilder() to construct.
    private Effect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Effect(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Effect defaultInstance;
    public static Effect getDefaultInstance() {
      return defaultInstance;
    }

    public Effect getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Effect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              element_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              targetRule_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              range_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              flySpeed_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                rateList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              rateList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                rateList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                rateList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                incidentalParamList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              incidentalParamList_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                incidentalParamList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                incidentalParamList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                summonHeroList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              summonHeroList_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                summonHeroList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                summonHeroList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                summonProbabilityList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              summonProbabilityList_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                summonProbabilityList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                summonProbabilityList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                frameNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              frameNum_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                frameNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                frameNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                effectPosition_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              effectPosition_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                effectPosition_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                effectPosition_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                visualEffects_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00002000;
              }
              visualEffects_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          rateList_ = java.util.Collections.unmodifiableList(rateList_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          incidentalParamList_ = java.util.Collections.unmodifiableList(incidentalParamList_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          summonHeroList_ = java.util.Collections.unmodifiableList(summonHeroList_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          summonProbabilityList_ = java.util.Collections.unmodifiableList(summonProbabilityList_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          frameNum_ = java.util.Collections.unmodifiableList(frameNum_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          effectPosition_ = java.util.Collections.unmodifiableList(effectPosition_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          visualEffects_ = new com.google.protobuf.UnmodifiableLazyStringList(visualEffects_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Effect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Effect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.SkillProbuf.Effect.class, com.cwa.prototype.protobuf.SkillProbuf.Effect.Builder.class);
    }

    public static com.google.protobuf.Parser<Effect> PARSER =
        new com.google.protobuf.AbstractParser<Effect>() {
      public Effect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Effect(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Effect> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 效果名
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 效果名
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 效果名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 element = 3;
    public static final int ELEMENT_FIELD_NUMBER = 3;
    private int element_;
    /**
     * <code>required int32 element = 3;</code>
     *
     * <pre>
     * 元素
     * </pre>
     */
    public boolean hasElement() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 element = 3;</code>
     *
     * <pre>
     * 元素
     * </pre>
     */
    public int getElement() {
      return element_;
    }

    // required int32 type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 targetRule = 5;
    public static final int TARGETRULE_FIELD_NUMBER = 5;
    private int targetRule_;
    /**
     * <code>required int32 targetRule = 5;</code>
     *
     * <pre>
     * 目标规则
     * </pre>
     */
    public boolean hasTargetRule() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 targetRule = 5;</code>
     *
     * <pre>
     * 目标规则
     * </pre>
     */
    public int getTargetRule() {
      return targetRule_;
    }

    // required int32 range = 6;
    public static final int RANGE_FIELD_NUMBER = 6;
    private int range_;
    /**
     * <code>required int32 range = 6;</code>
     *
     * <pre>
     * 范围
     * </pre>
     */
    public boolean hasRange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 range = 6;</code>
     *
     * <pre>
     * 范围
     * </pre>
     */
    public int getRange() {
      return range_;
    }

    // required int32 flySpeed = 7;
    public static final int FLYSPEED_FIELD_NUMBER = 7;
    private int flySpeed_;
    /**
     * <code>required int32 flySpeed = 7;</code>
     *
     * <pre>
     * 技能飞行速度
     * </pre>
     */
    public boolean hasFlySpeed() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 flySpeed = 7;</code>
     *
     * <pre>
     * 技能飞行速度
     * </pre>
     */
    public int getFlySpeed() {
      return flySpeed_;
    }

    // repeated int32 rateList = 8;
    public static final int RATELIST_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> rateList_;
    /**
     * <code>repeated int32 rateList = 8;</code>
     *
     * <pre>
     * 倍率（多个和技能等级走）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRateListList() {
      return rateList_;
    }
    /**
     * <code>repeated int32 rateList = 8;</code>
     *
     * <pre>
     * 倍率（多个和技能等级走）
     * </pre>
     */
    public int getRateListCount() {
      return rateList_.size();
    }
    /**
     * <code>repeated int32 rateList = 8;</code>
     *
     * <pre>
     * 倍率（多个和技能等级走）
     * </pre>
     */
    public int getRateList(int index) {
      return rateList_.get(index);
    }

    // repeated int32 incidentalParamList = 9;
    public static final int INCIDENTALPARAMLIST_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> incidentalParamList_;
    /**
     * <code>repeated int32 incidentalParamList = 9;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIncidentalParamListList() {
      return incidentalParamList_;
    }
    /**
     * <code>repeated int32 incidentalParamList = 9;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    public int getIncidentalParamListCount() {
      return incidentalParamList_.size();
    }
    /**
     * <code>repeated int32 incidentalParamList = 9;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    public int getIncidentalParamList(int index) {
      return incidentalParamList_.get(index);
    }

    // repeated int32 summonHeroList = 10;
    public static final int SUMMONHEROLIST_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> summonHeroList_;
    /**
     * <code>repeated int32 summonHeroList = 10;</code>
     *
     * <pre>
     * 召唤帮手
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSummonHeroListList() {
      return summonHeroList_;
    }
    /**
     * <code>repeated int32 summonHeroList = 10;</code>
     *
     * <pre>
     * 召唤帮手
     * </pre>
     */
    public int getSummonHeroListCount() {
      return summonHeroList_.size();
    }
    /**
     * <code>repeated int32 summonHeroList = 10;</code>
     *
     * <pre>
     * 召唤帮手
     * </pre>
     */
    public int getSummonHeroList(int index) {
      return summonHeroList_.get(index);
    }

    // repeated int32 summonProbabilityList = 11;
    public static final int SUMMONPROBABILITYLIST_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> summonProbabilityList_;
    /**
     * <code>repeated int32 summonProbabilityList = 11;</code>
     *
     * <pre>
     * 召唤概率
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSummonProbabilityListList() {
      return summonProbabilityList_;
    }
    /**
     * <code>repeated int32 summonProbabilityList = 11;</code>
     *
     * <pre>
     * 召唤概率
     * </pre>
     */
    public int getSummonProbabilityListCount() {
      return summonProbabilityList_.size();
    }
    /**
     * <code>repeated int32 summonProbabilityList = 11;</code>
     *
     * <pre>
     * 召唤概率
     * </pre>
     */
    public int getSummonProbabilityList(int index) {
      return summonProbabilityList_.get(index);
    }

    // repeated int32 frameNum = 12;
    public static final int FRAMENUM_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> frameNum_;
    /**
     * <code>repeated int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFrameNumList() {
      return frameNum_;
    }
    /**
     * <code>repeated int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    public int getFrameNumCount() {
      return frameNum_.size();
    }
    /**
     * <code>repeated int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    public int getFrameNum(int index) {
      return frameNum_.get(index);
    }

    // repeated int32 effectPosition = 13;
    public static final int EFFECTPOSITION_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> effectPosition_;
    /**
     * <code>repeated int32 effectPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEffectPositionList() {
      return effectPosition_;
    }
    /**
     * <code>repeated int32 effectPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    public int getEffectPositionCount() {
      return effectPosition_.size();
    }
    /**
     * <code>repeated int32 effectPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    public int getEffectPosition(int index) {
      return effectPosition_.get(index);
    }

    // repeated string visualEffects = 14;
    public static final int VISUALEFFECTS_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList visualEffects_;
    /**
     * <code>repeated string visualEffects = 14;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    public java.util.List<java.lang.String>
        getVisualEffectsList() {
      return visualEffects_;
    }
    /**
     * <code>repeated string visualEffects = 14;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    public int getVisualEffectsCount() {
      return visualEffects_.size();
    }
    /**
     * <code>repeated string visualEffects = 14;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    public java.lang.String getVisualEffects(int index) {
      return visualEffects_.get(index);
    }
    /**
     * <code>repeated string visualEffects = 14;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVisualEffectsBytes(int index) {
      return visualEffects_.getByteString(index);
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      element_ = 0;
      type_ = 0;
      targetRule_ = 0;
      range_ = 0;
      flySpeed_ = 0;
      rateList_ = java.util.Collections.emptyList();
      incidentalParamList_ = java.util.Collections.emptyList();
      summonHeroList_ = java.util.Collections.emptyList();
      summonProbabilityList_ = java.util.Collections.emptyList();
      frameNum_ = java.util.Collections.emptyList();
      effectPosition_ = java.util.Collections.emptyList();
      visualEffects_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasElement()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTargetRule()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRange()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFlySpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, element_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, targetRule_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, range_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, flySpeed_);
      }
      for (int i = 0; i < rateList_.size(); i++) {
        output.writeInt32(8, rateList_.get(i));
      }
      for (int i = 0; i < incidentalParamList_.size(); i++) {
        output.writeInt32(9, incidentalParamList_.get(i));
      }
      for (int i = 0; i < summonHeroList_.size(); i++) {
        output.writeInt32(10, summonHeroList_.get(i));
      }
      for (int i = 0; i < summonProbabilityList_.size(); i++) {
        output.writeInt32(11, summonProbabilityList_.get(i));
      }
      for (int i = 0; i < frameNum_.size(); i++) {
        output.writeInt32(12, frameNum_.get(i));
      }
      for (int i = 0; i < effectPosition_.size(); i++) {
        output.writeInt32(13, effectPosition_.get(i));
      }
      for (int i = 0; i < visualEffects_.size(); i++) {
        output.writeBytes(14, visualEffects_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, element_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, targetRule_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, range_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, flySpeed_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rateList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rateList_.get(i));
        }
        size += dataSize;
        size += 1 * getRateListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < incidentalParamList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(incidentalParamList_.get(i));
        }
        size += dataSize;
        size += 1 * getIncidentalParamListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < summonHeroList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(summonHeroList_.get(i));
        }
        size += dataSize;
        size += 1 * getSummonHeroListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < summonProbabilityList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(summonProbabilityList_.get(i));
        }
        size += dataSize;
        size += 1 * getSummonProbabilityListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < frameNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(frameNum_.get(i));
        }
        size += dataSize;
        size += 1 * getFrameNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < effectPosition_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(effectPosition_.get(i));
        }
        size += dataSize;
        size += 1 * getEffectPositionList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < visualEffects_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(visualEffects_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getVisualEffectsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Effect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.SkillProbuf.Effect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Effect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.SkillProbuf.EffectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Effect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Effect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.SkillProbuf.Effect.class, com.cwa.prototype.protobuf.SkillProbuf.Effect.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.SkillProbuf.Effect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        element_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        targetRule_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        range_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        flySpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rateList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        incidentalParamList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        summonHeroList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        summonProbabilityList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        frameNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        effectPosition_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        visualEffects_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Effect_descriptor;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Effect getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.Effect.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Effect build() {
        com.cwa.prototype.protobuf.SkillProbuf.Effect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Effect buildPartial() {
        com.cwa.prototype.protobuf.SkillProbuf.Effect result = new com.cwa.prototype.protobuf.SkillProbuf.Effect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.element_ = element_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.targetRule_ = targetRule_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.range_ = range_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.flySpeed_ = flySpeed_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          rateList_ = java.util.Collections.unmodifiableList(rateList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.rateList_ = rateList_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          incidentalParamList_ = java.util.Collections.unmodifiableList(incidentalParamList_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.incidentalParamList_ = incidentalParamList_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          summonHeroList_ = java.util.Collections.unmodifiableList(summonHeroList_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.summonHeroList_ = summonHeroList_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          summonProbabilityList_ = java.util.Collections.unmodifiableList(summonProbabilityList_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.summonProbabilityList_ = summonProbabilityList_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          frameNum_ = java.util.Collections.unmodifiableList(frameNum_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.frameNum_ = frameNum_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          effectPosition_ = java.util.Collections.unmodifiableList(effectPosition_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.effectPosition_ = effectPosition_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          visualEffects_ = new com.google.protobuf.UnmodifiableLazyStringList(
              visualEffects_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.visualEffects_ = visualEffects_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.SkillProbuf.Effect) {
          return mergeFrom((com.cwa.prototype.protobuf.SkillProbuf.Effect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.SkillProbuf.Effect other) {
        if (other == com.cwa.prototype.protobuf.SkillProbuf.Effect.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasElement()) {
          setElement(other.getElement());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTargetRule()) {
          setTargetRule(other.getTargetRule());
        }
        if (other.hasRange()) {
          setRange(other.getRange());
        }
        if (other.hasFlySpeed()) {
          setFlySpeed(other.getFlySpeed());
        }
        if (!other.rateList_.isEmpty()) {
          if (rateList_.isEmpty()) {
            rateList_ = other.rateList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRateListIsMutable();
            rateList_.addAll(other.rateList_);
          }
          onChanged();
        }
        if (!other.incidentalParamList_.isEmpty()) {
          if (incidentalParamList_.isEmpty()) {
            incidentalParamList_ = other.incidentalParamList_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureIncidentalParamListIsMutable();
            incidentalParamList_.addAll(other.incidentalParamList_);
          }
          onChanged();
        }
        if (!other.summonHeroList_.isEmpty()) {
          if (summonHeroList_.isEmpty()) {
            summonHeroList_ = other.summonHeroList_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureSummonHeroListIsMutable();
            summonHeroList_.addAll(other.summonHeroList_);
          }
          onChanged();
        }
        if (!other.summonProbabilityList_.isEmpty()) {
          if (summonProbabilityList_.isEmpty()) {
            summonProbabilityList_ = other.summonProbabilityList_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSummonProbabilityListIsMutable();
            summonProbabilityList_.addAll(other.summonProbabilityList_);
          }
          onChanged();
        }
        if (!other.frameNum_.isEmpty()) {
          if (frameNum_.isEmpty()) {
            frameNum_ = other.frameNum_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureFrameNumIsMutable();
            frameNum_.addAll(other.frameNum_);
          }
          onChanged();
        }
        if (!other.effectPosition_.isEmpty()) {
          if (effectPosition_.isEmpty()) {
            effectPosition_ = other.effectPosition_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureEffectPositionIsMutable();
            effectPosition_.addAll(other.effectPosition_);
          }
          onChanged();
        }
        if (!other.visualEffects_.isEmpty()) {
          if (visualEffects_.isEmpty()) {
            visualEffects_ = other.visualEffects_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureVisualEffectsIsMutable();
            visualEffects_.addAll(other.visualEffects_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasElement()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasTargetRule()) {
          
          return false;
        }
        if (!hasRange()) {
          
          return false;
        }
        if (!hasFlySpeed()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.SkillProbuf.Effect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.SkillProbuf.Effect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 效果名
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 效果名
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 效果名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 效果名
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 效果名
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 效果名
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 element = 3;
      private int element_ ;
      /**
       * <code>required int32 element = 3;</code>
       *
       * <pre>
       * 元素
       * </pre>
       */
      public boolean hasElement() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 element = 3;</code>
       *
       * <pre>
       * 元素
       * </pre>
       */
      public int getElement() {
        return element_;
      }
      /**
       * <code>required int32 element = 3;</code>
       *
       * <pre>
       * 元素
       * </pre>
       */
      public Builder setElement(int value) {
        bitField0_ |= 0x00000004;
        element_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 element = 3;</code>
       *
       * <pre>
       * 元素
       * </pre>
       */
      public Builder clearElement() {
        bitField0_ = (bitField0_ & ~0x00000004);
        element_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 4;
      private int type_ ;
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 targetRule = 5;
      private int targetRule_ ;
      /**
       * <code>required int32 targetRule = 5;</code>
       *
       * <pre>
       * 目标规则
       * </pre>
       */
      public boolean hasTargetRule() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 targetRule = 5;</code>
       *
       * <pre>
       * 目标规则
       * </pre>
       */
      public int getTargetRule() {
        return targetRule_;
      }
      /**
       * <code>required int32 targetRule = 5;</code>
       *
       * <pre>
       * 目标规则
       * </pre>
       */
      public Builder setTargetRule(int value) {
        bitField0_ |= 0x00000010;
        targetRule_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 targetRule = 5;</code>
       *
       * <pre>
       * 目标规则
       * </pre>
       */
      public Builder clearTargetRule() {
        bitField0_ = (bitField0_ & ~0x00000010);
        targetRule_ = 0;
        onChanged();
        return this;
      }

      // required int32 range = 6;
      private int range_ ;
      /**
       * <code>required int32 range = 6;</code>
       *
       * <pre>
       * 范围
       * </pre>
       */
      public boolean hasRange() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 range = 6;</code>
       *
       * <pre>
       * 范围
       * </pre>
       */
      public int getRange() {
        return range_;
      }
      /**
       * <code>required int32 range = 6;</code>
       *
       * <pre>
       * 范围
       * </pre>
       */
      public Builder setRange(int value) {
        bitField0_ |= 0x00000020;
        range_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 range = 6;</code>
       *
       * <pre>
       * 范围
       * </pre>
       */
      public Builder clearRange() {
        bitField0_ = (bitField0_ & ~0x00000020);
        range_ = 0;
        onChanged();
        return this;
      }

      // required int32 flySpeed = 7;
      private int flySpeed_ ;
      /**
       * <code>required int32 flySpeed = 7;</code>
       *
       * <pre>
       * 技能飞行速度
       * </pre>
       */
      public boolean hasFlySpeed() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 flySpeed = 7;</code>
       *
       * <pre>
       * 技能飞行速度
       * </pre>
       */
      public int getFlySpeed() {
        return flySpeed_;
      }
      /**
       * <code>required int32 flySpeed = 7;</code>
       *
       * <pre>
       * 技能飞行速度
       * </pre>
       */
      public Builder setFlySpeed(int value) {
        bitField0_ |= 0x00000040;
        flySpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 flySpeed = 7;</code>
       *
       * <pre>
       * 技能飞行速度
       * </pre>
       */
      public Builder clearFlySpeed() {
        bitField0_ = (bitField0_ & ~0x00000040);
        flySpeed_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 rateList = 8;
      private java.util.List<java.lang.Integer> rateList_ = java.util.Collections.emptyList();
      private void ensureRateListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          rateList_ = new java.util.ArrayList<java.lang.Integer>(rateList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 rateList = 8;</code>
       *
       * <pre>
       * 倍率（多个和技能等级走）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRateListList() {
        return java.util.Collections.unmodifiableList(rateList_);
      }
      /**
       * <code>repeated int32 rateList = 8;</code>
       *
       * <pre>
       * 倍率（多个和技能等级走）
       * </pre>
       */
      public int getRateListCount() {
        return rateList_.size();
      }
      /**
       * <code>repeated int32 rateList = 8;</code>
       *
       * <pre>
       * 倍率（多个和技能等级走）
       * </pre>
       */
      public int getRateList(int index) {
        return rateList_.get(index);
      }
      /**
       * <code>repeated int32 rateList = 8;</code>
       *
       * <pre>
       * 倍率（多个和技能等级走）
       * </pre>
       */
      public Builder setRateList(
          int index, int value) {
        ensureRateListIsMutable();
        rateList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rateList = 8;</code>
       *
       * <pre>
       * 倍率（多个和技能等级走）
       * </pre>
       */
      public Builder addRateList(int value) {
        ensureRateListIsMutable();
        rateList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rateList = 8;</code>
       *
       * <pre>
       * 倍率（多个和技能等级走）
       * </pre>
       */
      public Builder addAllRateList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRateListIsMutable();
        super.addAll(values, rateList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rateList = 8;</code>
       *
       * <pre>
       * 倍率（多个和技能等级走）
       * </pre>
       */
      public Builder clearRateList() {
        rateList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 incidentalParamList = 9;
      private java.util.List<java.lang.Integer> incidentalParamList_ = java.util.Collections.emptyList();
      private void ensureIncidentalParamListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          incidentalParamList_ = new java.util.ArrayList<java.lang.Integer>(incidentalParamList_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 incidentalParamList = 9;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIncidentalParamListList() {
        return java.util.Collections.unmodifiableList(incidentalParamList_);
      }
      /**
       * <code>repeated int32 incidentalParamList = 9;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public int getIncidentalParamListCount() {
        return incidentalParamList_.size();
      }
      /**
       * <code>repeated int32 incidentalParamList = 9;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public int getIncidentalParamList(int index) {
        return incidentalParamList_.get(index);
      }
      /**
       * <code>repeated int32 incidentalParamList = 9;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public Builder setIncidentalParamList(
          int index, int value) {
        ensureIncidentalParamListIsMutable();
        incidentalParamList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 incidentalParamList = 9;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public Builder addIncidentalParamList(int value) {
        ensureIncidentalParamListIsMutable();
        incidentalParamList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 incidentalParamList = 9;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public Builder addAllIncidentalParamList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIncidentalParamListIsMutable();
        super.addAll(values, incidentalParamList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 incidentalParamList = 9;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public Builder clearIncidentalParamList() {
        incidentalParamList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 summonHeroList = 10;
      private java.util.List<java.lang.Integer> summonHeroList_ = java.util.Collections.emptyList();
      private void ensureSummonHeroListIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          summonHeroList_ = new java.util.ArrayList<java.lang.Integer>(summonHeroList_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 summonHeroList = 10;</code>
       *
       * <pre>
       * 召唤帮手
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSummonHeroListList() {
        return java.util.Collections.unmodifiableList(summonHeroList_);
      }
      /**
       * <code>repeated int32 summonHeroList = 10;</code>
       *
       * <pre>
       * 召唤帮手
       * </pre>
       */
      public int getSummonHeroListCount() {
        return summonHeroList_.size();
      }
      /**
       * <code>repeated int32 summonHeroList = 10;</code>
       *
       * <pre>
       * 召唤帮手
       * </pre>
       */
      public int getSummonHeroList(int index) {
        return summonHeroList_.get(index);
      }
      /**
       * <code>repeated int32 summonHeroList = 10;</code>
       *
       * <pre>
       * 召唤帮手
       * </pre>
       */
      public Builder setSummonHeroList(
          int index, int value) {
        ensureSummonHeroListIsMutable();
        summonHeroList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 summonHeroList = 10;</code>
       *
       * <pre>
       * 召唤帮手
       * </pre>
       */
      public Builder addSummonHeroList(int value) {
        ensureSummonHeroListIsMutable();
        summonHeroList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 summonHeroList = 10;</code>
       *
       * <pre>
       * 召唤帮手
       * </pre>
       */
      public Builder addAllSummonHeroList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSummonHeroListIsMutable();
        super.addAll(values, summonHeroList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 summonHeroList = 10;</code>
       *
       * <pre>
       * 召唤帮手
       * </pre>
       */
      public Builder clearSummonHeroList() {
        summonHeroList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 summonProbabilityList = 11;
      private java.util.List<java.lang.Integer> summonProbabilityList_ = java.util.Collections.emptyList();
      private void ensureSummonProbabilityListIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          summonProbabilityList_ = new java.util.ArrayList<java.lang.Integer>(summonProbabilityList_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 summonProbabilityList = 11;</code>
       *
       * <pre>
       * 召唤概率
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSummonProbabilityListList() {
        return java.util.Collections.unmodifiableList(summonProbabilityList_);
      }
      /**
       * <code>repeated int32 summonProbabilityList = 11;</code>
       *
       * <pre>
       * 召唤概率
       * </pre>
       */
      public int getSummonProbabilityListCount() {
        return summonProbabilityList_.size();
      }
      /**
       * <code>repeated int32 summonProbabilityList = 11;</code>
       *
       * <pre>
       * 召唤概率
       * </pre>
       */
      public int getSummonProbabilityList(int index) {
        return summonProbabilityList_.get(index);
      }
      /**
       * <code>repeated int32 summonProbabilityList = 11;</code>
       *
       * <pre>
       * 召唤概率
       * </pre>
       */
      public Builder setSummonProbabilityList(
          int index, int value) {
        ensureSummonProbabilityListIsMutable();
        summonProbabilityList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 summonProbabilityList = 11;</code>
       *
       * <pre>
       * 召唤概率
       * </pre>
       */
      public Builder addSummonProbabilityList(int value) {
        ensureSummonProbabilityListIsMutable();
        summonProbabilityList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 summonProbabilityList = 11;</code>
       *
       * <pre>
       * 召唤概率
       * </pre>
       */
      public Builder addAllSummonProbabilityList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSummonProbabilityListIsMutable();
        super.addAll(values, summonProbabilityList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 summonProbabilityList = 11;</code>
       *
       * <pre>
       * 召唤概率
       * </pre>
       */
      public Builder clearSummonProbabilityList() {
        summonProbabilityList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 frameNum = 12;
      private java.util.List<java.lang.Integer> frameNum_ = java.util.Collections.emptyList();
      private void ensureFrameNumIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          frameNum_ = new java.util.ArrayList<java.lang.Integer>(frameNum_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFrameNumList() {
        return java.util.Collections.unmodifiableList(frameNum_);
      }
      /**
       * <code>repeated int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public int getFrameNumCount() {
        return frameNum_.size();
      }
      /**
       * <code>repeated int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public int getFrameNum(int index) {
        return frameNum_.get(index);
      }
      /**
       * <code>repeated int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public Builder setFrameNum(
          int index, int value) {
        ensureFrameNumIsMutable();
        frameNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public Builder addFrameNum(int value) {
        ensureFrameNumIsMutable();
        frameNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public Builder addAllFrameNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFrameNumIsMutable();
        super.addAll(values, frameNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public Builder clearFrameNum() {
        frameNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 effectPosition = 13;
      private java.util.List<java.lang.Integer> effectPosition_ = java.util.Collections.emptyList();
      private void ensureEffectPositionIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          effectPosition_ = new java.util.ArrayList<java.lang.Integer>(effectPosition_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 effectPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEffectPositionList() {
        return java.util.Collections.unmodifiableList(effectPosition_);
      }
      /**
       * <code>repeated int32 effectPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public int getEffectPositionCount() {
        return effectPosition_.size();
      }
      /**
       * <code>repeated int32 effectPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public int getEffectPosition(int index) {
        return effectPosition_.get(index);
      }
      /**
       * <code>repeated int32 effectPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public Builder setEffectPosition(
          int index, int value) {
        ensureEffectPositionIsMutable();
        effectPosition_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public Builder addEffectPosition(int value) {
        ensureEffectPositionIsMutable();
        effectPosition_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public Builder addAllEffectPosition(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEffectPositionIsMutable();
        super.addAll(values, effectPosition_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public Builder clearEffectPosition() {
        effectPosition_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated string visualEffects = 14;
      private com.google.protobuf.LazyStringList visualEffects_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureVisualEffectsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          visualEffects_ = new com.google.protobuf.LazyStringArrayList(visualEffects_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public java.util.List<java.lang.String>
          getVisualEffectsList() {
        return java.util.Collections.unmodifiableList(visualEffects_);
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public int getVisualEffectsCount() {
        return visualEffects_.size();
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public java.lang.String getVisualEffects(int index) {
        return visualEffects_.get(index);
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVisualEffectsBytes(int index) {
        return visualEffects_.getByteString(index);
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public Builder setVisualEffects(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureVisualEffectsIsMutable();
        visualEffects_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public Builder addVisualEffects(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureVisualEffectsIsMutable();
        visualEffects_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public Builder addAllVisualEffects(
          java.lang.Iterable<java.lang.String> values) {
        ensureVisualEffectsIsMutable();
        super.addAll(values, visualEffects_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public Builder clearVisualEffects() {
        visualEffects_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string visualEffects = 14;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public Builder addVisualEffectsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureVisualEffectsIsMutable();
        visualEffects_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Effect)
    }

    static {
      defaultInstance = new Effect(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Effect)
  }

  public interface BuffOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    int getType();

    // required int32 buffOrDebuff = 3;
    /**
     * <code>required int32 buffOrDebuff = 3;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    boolean hasBuffOrDebuff();
    /**
     * <code>required int32 buffOrDebuff = 3;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    int getBuffOrDebuff();

    // required int32 rate = 4;
    /**
     * <code>required int32 rate = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    boolean hasRate();
    /**
     * <code>required int32 rate = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    int getRate();

    // repeated int32 effectionTypeList = 5;
    /**
     * <code>repeated int32 effectionTypeList = 5;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getEffectionTypeListList();
    /**
     * <code>repeated int32 effectionTypeList = 5;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    int getEffectionTypeListCount();
    /**
     * <code>repeated int32 effectionTypeList = 5;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    int getEffectionTypeList(int index);

    // repeated int32 damageAmountList = 6;
    /**
     * <code>repeated int32 damageAmountList = 6;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    java.util.List<java.lang.Integer> getDamageAmountListList();
    /**
     * <code>repeated int32 damageAmountList = 6;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    int getDamageAmountListCount();
    /**
     * <code>repeated int32 damageAmountList = 6;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    int getDamageAmountList(int index);

    // required int32 valueType = 7;
    /**
     * <code>required int32 valueType = 7;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    boolean hasValueType();
    /**
     * <code>required int32 valueType = 7;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    int getValueType();

    // required int32 effectiveTime = 8;
    /**
     * <code>required int32 effectiveTime = 8;</code>
     *
     * <pre>
     * 效果时间
     * </pre>
     */
    boolean hasEffectiveTime();
    /**
     * <code>required int32 effectiveTime = 8;</code>
     *
     * <pre>
     * 效果时间
     * </pre>
     */
    int getEffectiveTime();

    // required int32 intervalTime = 9;
    /**
     * <code>required int32 intervalTime = 9;</code>
     *
     * <pre>
     * 间隔时间
     * </pre>
     */
    boolean hasIntervalTime();
    /**
     * <code>required int32 intervalTime = 9;</code>
     *
     * <pre>
     * 间隔时间
     * </pre>
     */
    int getIntervalTime();

    // required int32 priority = 10;
    /**
     * <code>required int32 priority = 10;</code>
     *
     * <pre>
     * 优先级
     * </pre>
     */
    boolean hasPriority();
    /**
     * <code>required int32 priority = 10;</code>
     *
     * <pre>
     * 优先级
     * </pre>
     */
    int getPriority();

    // required int32 disperse = 11;
    /**
     * <code>required int32 disperse = 11;</code>
     *
     * <pre>
     * 驱散
     * </pre>
     */
    boolean hasDisperse();
    /**
     * <code>required int32 disperse = 11;</code>
     *
     * <pre>
     * 驱散
     * </pre>
     */
    int getDisperse();

    // required int32 frameNum = 12;
    /**
     * <code>required int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    boolean hasFrameNum();
    /**
     * <code>required int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    int getFrameNum();

    // required int32 buffPosition = 13;
    /**
     * <code>required int32 buffPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    boolean hasBuffPosition();
    /**
     * <code>required int32 buffPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    int getBuffPosition();

    // required int32 playType = 14;
    /**
     * <code>required int32 playType = 14;</code>
     *
     * <pre>
     * 播放亏则
     * </pre>
     */
    boolean hasPlayType();
    /**
     * <code>required int32 playType = 14;</code>
     *
     * <pre>
     * 播放亏则
     * </pre>
     */
    int getPlayType();

    // required string icon = 15;
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    boolean hasIcon();
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    java.lang.String getIcon();
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // required string visualEffects = 16;
    /**
     * <code>required string visualEffects = 16;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    boolean hasVisualEffects();
    /**
     * <code>required string visualEffects = 16;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    java.lang.String getVisualEffects();
    /**
     * <code>required string visualEffects = 16;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    com.google.protobuf.ByteString
        getVisualEffectsBytes();
  }
  /**
   * Protobuf type {@code Buff}
   */
  public static final class Buff extends
      com.google.protobuf.GeneratedMessage
      implements BuffOrBuilder {
    // Use Buff.newBuilder() to construct.
    private Buff(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Buff(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Buff defaultInstance;
    public static Buff getDefaultInstance() {
      return defaultInstance;
    }

    public Buff getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Buff(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              buffOrDebuff_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rate_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                effectionTypeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              effectionTypeList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                effectionTypeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                effectionTypeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                damageAmountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              damageAmountList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                damageAmountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                damageAmountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              valueType_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              effectiveTime_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              intervalTime_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              priority_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              disperse_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              frameNum_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              buffPosition_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              playType_ = input.readInt32();
              break;
            }
            case 122: {
              bitField0_ |= 0x00001000;
              icon_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00002000;
              visualEffects_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          effectionTypeList_ = java.util.Collections.unmodifiableList(effectionTypeList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          damageAmountList_ = java.util.Collections.unmodifiableList(damageAmountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Buff_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Buff_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.SkillProbuf.Buff.class, com.cwa.prototype.protobuf.SkillProbuf.Buff.Builder.class);
    }

    public static com.google.protobuf.Parser<Buff> PARSER =
        new com.google.protobuf.AbstractParser<Buff>() {
      public Buff parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Buff(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Buff> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 buffOrDebuff = 3;
    public static final int BUFFORDEBUFF_FIELD_NUMBER = 3;
    private int buffOrDebuff_;
    /**
     * <code>required int32 buffOrDebuff = 3;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    public boolean hasBuffOrDebuff() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 buffOrDebuff = 3;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    public int getBuffOrDebuff() {
      return buffOrDebuff_;
    }

    // required int32 rate = 4;
    public static final int RATE_FIELD_NUMBER = 4;
    private int rate_;
    /**
     * <code>required int32 rate = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    public boolean hasRate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 rate = 4;</code>
     *
     * <pre>
     * 几率
     * </pre>
     */
    public int getRate() {
      return rate_;
    }

    // repeated int32 effectionTypeList = 5;
    public static final int EFFECTIONTYPELIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> effectionTypeList_;
    /**
     * <code>repeated int32 effectionTypeList = 5;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEffectionTypeListList() {
      return effectionTypeList_;
    }
    /**
     * <code>repeated int32 effectionTypeList = 5;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    public int getEffectionTypeListCount() {
      return effectionTypeList_.size();
    }
    /**
     * <code>repeated int32 effectionTypeList = 5;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    public int getEffectionTypeList(int index) {
      return effectionTypeList_.get(index);
    }

    // repeated int32 damageAmountList = 6;
    public static final int DAMAGEAMOUNTLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> damageAmountList_;
    /**
     * <code>repeated int32 damageAmountList = 6;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDamageAmountListList() {
      return damageAmountList_;
    }
    /**
     * <code>repeated int32 damageAmountList = 6;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public int getDamageAmountListCount() {
      return damageAmountList_.size();
    }
    /**
     * <code>repeated int32 damageAmountList = 6;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public int getDamageAmountList(int index) {
      return damageAmountList_.get(index);
    }

    // required int32 valueType = 7;
    public static final int VALUETYPE_FIELD_NUMBER = 7;
    private int valueType_;
    /**
     * <code>required int32 valueType = 7;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 valueType = 7;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    public int getValueType() {
      return valueType_;
    }

    // required int32 effectiveTime = 8;
    public static final int EFFECTIVETIME_FIELD_NUMBER = 8;
    private int effectiveTime_;
    /**
     * <code>required int32 effectiveTime = 8;</code>
     *
     * <pre>
     * 效果时间
     * </pre>
     */
    public boolean hasEffectiveTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 effectiveTime = 8;</code>
     *
     * <pre>
     * 效果时间
     * </pre>
     */
    public int getEffectiveTime() {
      return effectiveTime_;
    }

    // required int32 intervalTime = 9;
    public static final int INTERVALTIME_FIELD_NUMBER = 9;
    private int intervalTime_;
    /**
     * <code>required int32 intervalTime = 9;</code>
     *
     * <pre>
     * 间隔时间
     * </pre>
     */
    public boolean hasIntervalTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 intervalTime = 9;</code>
     *
     * <pre>
     * 间隔时间
     * </pre>
     */
    public int getIntervalTime() {
      return intervalTime_;
    }

    // required int32 priority = 10;
    public static final int PRIORITY_FIELD_NUMBER = 10;
    private int priority_;
    /**
     * <code>required int32 priority = 10;</code>
     *
     * <pre>
     * 优先级
     * </pre>
     */
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 priority = 10;</code>
     *
     * <pre>
     * 优先级
     * </pre>
     */
    public int getPriority() {
      return priority_;
    }

    // required int32 disperse = 11;
    public static final int DISPERSE_FIELD_NUMBER = 11;
    private int disperse_;
    /**
     * <code>required int32 disperse = 11;</code>
     *
     * <pre>
     * 驱散
     * </pre>
     */
    public boolean hasDisperse() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 disperse = 11;</code>
     *
     * <pre>
     * 驱散
     * </pre>
     */
    public int getDisperse() {
      return disperse_;
    }

    // required int32 frameNum = 12;
    public static final int FRAMENUM_FIELD_NUMBER = 12;
    private int frameNum_;
    /**
     * <code>required int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    public boolean hasFrameNum() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 frameNum = 12;</code>
     *
     * <pre>
     * 帧数
     * </pre>
     */
    public int getFrameNum() {
      return frameNum_;
    }

    // required int32 buffPosition = 13;
    public static final int BUFFPOSITION_FIELD_NUMBER = 13;
    private int buffPosition_;
    /**
     * <code>required int32 buffPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    public boolean hasBuffPosition() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 buffPosition = 13;</code>
     *
     * <pre>
     * 位置
     * </pre>
     */
    public int getBuffPosition() {
      return buffPosition_;
    }

    // required int32 playType = 14;
    public static final int PLAYTYPE_FIELD_NUMBER = 14;
    private int playType_;
    /**
     * <code>required int32 playType = 14;</code>
     *
     * <pre>
     * 播放亏则
     * </pre>
     */
    public boolean hasPlayType() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 playType = 14;</code>
     *
     * <pre>
     * 播放亏则
     * </pre>
     */
    public int getPlayType() {
      return playType_;
    }

    // required string icon = 15;
    public static final int ICON_FIELD_NUMBER = 15;
    private java.lang.Object icon_;
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string icon = 15;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string visualEffects = 16;
    public static final int VISUALEFFECTS_FIELD_NUMBER = 16;
    private java.lang.Object visualEffects_;
    /**
     * <code>required string visualEffects = 16;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    public boolean hasVisualEffects() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required string visualEffects = 16;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    public java.lang.String getVisualEffects() {
      java.lang.Object ref = visualEffects_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          visualEffects_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string visualEffects = 16;</code>
     *
     * <pre>
     * 视觉效果
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVisualEffectsBytes() {
      java.lang.Object ref = visualEffects_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        visualEffects_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      keyId_ = 0;
      type_ = 0;
      buffOrDebuff_ = 0;
      rate_ = 0;
      effectionTypeList_ = java.util.Collections.emptyList();
      damageAmountList_ = java.util.Collections.emptyList();
      valueType_ = 0;
      effectiveTime_ = 0;
      intervalTime_ = 0;
      priority_ = 0;
      disperse_ = 0;
      frameNum_ = 0;
      buffPosition_ = 0;
      playType_ = 0;
      icon_ = "";
      visualEffects_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBuffOrDebuff()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValueType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEffectiveTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntervalTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPriority()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDisperse()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrameNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBuffPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIcon()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVisualEffects()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, buffOrDebuff_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, rate_);
      }
      for (int i = 0; i < effectionTypeList_.size(); i++) {
        output.writeInt32(5, effectionTypeList_.get(i));
      }
      for (int i = 0; i < damageAmountList_.size(); i++) {
        output.writeInt32(6, damageAmountList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, valueType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, effectiveTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, intervalTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, priority_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, disperse_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, frameNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, buffPosition_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(14, playType_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(15, getIconBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(16, getVisualEffectsBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, buffOrDebuff_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < effectionTypeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(effectionTypeList_.get(i));
        }
        size += dataSize;
        size += 1 * getEffectionTypeListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < damageAmountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(damageAmountList_.get(i));
        }
        size += dataSize;
        size += 1 * getDamageAmountListList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, valueType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, effectiveTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, intervalTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, priority_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, disperse_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, frameNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, buffPosition_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, playType_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getIconBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getVisualEffectsBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Buff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.SkillProbuf.Buff prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Buff}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.SkillProbuf.BuffOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Buff_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Buff_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.SkillProbuf.Buff.class, com.cwa.prototype.protobuf.SkillProbuf.Buff.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.SkillProbuf.Buff.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        buffOrDebuff_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        effectionTypeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        damageAmountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        valueType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        effectiveTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        intervalTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        priority_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        disperse_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        frameNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        buffPosition_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        playType_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        visualEffects_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Buff_descriptor;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Buff getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.Buff.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Buff build() {
        com.cwa.prototype.protobuf.SkillProbuf.Buff result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Buff buildPartial() {
        com.cwa.prototype.protobuf.SkillProbuf.Buff result = new com.cwa.prototype.protobuf.SkillProbuf.Buff(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.buffOrDebuff_ = buffOrDebuff_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rate_ = rate_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          effectionTypeList_ = java.util.Collections.unmodifiableList(effectionTypeList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.effectionTypeList_ = effectionTypeList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          damageAmountList_ = java.util.Collections.unmodifiableList(damageAmountList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.damageAmountList_ = damageAmountList_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.effectiveTime_ = effectiveTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.intervalTime_ = intervalTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.priority_ = priority_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.disperse_ = disperse_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.frameNum_ = frameNum_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.buffPosition_ = buffPosition_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.playType_ = playType_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.visualEffects_ = visualEffects_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.SkillProbuf.Buff) {
          return mergeFrom((com.cwa.prototype.protobuf.SkillProbuf.Buff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.SkillProbuf.Buff other) {
        if (other == com.cwa.prototype.protobuf.SkillProbuf.Buff.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBuffOrDebuff()) {
          setBuffOrDebuff(other.getBuffOrDebuff());
        }
        if (other.hasRate()) {
          setRate(other.getRate());
        }
        if (!other.effectionTypeList_.isEmpty()) {
          if (effectionTypeList_.isEmpty()) {
            effectionTypeList_ = other.effectionTypeList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureEffectionTypeListIsMutable();
            effectionTypeList_.addAll(other.effectionTypeList_);
          }
          onChanged();
        }
        if (!other.damageAmountList_.isEmpty()) {
          if (damageAmountList_.isEmpty()) {
            damageAmountList_ = other.damageAmountList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureDamageAmountListIsMutable();
            damageAmountList_.addAll(other.damageAmountList_);
          }
          onChanged();
        }
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasEffectiveTime()) {
          setEffectiveTime(other.getEffectiveTime());
        }
        if (other.hasIntervalTime()) {
          setIntervalTime(other.getIntervalTime());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (other.hasDisperse()) {
          setDisperse(other.getDisperse());
        }
        if (other.hasFrameNum()) {
          setFrameNum(other.getFrameNum());
        }
        if (other.hasBuffPosition()) {
          setBuffPosition(other.getBuffPosition());
        }
        if (other.hasPlayType()) {
          setPlayType(other.getPlayType());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00004000;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasVisualEffects()) {
          bitField0_ |= 0x00008000;
          visualEffects_ = other.visualEffects_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasBuffOrDebuff()) {
          
          return false;
        }
        if (!hasRate()) {
          
          return false;
        }
        if (!hasValueType()) {
          
          return false;
        }
        if (!hasEffectiveTime()) {
          
          return false;
        }
        if (!hasIntervalTime()) {
          
          return false;
        }
        if (!hasPriority()) {
          
          return false;
        }
        if (!hasDisperse()) {
          
          return false;
        }
        if (!hasFrameNum()) {
          
          return false;
        }
        if (!hasBuffPosition()) {
          
          return false;
        }
        if (!hasPlayType()) {
          
          return false;
        }
        if (!hasIcon()) {
          
          return false;
        }
        if (!hasVisualEffects()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.SkillProbuf.Buff parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.SkillProbuf.Buff) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 buffOrDebuff = 3;
      private int buffOrDebuff_ ;
      /**
       * <code>required int32 buffOrDebuff = 3;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public boolean hasBuffOrDebuff() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 buffOrDebuff = 3;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public int getBuffOrDebuff() {
        return buffOrDebuff_;
      }
      /**
       * <code>required int32 buffOrDebuff = 3;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public Builder setBuffOrDebuff(int value) {
        bitField0_ |= 0x00000004;
        buffOrDebuff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 buffOrDebuff = 3;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public Builder clearBuffOrDebuff() {
        bitField0_ = (bitField0_ & ~0x00000004);
        buffOrDebuff_ = 0;
        onChanged();
        return this;
      }

      // required int32 rate = 4;
      private int rate_ ;
      /**
       * <code>required int32 rate = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public boolean hasRate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 rate = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public int getRate() {
        return rate_;
      }
      /**
       * <code>required int32 rate = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public Builder setRate(int value) {
        bitField0_ |= 0x00000008;
        rate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 rate = 4;</code>
       *
       * <pre>
       * 几率
       * </pre>
       */
      public Builder clearRate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rate_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 effectionTypeList = 5;
      private java.util.List<java.lang.Integer> effectionTypeList_ = java.util.Collections.emptyList();
      private void ensureEffectionTypeListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          effectionTypeList_ = new java.util.ArrayList<java.lang.Integer>(effectionTypeList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 effectionTypeList = 5;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEffectionTypeListList() {
        return java.util.Collections.unmodifiableList(effectionTypeList_);
      }
      /**
       * <code>repeated int32 effectionTypeList = 5;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public int getEffectionTypeListCount() {
        return effectionTypeList_.size();
      }
      /**
       * <code>repeated int32 effectionTypeList = 5;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public int getEffectionTypeList(int index) {
        return effectionTypeList_.get(index);
      }
      /**
       * <code>repeated int32 effectionTypeList = 5;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public Builder setEffectionTypeList(
          int index, int value) {
        ensureEffectionTypeListIsMutable();
        effectionTypeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectionTypeList = 5;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public Builder addEffectionTypeList(int value) {
        ensureEffectionTypeListIsMutable();
        effectionTypeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectionTypeList = 5;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public Builder addAllEffectionTypeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEffectionTypeListIsMutable();
        super.addAll(values, effectionTypeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectionTypeList = 5;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public Builder clearEffectionTypeList() {
        effectionTypeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 damageAmountList = 6;
      private java.util.List<java.lang.Integer> damageAmountList_ = java.util.Collections.emptyList();
      private void ensureDamageAmountListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          damageAmountList_ = new java.util.ArrayList<java.lang.Integer>(damageAmountList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 damageAmountList = 6;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDamageAmountListList() {
        return java.util.Collections.unmodifiableList(damageAmountList_);
      }
      /**
       * <code>repeated int32 damageAmountList = 6;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public int getDamageAmountListCount() {
        return damageAmountList_.size();
      }
      /**
       * <code>repeated int32 damageAmountList = 6;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public int getDamageAmountList(int index) {
        return damageAmountList_.get(index);
      }
      /**
       * <code>repeated int32 damageAmountList = 6;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder setDamageAmountList(
          int index, int value) {
        ensureDamageAmountListIsMutable();
        damageAmountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 damageAmountList = 6;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder addDamageAmountList(int value) {
        ensureDamageAmountListIsMutable();
        damageAmountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 damageAmountList = 6;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder addAllDamageAmountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDamageAmountListIsMutable();
        super.addAll(values, damageAmountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 damageAmountList = 6;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder clearDamageAmountList() {
        damageAmountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // required int32 valueType = 7;
      private int valueType_ ;
      /**
       * <code>required int32 valueType = 7;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 valueType = 7;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public int getValueType() {
        return valueType_;
      }
      /**
       * <code>required int32 valueType = 7;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public Builder setValueType(int value) {
        bitField0_ |= 0x00000040;
        valueType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 valueType = 7;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        valueType_ = 0;
        onChanged();
        return this;
      }

      // required int32 effectiveTime = 8;
      private int effectiveTime_ ;
      /**
       * <code>required int32 effectiveTime = 8;</code>
       *
       * <pre>
       * 效果时间
       * </pre>
       */
      public boolean hasEffectiveTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 effectiveTime = 8;</code>
       *
       * <pre>
       * 效果时间
       * </pre>
       */
      public int getEffectiveTime() {
        return effectiveTime_;
      }
      /**
       * <code>required int32 effectiveTime = 8;</code>
       *
       * <pre>
       * 效果时间
       * </pre>
       */
      public Builder setEffectiveTime(int value) {
        bitField0_ |= 0x00000080;
        effectiveTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 effectiveTime = 8;</code>
       *
       * <pre>
       * 效果时间
       * </pre>
       */
      public Builder clearEffectiveTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        effectiveTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 intervalTime = 9;
      private int intervalTime_ ;
      /**
       * <code>required int32 intervalTime = 9;</code>
       *
       * <pre>
       * 间隔时间
       * </pre>
       */
      public boolean hasIntervalTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 intervalTime = 9;</code>
       *
       * <pre>
       * 间隔时间
       * </pre>
       */
      public int getIntervalTime() {
        return intervalTime_;
      }
      /**
       * <code>required int32 intervalTime = 9;</code>
       *
       * <pre>
       * 间隔时间
       * </pre>
       */
      public Builder setIntervalTime(int value) {
        bitField0_ |= 0x00000100;
        intervalTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 intervalTime = 9;</code>
       *
       * <pre>
       * 间隔时间
       * </pre>
       */
      public Builder clearIntervalTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        intervalTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 priority = 10;
      private int priority_ ;
      /**
       * <code>required int32 priority = 10;</code>
       *
       * <pre>
       * 优先级
       * </pre>
       */
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 priority = 10;</code>
       *
       * <pre>
       * 优先级
       * </pre>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>required int32 priority = 10;</code>
       *
       * <pre>
       * 优先级
       * </pre>
       */
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000200;
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 priority = 10;</code>
       *
       * <pre>
       * 优先级
       * </pre>
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000200);
        priority_ = 0;
        onChanged();
        return this;
      }

      // required int32 disperse = 11;
      private int disperse_ ;
      /**
       * <code>required int32 disperse = 11;</code>
       *
       * <pre>
       * 驱散
       * </pre>
       */
      public boolean hasDisperse() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 disperse = 11;</code>
       *
       * <pre>
       * 驱散
       * </pre>
       */
      public int getDisperse() {
        return disperse_;
      }
      /**
       * <code>required int32 disperse = 11;</code>
       *
       * <pre>
       * 驱散
       * </pre>
       */
      public Builder setDisperse(int value) {
        bitField0_ |= 0x00000400;
        disperse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 disperse = 11;</code>
       *
       * <pre>
       * 驱散
       * </pre>
       */
      public Builder clearDisperse() {
        bitField0_ = (bitField0_ & ~0x00000400);
        disperse_ = 0;
        onChanged();
        return this;
      }

      // required int32 frameNum = 12;
      private int frameNum_ ;
      /**
       * <code>required int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public boolean hasFrameNum() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public int getFrameNum() {
        return frameNum_;
      }
      /**
       * <code>required int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public Builder setFrameNum(int value) {
        bitField0_ |= 0x00000800;
        frameNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 frameNum = 12;</code>
       *
       * <pre>
       * 帧数
       * </pre>
       */
      public Builder clearFrameNum() {
        bitField0_ = (bitField0_ & ~0x00000800);
        frameNum_ = 0;
        onChanged();
        return this;
      }

      // required int32 buffPosition = 13;
      private int buffPosition_ ;
      /**
       * <code>required int32 buffPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public boolean hasBuffPosition() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 buffPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public int getBuffPosition() {
        return buffPosition_;
      }
      /**
       * <code>required int32 buffPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public Builder setBuffPosition(int value) {
        bitField0_ |= 0x00001000;
        buffPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 buffPosition = 13;</code>
       *
       * <pre>
       * 位置
       * </pre>
       */
      public Builder clearBuffPosition() {
        bitField0_ = (bitField0_ & ~0x00001000);
        buffPosition_ = 0;
        onChanged();
        return this;
      }

      // required int32 playType = 14;
      private int playType_ ;
      /**
       * <code>required int32 playType = 14;</code>
       *
       * <pre>
       * 播放亏则
       * </pre>
       */
      public boolean hasPlayType() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 playType = 14;</code>
       *
       * <pre>
       * 播放亏则
       * </pre>
       */
      public int getPlayType() {
        return playType_;
      }
      /**
       * <code>required int32 playType = 14;</code>
       *
       * <pre>
       * 播放亏则
       * </pre>
       */
      public Builder setPlayType(int value) {
        bitField0_ |= 0x00002000;
        playType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 playType = 14;</code>
       *
       * <pre>
       * 播放亏则
       * </pre>
       */
      public Builder clearPlayType() {
        bitField0_ = (bitField0_ & ~0x00002000);
        playType_ = 0;
        onChanged();
        return this;
      }

      // required string icon = 15;
      private java.lang.Object icon_ = "";
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00004000);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>required string icon = 15;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        icon_ = value;
        onChanged();
        return this;
      }

      // required string visualEffects = 16;
      private java.lang.Object visualEffects_ = "";
      /**
       * <code>required string visualEffects = 16;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public boolean hasVisualEffects() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required string visualEffects = 16;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public java.lang.String getVisualEffects() {
        java.lang.Object ref = visualEffects_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          visualEffects_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string visualEffects = 16;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVisualEffectsBytes() {
        java.lang.Object ref = visualEffects_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          visualEffects_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string visualEffects = 16;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public Builder setVisualEffects(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        visualEffects_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string visualEffects = 16;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public Builder clearVisualEffects() {
        bitField0_ = (bitField0_ & ~0x00008000);
        visualEffects_ = getDefaultInstance().getVisualEffects();
        onChanged();
        return this;
      }
      /**
       * <code>required string visualEffects = 16;</code>
       *
       * <pre>
       * 视觉效果
       * </pre>
       */
      public Builder setVisualEffectsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        visualEffects_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Buff)
    }

    static {
      defaultInstance = new Buff(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Buff)
  }

  public interface TrapOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    int getType();

    // required int32 buffOrDebuff = 3;
    /**
     * <code>required int32 buffOrDebuff = 3;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    boolean hasBuffOrDebuff();
    /**
     * <code>required int32 buffOrDebuff = 3;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    int getBuffOrDebuff();

    // repeated int32 damageAmountList = 4;
    /**
     * <code>repeated int32 damageAmountList = 4;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    java.util.List<java.lang.Integer> getDamageAmountListList();
    /**
     * <code>repeated int32 damageAmountList = 4;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    int getDamageAmountListCount();
    /**
     * <code>repeated int32 damageAmountList = 4;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    int getDamageAmountList(int index);

    // required int32 valueType = 5;
    /**
     * <code>required int32 valueType = 5;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    boolean hasValueType();
    /**
     * <code>required int32 valueType = 5;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    int getValueType();

    // required int32 effectiveTime = 6;
    /**
     * <code>required int32 effectiveTime = 6;</code>
     *
     * <pre>
     * 效果时间
     * </pre>
     */
    boolean hasEffectiveTime();
    /**
     * <code>required int32 effectiveTime = 6;</code>
     *
     * <pre>
     * 效果时间
     * </pre>
     */
    int getEffectiveTime();

    // required int32 intervalTime = 7;
    /**
     * <code>required int32 intervalTime = 7;</code>
     *
     * <pre>
     * 间隔时间
     * </pre>
     */
    boolean hasIntervalTime();
    /**
     * <code>required int32 intervalTime = 7;</code>
     *
     * <pre>
     * 间隔时间
     * </pre>
     */
    int getIntervalTime();

    // repeated int32 incidentalBuffList = 8;
    /**
     * <code>repeated int32 incidentalBuffList = 8;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    java.util.List<java.lang.Integer> getIncidentalBuffListList();
    /**
     * <code>repeated int32 incidentalBuffList = 8;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    int getIncidentalBuffListCount();
    /**
     * <code>repeated int32 incidentalBuffList = 8;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    int getIncidentalBuffList(int index);
  }
  /**
   * Protobuf type {@code Trap}
   */
  public static final class Trap extends
      com.google.protobuf.GeneratedMessage
      implements TrapOrBuilder {
    // Use Trap.newBuilder() to construct.
    private Trap(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Trap(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Trap defaultInstance;
    public static Trap getDefaultInstance() {
      return defaultInstance;
    }

    public Trap getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Trap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              buffOrDebuff_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                damageAmountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              damageAmountList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                damageAmountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                damageAmountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              valueType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              effectiveTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              intervalTime_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                incidentalBuffList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              incidentalBuffList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                incidentalBuffList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                incidentalBuffList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          damageAmountList_ = java.util.Collections.unmodifiableList(damageAmountList_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          incidentalBuffList_ = java.util.Collections.unmodifiableList(incidentalBuffList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Trap_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Trap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.SkillProbuf.Trap.class, com.cwa.prototype.protobuf.SkillProbuf.Trap.Builder.class);
    }

    public static com.google.protobuf.Parser<Trap> PARSER =
        new com.google.protobuf.AbstractParser<Trap>() {
      public Trap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Trap(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Trap> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 buffOrDebuff = 3;
    public static final int BUFFORDEBUFF_FIELD_NUMBER = 3;
    private int buffOrDebuff_;
    /**
     * <code>required int32 buffOrDebuff = 3;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    public boolean hasBuffOrDebuff() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 buffOrDebuff = 3;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    public int getBuffOrDebuff() {
      return buffOrDebuff_;
    }

    // repeated int32 damageAmountList = 4;
    public static final int DAMAGEAMOUNTLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> damageAmountList_;
    /**
     * <code>repeated int32 damageAmountList = 4;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDamageAmountListList() {
      return damageAmountList_;
    }
    /**
     * <code>repeated int32 damageAmountList = 4;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public int getDamageAmountListCount() {
      return damageAmountList_.size();
    }
    /**
     * <code>repeated int32 damageAmountList = 4;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public int getDamageAmountList(int index) {
      return damageAmountList_.get(index);
    }

    // required int32 valueType = 5;
    public static final int VALUETYPE_FIELD_NUMBER = 5;
    private int valueType_;
    /**
     * <code>required int32 valueType = 5;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 valueType = 5;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    public int getValueType() {
      return valueType_;
    }

    // required int32 effectiveTime = 6;
    public static final int EFFECTIVETIME_FIELD_NUMBER = 6;
    private int effectiveTime_;
    /**
     * <code>required int32 effectiveTime = 6;</code>
     *
     * <pre>
     * 效果时间
     * </pre>
     */
    public boolean hasEffectiveTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 effectiveTime = 6;</code>
     *
     * <pre>
     * 效果时间
     * </pre>
     */
    public int getEffectiveTime() {
      return effectiveTime_;
    }

    // required int32 intervalTime = 7;
    public static final int INTERVALTIME_FIELD_NUMBER = 7;
    private int intervalTime_;
    /**
     * <code>required int32 intervalTime = 7;</code>
     *
     * <pre>
     * 间隔时间
     * </pre>
     */
    public boolean hasIntervalTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 intervalTime = 7;</code>
     *
     * <pre>
     * 间隔时间
     * </pre>
     */
    public int getIntervalTime() {
      return intervalTime_;
    }

    // repeated int32 incidentalBuffList = 8;
    public static final int INCIDENTALBUFFLIST_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> incidentalBuffList_;
    /**
     * <code>repeated int32 incidentalBuffList = 8;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIncidentalBuffListList() {
      return incidentalBuffList_;
    }
    /**
     * <code>repeated int32 incidentalBuffList = 8;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    public int getIncidentalBuffListCount() {
      return incidentalBuffList_.size();
    }
    /**
     * <code>repeated int32 incidentalBuffList = 8;</code>
     *
     * <pre>
     * 附带BUFF
     * </pre>
     */
    public int getIncidentalBuffList(int index) {
      return incidentalBuffList_.get(index);
    }

    private void initFields() {
      keyId_ = 0;
      type_ = 0;
      buffOrDebuff_ = 0;
      damageAmountList_ = java.util.Collections.emptyList();
      valueType_ = 0;
      effectiveTime_ = 0;
      intervalTime_ = 0;
      incidentalBuffList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBuffOrDebuff()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValueType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEffectiveTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntervalTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, buffOrDebuff_);
      }
      for (int i = 0; i < damageAmountList_.size(); i++) {
        output.writeInt32(4, damageAmountList_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, valueType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, effectiveTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, intervalTime_);
      }
      for (int i = 0; i < incidentalBuffList_.size(); i++) {
        output.writeInt32(8, incidentalBuffList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, buffOrDebuff_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < damageAmountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(damageAmountList_.get(i));
        }
        size += dataSize;
        size += 1 * getDamageAmountListList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, valueType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, effectiveTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, intervalTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < incidentalBuffList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(incidentalBuffList_.get(i));
        }
        size += dataSize;
        size += 1 * getIncidentalBuffListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.Trap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.SkillProbuf.Trap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Trap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.SkillProbuf.TrapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Trap_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Trap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.SkillProbuf.Trap.class, com.cwa.prototype.protobuf.SkillProbuf.Trap.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.SkillProbuf.Trap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        buffOrDebuff_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        damageAmountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        valueType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        effectiveTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        intervalTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        incidentalBuffList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_Trap_descriptor;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Trap getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.Trap.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Trap build() {
        com.cwa.prototype.protobuf.SkillProbuf.Trap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.Trap buildPartial() {
        com.cwa.prototype.protobuf.SkillProbuf.Trap result = new com.cwa.prototype.protobuf.SkillProbuf.Trap(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.buffOrDebuff_ = buffOrDebuff_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          damageAmountList_ = java.util.Collections.unmodifiableList(damageAmountList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.damageAmountList_ = damageAmountList_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.effectiveTime_ = effectiveTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.intervalTime_ = intervalTime_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          incidentalBuffList_ = java.util.Collections.unmodifiableList(incidentalBuffList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.incidentalBuffList_ = incidentalBuffList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.SkillProbuf.Trap) {
          return mergeFrom((com.cwa.prototype.protobuf.SkillProbuf.Trap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.SkillProbuf.Trap other) {
        if (other == com.cwa.prototype.protobuf.SkillProbuf.Trap.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBuffOrDebuff()) {
          setBuffOrDebuff(other.getBuffOrDebuff());
        }
        if (!other.damageAmountList_.isEmpty()) {
          if (damageAmountList_.isEmpty()) {
            damageAmountList_ = other.damageAmountList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDamageAmountListIsMutable();
            damageAmountList_.addAll(other.damageAmountList_);
          }
          onChanged();
        }
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasEffectiveTime()) {
          setEffectiveTime(other.getEffectiveTime());
        }
        if (other.hasIntervalTime()) {
          setIntervalTime(other.getIntervalTime());
        }
        if (!other.incidentalBuffList_.isEmpty()) {
          if (incidentalBuffList_.isEmpty()) {
            incidentalBuffList_ = other.incidentalBuffList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureIncidentalBuffListIsMutable();
            incidentalBuffList_.addAll(other.incidentalBuffList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasBuffOrDebuff()) {
          
          return false;
        }
        if (!hasValueType()) {
          
          return false;
        }
        if (!hasEffectiveTime()) {
          
          return false;
        }
        if (!hasIntervalTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.SkillProbuf.Trap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.SkillProbuf.Trap) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 buffOrDebuff = 3;
      private int buffOrDebuff_ ;
      /**
       * <code>required int32 buffOrDebuff = 3;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public boolean hasBuffOrDebuff() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 buffOrDebuff = 3;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public int getBuffOrDebuff() {
        return buffOrDebuff_;
      }
      /**
       * <code>required int32 buffOrDebuff = 3;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public Builder setBuffOrDebuff(int value) {
        bitField0_ |= 0x00000004;
        buffOrDebuff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 buffOrDebuff = 3;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public Builder clearBuffOrDebuff() {
        bitField0_ = (bitField0_ & ~0x00000004);
        buffOrDebuff_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 damageAmountList = 4;
      private java.util.List<java.lang.Integer> damageAmountList_ = java.util.Collections.emptyList();
      private void ensureDamageAmountListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          damageAmountList_ = new java.util.ArrayList<java.lang.Integer>(damageAmountList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 damageAmountList = 4;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDamageAmountListList() {
        return java.util.Collections.unmodifiableList(damageAmountList_);
      }
      /**
       * <code>repeated int32 damageAmountList = 4;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public int getDamageAmountListCount() {
        return damageAmountList_.size();
      }
      /**
       * <code>repeated int32 damageAmountList = 4;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public int getDamageAmountList(int index) {
        return damageAmountList_.get(index);
      }
      /**
       * <code>repeated int32 damageAmountList = 4;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder setDamageAmountList(
          int index, int value) {
        ensureDamageAmountListIsMutable();
        damageAmountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 damageAmountList = 4;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder addDamageAmountList(int value) {
        ensureDamageAmountListIsMutable();
        damageAmountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 damageAmountList = 4;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder addAllDamageAmountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDamageAmountListIsMutable();
        super.addAll(values, damageAmountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 damageAmountList = 4;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder clearDamageAmountList() {
        damageAmountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // required int32 valueType = 5;
      private int valueType_ ;
      /**
       * <code>required int32 valueType = 5;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 valueType = 5;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public int getValueType() {
        return valueType_;
      }
      /**
       * <code>required int32 valueType = 5;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public Builder setValueType(int value) {
        bitField0_ |= 0x00000010;
        valueType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 valueType = 5;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        valueType_ = 0;
        onChanged();
        return this;
      }

      // required int32 effectiveTime = 6;
      private int effectiveTime_ ;
      /**
       * <code>required int32 effectiveTime = 6;</code>
       *
       * <pre>
       * 效果时间
       * </pre>
       */
      public boolean hasEffectiveTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 effectiveTime = 6;</code>
       *
       * <pre>
       * 效果时间
       * </pre>
       */
      public int getEffectiveTime() {
        return effectiveTime_;
      }
      /**
       * <code>required int32 effectiveTime = 6;</code>
       *
       * <pre>
       * 效果时间
       * </pre>
       */
      public Builder setEffectiveTime(int value) {
        bitField0_ |= 0x00000020;
        effectiveTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 effectiveTime = 6;</code>
       *
       * <pre>
       * 效果时间
       * </pre>
       */
      public Builder clearEffectiveTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        effectiveTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 intervalTime = 7;
      private int intervalTime_ ;
      /**
       * <code>required int32 intervalTime = 7;</code>
       *
       * <pre>
       * 间隔时间
       * </pre>
       */
      public boolean hasIntervalTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 intervalTime = 7;</code>
       *
       * <pre>
       * 间隔时间
       * </pre>
       */
      public int getIntervalTime() {
        return intervalTime_;
      }
      /**
       * <code>required int32 intervalTime = 7;</code>
       *
       * <pre>
       * 间隔时间
       * </pre>
       */
      public Builder setIntervalTime(int value) {
        bitField0_ |= 0x00000040;
        intervalTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 intervalTime = 7;</code>
       *
       * <pre>
       * 间隔时间
       * </pre>
       */
      public Builder clearIntervalTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        intervalTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 incidentalBuffList = 8;
      private java.util.List<java.lang.Integer> incidentalBuffList_ = java.util.Collections.emptyList();
      private void ensureIncidentalBuffListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          incidentalBuffList_ = new java.util.ArrayList<java.lang.Integer>(incidentalBuffList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 incidentalBuffList = 8;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIncidentalBuffListList() {
        return java.util.Collections.unmodifiableList(incidentalBuffList_);
      }
      /**
       * <code>repeated int32 incidentalBuffList = 8;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public int getIncidentalBuffListCount() {
        return incidentalBuffList_.size();
      }
      /**
       * <code>repeated int32 incidentalBuffList = 8;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public int getIncidentalBuffList(int index) {
        return incidentalBuffList_.get(index);
      }
      /**
       * <code>repeated int32 incidentalBuffList = 8;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public Builder setIncidentalBuffList(
          int index, int value) {
        ensureIncidentalBuffListIsMutable();
        incidentalBuffList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 incidentalBuffList = 8;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public Builder addIncidentalBuffList(int value) {
        ensureIncidentalBuffListIsMutable();
        incidentalBuffList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 incidentalBuffList = 8;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public Builder addAllIncidentalBuffList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIncidentalBuffListIsMutable();
        super.addAll(values, incidentalBuffList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 incidentalBuffList = 8;</code>
       *
       * <pre>
       * 附带BUFF
       * </pre>
       */
      public Builder clearIncidentalBuffList() {
        incidentalBuffList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Trap)
    }

    static {
      defaultInstance = new Trap(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Trap)
  }

  public interface PassiveSkillOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string desc = 3;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // required int32 type = 4;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    int getType();

    // required int32 buffOrDebuff = 5;
    /**
     * <code>required int32 buffOrDebuff = 5;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    boolean hasBuffOrDebuff();
    /**
     * <code>required int32 buffOrDebuff = 5;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    int getBuffOrDebuff();

    // required string effectionTypeLists = 6;
    /**
     * <code>required string effectionTypeLists = 6;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    boolean hasEffectionTypeLists();
    /**
     * <code>required string effectionTypeLists = 6;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    java.lang.String getEffectionTypeLists();
    /**
     * <code>required string effectionTypeLists = 6;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    com.google.protobuf.ByteString
        getEffectionTypeListsBytes();

    // required string damageAmountLists = 7;
    /**
     * <code>required string damageAmountLists = 7;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    boolean hasDamageAmountLists();
    /**
     * <code>required string damageAmountLists = 7;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    java.lang.String getDamageAmountLists();
    /**
     * <code>required string damageAmountLists = 7;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    com.google.protobuf.ByteString
        getDamageAmountListsBytes();

    // required int32 valueType = 8;
    /**
     * <code>required int32 valueType = 8;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    boolean hasValueType();
    /**
     * <code>required int32 valueType = 8;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    int getValueType();

    // required string icon = 9;
    /**
     * <code>required string icon = 9;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    boolean hasIcon();
    /**
     * <code>required string icon = 9;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    java.lang.String getIcon();
    /**
     * <code>required string icon = 9;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    com.google.protobuf.ByteString
        getIconBytes();
  }
  /**
   * Protobuf type {@code PassiveSkill}
   */
  public static final class PassiveSkill extends
      com.google.protobuf.GeneratedMessage
      implements PassiveSkillOrBuilder {
    // Use PassiveSkill.newBuilder() to construct.
    private PassiveSkill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PassiveSkill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PassiveSkill defaultInstance;
    public static PassiveSkill getDefaultInstance() {
      return defaultInstance;
    }

    public PassiveSkill getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PassiveSkill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              desc_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              buffOrDebuff_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              effectionTypeLists_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              damageAmountLists_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              valueType_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              icon_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_PassiveSkill_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.SkillProbuf.internal_static_PassiveSkill_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill.class, com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill.Builder.class);
    }

    public static com.google.protobuf.Parser<PassiveSkill> PARSER =
        new com.google.protobuf.AbstractParser<PassiveSkill>() {
      public PassiveSkill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PassiveSkill(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PassiveSkill> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string desc = 3;
    public static final int DESC_FIELD_NUMBER = 3;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 buffOrDebuff = 5;
    public static final int BUFFORDEBUFF_FIELD_NUMBER = 5;
    private int buffOrDebuff_;
    /**
     * <code>required int32 buffOrDebuff = 5;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    public boolean hasBuffOrDebuff() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 buffOrDebuff = 5;</code>
     *
     * <pre>
     * 增减益
     * </pre>
     */
    public int getBuffOrDebuff() {
      return buffOrDebuff_;
    }

    // required string effectionTypeLists = 6;
    public static final int EFFECTIONTYPELISTS_FIELD_NUMBER = 6;
    private java.lang.Object effectionTypeLists_;
    /**
     * <code>required string effectionTypeLists = 6;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    public boolean hasEffectionTypeLists() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string effectionTypeLists = 6;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    public java.lang.String getEffectionTypeLists() {
      java.lang.Object ref = effectionTypeLists_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          effectionTypeLists_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string effectionTypeLists = 6;</code>
     *
     * <pre>
     * 作用类型
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEffectionTypeListsBytes() {
      java.lang.Object ref = effectionTypeLists_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        effectionTypeLists_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string damageAmountLists = 7;
    public static final int DAMAGEAMOUNTLISTS_FIELD_NUMBER = 7;
    private java.lang.Object damageAmountLists_;
    /**
     * <code>required string damageAmountLists = 7;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public boolean hasDamageAmountLists() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required string damageAmountLists = 7;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public java.lang.String getDamageAmountLists() {
      java.lang.Object ref = damageAmountLists_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          damageAmountLists_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string damageAmountLists = 7;</code>
     *
     * <pre>
     * 作用量
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDamageAmountListsBytes() {
      java.lang.Object ref = damageAmountLists_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        damageAmountLists_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 valueType = 8;
    public static final int VALUETYPE_FIELD_NUMBER = 8;
    private int valueType_;
    /**
     * <code>required int32 valueType = 8;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 valueType = 8;</code>
     *
     * <pre>
     * 数值类型
     * </pre>
     */
    public int getValueType() {
      return valueType_;
    }

    // required string icon = 9;
    public static final int ICON_FIELD_NUMBER = 9;
    private java.lang.Object icon_;
    /**
     * <code>required string icon = 9;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required string icon = 9;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string icon = 9;</code>
     *
     * <pre>
     * ICON
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      desc_ = "";
      type_ = 0;
      buffOrDebuff_ = 0;
      effectionTypeLists_ = "";
      damageAmountLists_ = "";
      valueType_ = 0;
      icon_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBuffOrDebuff()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEffectionTypeLists()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDamageAmountLists()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValueType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIcon()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, buffOrDebuff_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getEffectionTypeListsBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getDamageAmountListsBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, valueType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getIconBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, buffOrDebuff_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getEffectionTypeListsBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getDamageAmountListsBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, valueType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getIconBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PassiveSkill}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.SkillProbuf.PassiveSkillOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_PassiveSkill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_PassiveSkill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill.class, com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        buffOrDebuff_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        effectionTypeLists_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        damageAmountLists_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        valueType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.internal_static_PassiveSkill_descriptor;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill build() {
        com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill buildPartial() {
        com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill result = new com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.buffOrDebuff_ = buffOrDebuff_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.effectionTypeLists_ = effectionTypeLists_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.damageAmountLists_ = damageAmountLists_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.icon_ = icon_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill) {
          return mergeFrom((com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill other) {
        if (other == com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000004;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBuffOrDebuff()) {
          setBuffOrDebuff(other.getBuffOrDebuff());
        }
        if (other.hasEffectionTypeLists()) {
          bitField0_ |= 0x00000020;
          effectionTypeLists_ = other.effectionTypeLists_;
          onChanged();
        }
        if (other.hasDamageAmountLists()) {
          bitField0_ |= 0x00000040;
          damageAmountLists_ = other.damageAmountLists_;
          onChanged();
        }
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00000100;
          icon_ = other.icon_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasBuffOrDebuff()) {
          
          return false;
        }
        if (!hasEffectionTypeLists()) {
          
          return false;
        }
        if (!hasDamageAmountLists()) {
          
          return false;
        }
        if (!hasValueType()) {
          
          return false;
        }
        if (!hasIcon()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.SkillProbuf.PassiveSkill) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string desc = 3;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 描述
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }

      // required int32 type = 4;
      private int type_ ;
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 buffOrDebuff = 5;
      private int buffOrDebuff_ ;
      /**
       * <code>required int32 buffOrDebuff = 5;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public boolean hasBuffOrDebuff() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 buffOrDebuff = 5;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public int getBuffOrDebuff() {
        return buffOrDebuff_;
      }
      /**
       * <code>required int32 buffOrDebuff = 5;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public Builder setBuffOrDebuff(int value) {
        bitField0_ |= 0x00000010;
        buffOrDebuff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 buffOrDebuff = 5;</code>
       *
       * <pre>
       * 增减益
       * </pre>
       */
      public Builder clearBuffOrDebuff() {
        bitField0_ = (bitField0_ & ~0x00000010);
        buffOrDebuff_ = 0;
        onChanged();
        return this;
      }

      // required string effectionTypeLists = 6;
      private java.lang.Object effectionTypeLists_ = "";
      /**
       * <code>required string effectionTypeLists = 6;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public boolean hasEffectionTypeLists() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string effectionTypeLists = 6;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public java.lang.String getEffectionTypeLists() {
        java.lang.Object ref = effectionTypeLists_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          effectionTypeLists_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string effectionTypeLists = 6;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEffectionTypeListsBytes() {
        java.lang.Object ref = effectionTypeLists_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          effectionTypeLists_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string effectionTypeLists = 6;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public Builder setEffectionTypeLists(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        effectionTypeLists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string effectionTypeLists = 6;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public Builder clearEffectionTypeLists() {
        bitField0_ = (bitField0_ & ~0x00000020);
        effectionTypeLists_ = getDefaultInstance().getEffectionTypeLists();
        onChanged();
        return this;
      }
      /**
       * <code>required string effectionTypeLists = 6;</code>
       *
       * <pre>
       * 作用类型
       * </pre>
       */
      public Builder setEffectionTypeListsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        effectionTypeLists_ = value;
        onChanged();
        return this;
      }

      // required string damageAmountLists = 7;
      private java.lang.Object damageAmountLists_ = "";
      /**
       * <code>required string damageAmountLists = 7;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public boolean hasDamageAmountLists() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required string damageAmountLists = 7;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public java.lang.String getDamageAmountLists() {
        java.lang.Object ref = damageAmountLists_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          damageAmountLists_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string damageAmountLists = 7;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDamageAmountListsBytes() {
        java.lang.Object ref = damageAmountLists_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          damageAmountLists_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string damageAmountLists = 7;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder setDamageAmountLists(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        damageAmountLists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string damageAmountLists = 7;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder clearDamageAmountLists() {
        bitField0_ = (bitField0_ & ~0x00000040);
        damageAmountLists_ = getDefaultInstance().getDamageAmountLists();
        onChanged();
        return this;
      }
      /**
       * <code>required string damageAmountLists = 7;</code>
       *
       * <pre>
       * 作用量
       * </pre>
       */
      public Builder setDamageAmountListsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        damageAmountLists_ = value;
        onChanged();
        return this;
      }

      // required int32 valueType = 8;
      private int valueType_ ;
      /**
       * <code>required int32 valueType = 8;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 valueType = 8;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public int getValueType() {
        return valueType_;
      }
      /**
       * <code>required int32 valueType = 8;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public Builder setValueType(int value) {
        bitField0_ |= 0x00000080;
        valueType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 valueType = 8;</code>
       *
       * <pre>
       * 数值类型
       * </pre>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        valueType_ = 0;
        onChanged();
        return this;
      }

      // required string icon = 9;
      private java.lang.Object icon_ = "";
      /**
       * <code>required string icon = 9;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required string icon = 9;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string icon = 9;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string icon = 9;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string icon = 9;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00000100);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>required string icon = 9;</code>
       *
       * <pre>
       * ICON
       * </pre>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        icon_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PassiveSkill)
    }

    static {
      defaultInstance = new PassiveSkill(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PassiveSkill)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Skill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Skill_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Effect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Effect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Buff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Buff_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Trap_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Trap_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PassiveSkill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PassiveSkill_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021SkillProbuf.proto\"\266\002\n\005Skill\022\r\n\005keyId\030\001" +
      " \002(\005\022\014\n\004name\030\002 \002(\t\022\020\n\010describe\030\003 \002(\t\022\030\n\020" +
      "shootingDistance\030\004 \002(\005\022\023\n\013releaseType\030\005 " +
      "\002(\005\022\023\n\013releaseRule\030\006 \002(\005\022\016\n\006cdTime\030\007 \002(\005" +
      "\022\016\n\006mpList\030\010 \003(\005\022\020\n\010elements\030\t \002(\005\022\035\n\025in" +
      "cidentalEffectLists\030\n \002(\t\022\024\n\014playSequenc" +
      "e\030\013 \002(\005\022\024\n\014commonAttack\030\014 \002(\005\022\r\n\005count\030\r" +
      " \002(\005\022\014\n\004type\030\016 \002(\005\022\014\n\004icon\030\017 \002(\t\022\022\n\nacti" +
      "onTime\030\020 \002(\005\"\240\002\n\006Effect\022\r\n\005keyId\030\001 \002(\005\022\014" +
      "\n\004name\030\002 \002(\t\022\017\n\007element\030\003 \002(\005\022\014\n\004type\030\004 ",
      "\002(\005\022\022\n\ntargetRule\030\005 \002(\005\022\r\n\005range\030\006 \002(\005\022\020" +
      "\n\010flySpeed\030\007 \002(\005\022\020\n\010rateList\030\010 \003(\005\022\033\n\023in" +
      "cidentalParamList\030\t \003(\005\022\026\n\016summonHeroLis" +
      "t\030\n \003(\005\022\035\n\025summonProbabilityList\030\013 \003(\005\022\020" +
      "\n\010frameNum\030\014 \003(\005\022\026\n\016effectPosition\030\r \003(\005" +
      "\022\025\n\rvisualEffects\030\016 \003(\t\"\277\002\n\004Buff\022\r\n\005keyI" +
      "d\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\024\n\014buffOrDebuff\030\003 " +
      "\002(\005\022\014\n\004rate\030\004 \002(\005\022\031\n\021effectionTypeList\030\005" +
      " \003(\005\022\030\n\020damageAmountList\030\006 \003(\005\022\021\n\tvalueT" +
      "ype\030\007 \002(\005\022\025\n\reffectiveTime\030\010 \002(\005\022\024\n\014inte",
      "rvalTime\030\t \002(\005\022\020\n\010priority\030\n \002(\005\022\020\n\010disp" +
      "erse\030\013 \002(\005\022\020\n\010frameNum\030\014 \002(\005\022\024\n\014buffPosi" +
      "tion\030\r \002(\005\022\020\n\010playType\030\016 \002(\005\022\014\n\004icon\030\017 \002" +
      "(\t\022\025\n\rvisualEffects\030\020 \002(\t\"\257\001\n\004Trap\022\r\n\005ke" +
      "yId\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\024\n\014buffOrDebuff\030" +
      "\003 \002(\005\022\030\n\020damageAmountList\030\004 \003(\005\022\021\n\tvalue" +
      "Type\030\005 \002(\005\022\025\n\reffectiveTime\030\006 \002(\005\022\024\n\014int" +
      "ervalTime\030\007 \002(\005\022\032\n\022incidentalBuffList\030\010 " +
      "\003(\005\"\265\001\n\014PassiveSkill\022\r\n\005keyId\030\001 \002(\005\022\014\n\004n" +
      "ame\030\002 \002(\t\022\014\n\004desc\030\003 \002(\t\022\014\n\004type\030\004 \002(\005\022\024\n",
      "\014buffOrDebuff\030\005 \002(\005\022\032\n\022effectionTypeList" +
      "s\030\006 \002(\t\022\031\n\021damageAmountLists\030\007 \002(\t\022\021\n\tva" +
      "lueType\030\010 \002(\005\022\014\n\004icon\030\t \002(\tB)\n\032com.cwa.p" +
      "rototype.protobufB\013SkillProbuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Skill_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Skill_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Skill_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Describe", "ShootingDistance", "ReleaseType", "ReleaseRule", "CdTime", "MpList", "Elements", "IncidentalEffectLists", "PlaySequence", "CommonAttack", "Count", "Type", "Icon", "ActionTime", });
          internal_static_Effect_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Effect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Effect_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Element", "Type", "TargetRule", "Range", "FlySpeed", "RateList", "IncidentalParamList", "SummonHeroList", "SummonProbabilityList", "FrameNum", "EffectPosition", "VisualEffects", });
          internal_static_Buff_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Buff_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Buff_descriptor,
              new java.lang.String[] { "KeyId", "Type", "BuffOrDebuff", "Rate", "EffectionTypeList", "DamageAmountList", "ValueType", "EffectiveTime", "IntervalTime", "Priority", "Disperse", "FrameNum", "BuffPosition", "PlayType", "Icon", "VisualEffects", });
          internal_static_Trap_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_Trap_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Trap_descriptor,
              new java.lang.String[] { "KeyId", "Type", "BuffOrDebuff", "DamageAmountList", "ValueType", "EffectiveTime", "IntervalTime", "IncidentalBuffList", });
          internal_static_PassiveSkill_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_PassiveSkill_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PassiveSkill_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Desc", "Type", "BuffOrDebuff", "EffectionTypeLists", "DamageAmountLists", "ValueType", "Icon", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
