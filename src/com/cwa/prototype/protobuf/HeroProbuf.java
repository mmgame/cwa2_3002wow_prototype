// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HeroProbuf.proto

package com.cwa.prototype.protobuf;

public final class HeroProbuf {
  private HeroProbuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeroOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required string heroName = 2;
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    boolean hasHeroName();
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    java.lang.String getHeroName();
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeroNameBytes();

    // required int32 heroClass = 3;
    /**
     * <code>required int32 heroClass = 3;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    boolean hasHeroClass();
    /**
     * <code>required int32 heroClass = 3;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    int getHeroClass();

    // required int32 type = 4;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    int getType();

    // required string grade = 5;
    /**
     * <code>required string grade = 5;</code>
     *
     * <pre>
     * 档次
     * </pre>
     */
    boolean hasGrade();
    /**
     * <code>required string grade = 5;</code>
     *
     * <pre>
     * 档次
     * </pre>
     */
    java.lang.String getGrade();
    /**
     * <code>required string grade = 5;</code>
     *
     * <pre>
     * 档次
     * </pre>
     */
    com.google.protobuf.ByteString
        getGradeBytes();

    // required int32 heroSize = 6;
    /**
     * <code>required int32 heroSize = 6;</code>
     *
     * <pre>
     * 大小
     * </pre>
     */
    boolean hasHeroSize();
    /**
     * <code>required int32 heroSize = 6;</code>
     *
     * <pre>
     * 大小
     * </pre>
     */
    int getHeroSize();

    // required int32 requireItem = 7;
    /**
     * <code>required int32 requireItem = 7;</code>
     *
     * <pre>
     * 召唤需要道具
     * </pre>
     */
    boolean hasRequireItem();
    /**
     * <code>required int32 requireItem = 7;</code>
     *
     * <pre>
     * 召唤需要道具
     * </pre>
     */
    int getRequireItem();

    // required int32 itemCount = 8;
    /**
     * <code>required int32 itemCount = 8;</code>
     *
     * <pre>
     * 召唤需要个数
     * </pre>
     */
    boolean hasItemCount();
    /**
     * <code>required int32 itemCount = 8;</code>
     *
     * <pre>
     * 召唤需要个数
     * </pre>
     */
    int getItemCount();

    // repeated int32 equipmentList = 9;
    /**
     * <code>repeated int32 equipmentList = 9;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    java.util.List<java.lang.Integer> getEquipmentListList();
    /**
     * <code>repeated int32 equipmentList = 9;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    int getEquipmentListCount();
    /**
     * <code>repeated int32 equipmentList = 9;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    int getEquipmentList(int index);

    // required string resource = 10;
    /**
     * <code>required string resource = 10;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    boolean hasResource();
    /**
     * <code>required string resource = 10;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    java.lang.String getResource();
    /**
     * <code>required string resource = 10;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    com.google.protobuf.ByteString
        getResourceBytes();

    // repeated int32 effectTimeList = 11;
    /**
     * <code>repeated int32 effectTimeList = 11;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    java.util.List<java.lang.Integer> getEffectTimeListList();
    /**
     * <code>repeated int32 effectTimeList = 11;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    int getEffectTimeListCount();
    /**
     * <code>repeated int32 effectTimeList = 11;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    int getEffectTimeList(int index);

    // repeated int32 actionTimeList = 12;
    /**
     * <code>repeated int32 actionTimeList = 12;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    java.util.List<java.lang.Integer> getActionTimeListList();
    /**
     * <code>repeated int32 actionTimeList = 12;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    int getActionTimeListCount();
    /**
     * <code>repeated int32 actionTimeList = 12;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    int getActionTimeList(int index);

    // required int32 heroScale = 13;
    /**
     * <code>required int32 heroScale = 13;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    boolean hasHeroScale();
    /**
     * <code>required int32 heroScale = 13;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    int getHeroScale();
  }
  /**
   * Protobuf type {@code Hero}
   */
  public static final class Hero extends
      com.google.protobuf.GeneratedMessage
      implements HeroOrBuilder {
    // Use Hero.newBuilder() to construct.
    private Hero(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Hero(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Hero defaultInstance;
    public static Hero getDefaultInstance() {
      return defaultInstance;
    }

    public Hero getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Hero(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              heroName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              heroClass_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              grade_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              heroSize_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              requireItem_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              itemCount_ = input.readInt32();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                equipmentList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              equipmentList_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                equipmentList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                equipmentList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 82: {
              bitField0_ |= 0x00000100;
              resource_ = input.readBytes();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                effectTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              effectTimeList_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                effectTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                effectTimeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                actionTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              actionTimeList_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                actionTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                actionTimeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              heroScale_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          equipmentList_ = java.util.Collections.unmodifiableList(equipmentList_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          effectTimeList_ = java.util.Collections.unmodifiableList(effectTimeList_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          actionTimeList_ = java.util.Collections.unmodifiableList(actionTimeList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Hero_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Hero_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.HeroProbuf.Hero.class, com.cwa.prototype.protobuf.HeroProbuf.Hero.Builder.class);
    }

    public static com.google.protobuf.Parser<Hero> PARSER =
        new com.google.protobuf.AbstractParser<Hero>() {
      public Hero parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Hero(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Hero> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string heroName = 2;
    public static final int HERONAME_FIELD_NUMBER = 2;
    private java.lang.Object heroName_;
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public boolean hasHeroName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public java.lang.String getHeroName() {
      java.lang.Object ref = heroName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          heroName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeroNameBytes() {
      java.lang.Object ref = heroName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        heroName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 heroClass = 3;
    public static final int HEROCLASS_FIELD_NUMBER = 3;
    private int heroClass_;
    /**
     * <code>required int32 heroClass = 3;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    public boolean hasHeroClass() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 heroClass = 3;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    public int getHeroClass() {
      return heroClass_;
    }

    // required int32 type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required string grade = 5;
    public static final int GRADE_FIELD_NUMBER = 5;
    private java.lang.Object grade_;
    /**
     * <code>required string grade = 5;</code>
     *
     * <pre>
     * 档次
     * </pre>
     */
    public boolean hasGrade() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string grade = 5;</code>
     *
     * <pre>
     * 档次
     * </pre>
     */
    public java.lang.String getGrade() {
      java.lang.Object ref = grade_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          grade_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string grade = 5;</code>
     *
     * <pre>
     * 档次
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGradeBytes() {
      java.lang.Object ref = grade_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        grade_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 heroSize = 6;
    public static final int HEROSIZE_FIELD_NUMBER = 6;
    private int heroSize_;
    /**
     * <code>required int32 heroSize = 6;</code>
     *
     * <pre>
     * 大小
     * </pre>
     */
    public boolean hasHeroSize() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 heroSize = 6;</code>
     *
     * <pre>
     * 大小
     * </pre>
     */
    public int getHeroSize() {
      return heroSize_;
    }

    // required int32 requireItem = 7;
    public static final int REQUIREITEM_FIELD_NUMBER = 7;
    private int requireItem_;
    /**
     * <code>required int32 requireItem = 7;</code>
     *
     * <pre>
     * 召唤需要道具
     * </pre>
     */
    public boolean hasRequireItem() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 requireItem = 7;</code>
     *
     * <pre>
     * 召唤需要道具
     * </pre>
     */
    public int getRequireItem() {
      return requireItem_;
    }

    // required int32 itemCount = 8;
    public static final int ITEMCOUNT_FIELD_NUMBER = 8;
    private int itemCount_;
    /**
     * <code>required int32 itemCount = 8;</code>
     *
     * <pre>
     * 召唤需要个数
     * </pre>
     */
    public boolean hasItemCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 itemCount = 8;</code>
     *
     * <pre>
     * 召唤需要个数
     * </pre>
     */
    public int getItemCount() {
      return itemCount_;
    }

    // repeated int32 equipmentList = 9;
    public static final int EQUIPMENTLIST_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> equipmentList_;
    /**
     * <code>repeated int32 equipmentList = 9;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEquipmentListList() {
      return equipmentList_;
    }
    /**
     * <code>repeated int32 equipmentList = 9;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    public int getEquipmentListCount() {
      return equipmentList_.size();
    }
    /**
     * <code>repeated int32 equipmentList = 9;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    public int getEquipmentList(int index) {
      return equipmentList_.get(index);
    }

    // required string resource = 10;
    public static final int RESOURCE_FIELD_NUMBER = 10;
    private java.lang.Object resource_;
    /**
     * <code>required string resource = 10;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public boolean hasResource() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required string resource = 10;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public java.lang.String getResource() {
      java.lang.Object ref = resource_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resource_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string resource = 10;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public com.google.protobuf.ByteString
        getResourceBytes() {
      java.lang.Object ref = resource_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 effectTimeList = 11;
    public static final int EFFECTTIMELIST_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> effectTimeList_;
    /**
     * <code>repeated int32 effectTimeList = 11;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEffectTimeListList() {
      return effectTimeList_;
    }
    /**
     * <code>repeated int32 effectTimeList = 11;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public int getEffectTimeListCount() {
      return effectTimeList_.size();
    }
    /**
     * <code>repeated int32 effectTimeList = 11;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public int getEffectTimeList(int index) {
      return effectTimeList_.get(index);
    }

    // repeated int32 actionTimeList = 12;
    public static final int ACTIONTIMELIST_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> actionTimeList_;
    /**
     * <code>repeated int32 actionTimeList = 12;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getActionTimeListList() {
      return actionTimeList_;
    }
    /**
     * <code>repeated int32 actionTimeList = 12;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public int getActionTimeListCount() {
      return actionTimeList_.size();
    }
    /**
     * <code>repeated int32 actionTimeList = 12;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public int getActionTimeList(int index) {
      return actionTimeList_.get(index);
    }

    // required int32 heroScale = 13;
    public static final int HEROSCALE_FIELD_NUMBER = 13;
    private int heroScale_;
    /**
     * <code>required int32 heroScale = 13;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    public boolean hasHeroScale() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 heroScale = 13;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    public int getHeroScale() {
      return heroScale_;
    }

    private void initFields() {
      keyId_ = 0;
      heroName_ = "";
      heroClass_ = 0;
      type_ = 0;
      grade_ = "";
      heroSize_ = 0;
      requireItem_ = 0;
      itemCount_ = 0;
      equipmentList_ = java.util.Collections.emptyList();
      resource_ = "";
      effectTimeList_ = java.util.Collections.emptyList();
      actionTimeList_ = java.util.Collections.emptyList();
      heroScale_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroClass()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGrade()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireItem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResource()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getHeroNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, heroClass_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getGradeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, heroSize_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, requireItem_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, itemCount_);
      }
      for (int i = 0; i < equipmentList_.size(); i++) {
        output.writeInt32(9, equipmentList_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getResourceBytes());
      }
      for (int i = 0; i < effectTimeList_.size(); i++) {
        output.writeInt32(11, effectTimeList_.get(i));
      }
      for (int i = 0; i < actionTimeList_.size(); i++) {
        output.writeInt32(12, actionTimeList_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, heroScale_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getHeroNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, heroClass_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getGradeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, heroSize_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, requireItem_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, itemCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < equipmentList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(equipmentList_.get(i));
        }
        size += dataSize;
        size += 1 * getEquipmentListList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getResourceBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < effectTimeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(effectTimeList_.get(i));
        }
        size += dataSize;
        size += 1 * getEffectTimeListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actionTimeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actionTimeList_.get(i));
        }
        size += dataSize;
        size += 1 * getActionTimeListList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, heroScale_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Hero parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.HeroProbuf.Hero prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Hero}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.HeroProbuf.HeroOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Hero_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Hero_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.HeroProbuf.Hero.class, com.cwa.prototype.protobuf.HeroProbuf.Hero.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.HeroProbuf.Hero.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        heroName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        heroClass_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        grade_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        heroSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        requireItem_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        itemCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        equipmentList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        resource_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        effectTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        actionTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        heroScale_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Hero_descriptor;
      }

      public com.cwa.prototype.protobuf.HeroProbuf.Hero getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.HeroProbuf.Hero.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.HeroProbuf.Hero build() {
        com.cwa.prototype.protobuf.HeroProbuf.Hero result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.HeroProbuf.Hero buildPartial() {
        com.cwa.prototype.protobuf.HeroProbuf.Hero result = new com.cwa.prototype.protobuf.HeroProbuf.Hero(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heroName_ = heroName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.heroClass_ = heroClass_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.grade_ = grade_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.heroSize_ = heroSize_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.requireItem_ = requireItem_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.itemCount_ = itemCount_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          equipmentList_ = java.util.Collections.unmodifiableList(equipmentList_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.equipmentList_ = equipmentList_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.resource_ = resource_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          effectTimeList_ = java.util.Collections.unmodifiableList(effectTimeList_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.effectTimeList_ = effectTimeList_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          actionTimeList_ = java.util.Collections.unmodifiableList(actionTimeList_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.actionTimeList_ = actionTimeList_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.heroScale_ = heroScale_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.HeroProbuf.Hero) {
          return mergeFrom((com.cwa.prototype.protobuf.HeroProbuf.Hero)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.HeroProbuf.Hero other) {
        if (other == com.cwa.prototype.protobuf.HeroProbuf.Hero.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasHeroName()) {
          bitField0_ |= 0x00000002;
          heroName_ = other.heroName_;
          onChanged();
        }
        if (other.hasHeroClass()) {
          setHeroClass(other.getHeroClass());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasGrade()) {
          bitField0_ |= 0x00000010;
          grade_ = other.grade_;
          onChanged();
        }
        if (other.hasHeroSize()) {
          setHeroSize(other.getHeroSize());
        }
        if (other.hasRequireItem()) {
          setRequireItem(other.getRequireItem());
        }
        if (other.hasItemCount()) {
          setItemCount(other.getItemCount());
        }
        if (!other.equipmentList_.isEmpty()) {
          if (equipmentList_.isEmpty()) {
            equipmentList_ = other.equipmentList_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureEquipmentListIsMutable();
            equipmentList_.addAll(other.equipmentList_);
          }
          onChanged();
        }
        if (other.hasResource()) {
          bitField0_ |= 0x00000200;
          resource_ = other.resource_;
          onChanged();
        }
        if (!other.effectTimeList_.isEmpty()) {
          if (effectTimeList_.isEmpty()) {
            effectTimeList_ = other.effectTimeList_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureEffectTimeListIsMutable();
            effectTimeList_.addAll(other.effectTimeList_);
          }
          onChanged();
        }
        if (!other.actionTimeList_.isEmpty()) {
          if (actionTimeList_.isEmpty()) {
            actionTimeList_ = other.actionTimeList_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureActionTimeListIsMutable();
            actionTimeList_.addAll(other.actionTimeList_);
          }
          onChanged();
        }
        if (other.hasHeroScale()) {
          setHeroScale(other.getHeroScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasHeroName()) {
          
          return false;
        }
        if (!hasHeroClass()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasGrade()) {
          
          return false;
        }
        if (!hasHeroSize()) {
          
          return false;
        }
        if (!hasRequireItem()) {
          
          return false;
        }
        if (!hasItemCount()) {
          
          return false;
        }
        if (!hasResource()) {
          
          return false;
        }
        if (!hasHeroScale()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.HeroProbuf.Hero parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.HeroProbuf.Hero) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string heroName = 2;
      private java.lang.Object heroName_ = "";
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public boolean hasHeroName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public java.lang.String getHeroName() {
        java.lang.Object ref = heroName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          heroName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeroNameBytes() {
        java.lang.Object ref = heroName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          heroName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder setHeroName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        heroName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder clearHeroName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heroName_ = getDefaultInstance().getHeroName();
        onChanged();
        return this;
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder setHeroNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        heroName_ = value;
        onChanged();
        return this;
      }

      // required int32 heroClass = 3;
      private int heroClass_ ;
      /**
       * <code>required int32 heroClass = 3;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public boolean hasHeroClass() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 heroClass = 3;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public int getHeroClass() {
        return heroClass_;
      }
      /**
       * <code>required int32 heroClass = 3;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public Builder setHeroClass(int value) {
        bitField0_ |= 0x00000004;
        heroClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroClass = 3;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public Builder clearHeroClass() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heroClass_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 4;
      private int type_ ;
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        onChanged();
        return this;
      }

      // required string grade = 5;
      private java.lang.Object grade_ = "";
      /**
       * <code>required string grade = 5;</code>
       *
       * <pre>
       * 档次
       * </pre>
       */
      public boolean hasGrade() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string grade = 5;</code>
       *
       * <pre>
       * 档次
       * </pre>
       */
      public java.lang.String getGrade() {
        java.lang.Object ref = grade_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          grade_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string grade = 5;</code>
       *
       * <pre>
       * 档次
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGradeBytes() {
        java.lang.Object ref = grade_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          grade_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string grade = 5;</code>
       *
       * <pre>
       * 档次
       * </pre>
       */
      public Builder setGrade(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        grade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string grade = 5;</code>
       *
       * <pre>
       * 档次
       * </pre>
       */
      public Builder clearGrade() {
        bitField0_ = (bitField0_ & ~0x00000010);
        grade_ = getDefaultInstance().getGrade();
        onChanged();
        return this;
      }
      /**
       * <code>required string grade = 5;</code>
       *
       * <pre>
       * 档次
       * </pre>
       */
      public Builder setGradeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        grade_ = value;
        onChanged();
        return this;
      }

      // required int32 heroSize = 6;
      private int heroSize_ ;
      /**
       * <code>required int32 heroSize = 6;</code>
       *
       * <pre>
       * 大小
       * </pre>
       */
      public boolean hasHeroSize() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 heroSize = 6;</code>
       *
       * <pre>
       * 大小
       * </pre>
       */
      public int getHeroSize() {
        return heroSize_;
      }
      /**
       * <code>required int32 heroSize = 6;</code>
       *
       * <pre>
       * 大小
       * </pre>
       */
      public Builder setHeroSize(int value) {
        bitField0_ |= 0x00000020;
        heroSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroSize = 6;</code>
       *
       * <pre>
       * 大小
       * </pre>
       */
      public Builder clearHeroSize() {
        bitField0_ = (bitField0_ & ~0x00000020);
        heroSize_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireItem = 7;
      private int requireItem_ ;
      /**
       * <code>required int32 requireItem = 7;</code>
       *
       * <pre>
       * 召唤需要道具
       * </pre>
       */
      public boolean hasRequireItem() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 requireItem = 7;</code>
       *
       * <pre>
       * 召唤需要道具
       * </pre>
       */
      public int getRequireItem() {
        return requireItem_;
      }
      /**
       * <code>required int32 requireItem = 7;</code>
       *
       * <pre>
       * 召唤需要道具
       * </pre>
       */
      public Builder setRequireItem(int value) {
        bitField0_ |= 0x00000040;
        requireItem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireItem = 7;</code>
       *
       * <pre>
       * 召唤需要道具
       * </pre>
       */
      public Builder clearRequireItem() {
        bitField0_ = (bitField0_ & ~0x00000040);
        requireItem_ = 0;
        onChanged();
        return this;
      }

      // required int32 itemCount = 8;
      private int itemCount_ ;
      /**
       * <code>required int32 itemCount = 8;</code>
       *
       * <pre>
       * 召唤需要个数
       * </pre>
       */
      public boolean hasItemCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 itemCount = 8;</code>
       *
       * <pre>
       * 召唤需要个数
       * </pre>
       */
      public int getItemCount() {
        return itemCount_;
      }
      /**
       * <code>required int32 itemCount = 8;</code>
       *
       * <pre>
       * 召唤需要个数
       * </pre>
       */
      public Builder setItemCount(int value) {
        bitField0_ |= 0x00000080;
        itemCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemCount = 8;</code>
       *
       * <pre>
       * 召唤需要个数
       * </pre>
       */
      public Builder clearItemCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        itemCount_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 equipmentList = 9;
      private java.util.List<java.lang.Integer> equipmentList_ = java.util.Collections.emptyList();
      private void ensureEquipmentListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          equipmentList_ = new java.util.ArrayList<java.lang.Integer>(equipmentList_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 equipmentList = 9;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEquipmentListList() {
        return java.util.Collections.unmodifiableList(equipmentList_);
      }
      /**
       * <code>repeated int32 equipmentList = 9;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      public int getEquipmentListCount() {
        return equipmentList_.size();
      }
      /**
       * <code>repeated int32 equipmentList = 9;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      public int getEquipmentList(int index) {
        return equipmentList_.get(index);
      }
      /**
       * <code>repeated int32 equipmentList = 9;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      public Builder setEquipmentList(
          int index, int value) {
        ensureEquipmentListIsMutable();
        equipmentList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 equipmentList = 9;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      public Builder addEquipmentList(int value) {
        ensureEquipmentListIsMutable();
        equipmentList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 equipmentList = 9;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      public Builder addAllEquipmentList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEquipmentListIsMutable();
        super.addAll(values, equipmentList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 equipmentList = 9;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      public Builder clearEquipmentList() {
        equipmentList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // required string resource = 10;
      private java.lang.Object resource_ = "";
      /**
       * <code>required string resource = 10;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public boolean hasResource() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required string resource = 10;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public java.lang.String getResource() {
        java.lang.Object ref = resource_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          resource_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string resource = 10;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public com.google.protobuf.ByteString
          getResourceBytes() {
        java.lang.Object ref = resource_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resource_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string resource = 10;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder setResource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        resource_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string resource = 10;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder clearResource() {
        bitField0_ = (bitField0_ & ~0x00000200);
        resource_ = getDefaultInstance().getResource();
        onChanged();
        return this;
      }
      /**
       * <code>required string resource = 10;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder setResourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        resource_ = value;
        onChanged();
        return this;
      }

      // repeated int32 effectTimeList = 11;
      private java.util.List<java.lang.Integer> effectTimeList_ = java.util.Collections.emptyList();
      private void ensureEffectTimeListIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          effectTimeList_ = new java.util.ArrayList<java.lang.Integer>(effectTimeList_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 effectTimeList = 11;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEffectTimeListList() {
        return java.util.Collections.unmodifiableList(effectTimeList_);
      }
      /**
       * <code>repeated int32 effectTimeList = 11;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public int getEffectTimeListCount() {
        return effectTimeList_.size();
      }
      /**
       * <code>repeated int32 effectTimeList = 11;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public int getEffectTimeList(int index) {
        return effectTimeList_.get(index);
      }
      /**
       * <code>repeated int32 effectTimeList = 11;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder setEffectTimeList(
          int index, int value) {
        ensureEffectTimeListIsMutable();
        effectTimeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 11;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder addEffectTimeList(int value) {
        ensureEffectTimeListIsMutable();
        effectTimeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 11;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder addAllEffectTimeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEffectTimeListIsMutable();
        super.addAll(values, effectTimeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 11;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder clearEffectTimeList() {
        effectTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 actionTimeList = 12;
      private java.util.List<java.lang.Integer> actionTimeList_ = java.util.Collections.emptyList();
      private void ensureActionTimeListIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          actionTimeList_ = new java.util.ArrayList<java.lang.Integer>(actionTimeList_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 actionTimeList = 12;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getActionTimeListList() {
        return java.util.Collections.unmodifiableList(actionTimeList_);
      }
      /**
       * <code>repeated int32 actionTimeList = 12;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public int getActionTimeListCount() {
        return actionTimeList_.size();
      }
      /**
       * <code>repeated int32 actionTimeList = 12;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public int getActionTimeList(int index) {
        return actionTimeList_.get(index);
      }
      /**
       * <code>repeated int32 actionTimeList = 12;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder setActionTimeList(
          int index, int value) {
        ensureActionTimeListIsMutable();
        actionTimeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 12;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder addActionTimeList(int value) {
        ensureActionTimeListIsMutable();
        actionTimeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 12;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder addAllActionTimeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActionTimeListIsMutable();
        super.addAll(values, actionTimeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 12;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder clearActionTimeList() {
        actionTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // required int32 heroScale = 13;
      private int heroScale_ ;
      /**
       * <code>required int32 heroScale = 13;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public boolean hasHeroScale() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 heroScale = 13;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public int getHeroScale() {
        return heroScale_;
      }
      /**
       * <code>required int32 heroScale = 13;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public Builder setHeroScale(int value) {
        bitField0_ |= 0x00001000;
        heroScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroScale = 13;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public Builder clearHeroScale() {
        bitField0_ = (bitField0_ & ~0x00001000);
        heroScale_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Hero)
    }

    static {
      defaultInstance = new Hero(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Hero)
  }

  public interface HeroGradeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required int32 quality = 2;
    /**
     * <code>required int32 quality = 2;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    boolean hasQuality();
    /**
     * <code>required int32 quality = 2;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    int getQuality();

    // required int32 startLevel = 3;
    /**
     * <code>required int32 startLevel = 3;</code>
     *
     * <pre>
     * 星级
     * </pre>
     */
    boolean hasStartLevel();
    /**
     * <code>required int32 startLevel = 3;</code>
     *
     * <pre>
     * 星级
     * </pre>
     */
    int getStartLevel();

    // repeated int32 basicAttributeList = 4;
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    java.util.List<java.lang.Integer> getBasicAttributeListList();
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    int getBasicAttributeListCount();
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    int getBasicAttributeList(int index);

    // repeated int32 attributesGrowthList = 5;
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    java.util.List<java.lang.Integer> getAttributesGrowthListList();
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    int getAttributesGrowthListCount();
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    int getAttributesGrowthList(int index);

    // repeated int32 resistanceList = 6;
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    java.util.List<java.lang.Integer> getResistanceListList();
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    int getResistanceListCount();
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    int getResistanceList(int index);

    // repeated int32 commonAttackList = 7;
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    java.util.List<java.lang.Integer> getCommonAttackListList();
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    int getCommonAttackListCount();
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    int getCommonAttackList(int index);

    // repeated int32 initAssiveSkillList = 8;
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    java.util.List<java.lang.Integer> getInitAssiveSkillListList();
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    int getInitAssiveSkillListCount();
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    int getInitAssiveSkillList(int index);

    // required int32 nextLevel = 9;
    /**
     * <code>required int32 nextLevel = 9;</code>
     *
     * <pre>
     * 下一级
     * </pre>
     */
    boolean hasNextLevel();
    /**
     * <code>required int32 nextLevel = 9;</code>
     *
     * <pre>
     * 下一级
     * </pre>
     */
    int getNextLevel();

    // repeated int32 needItemList = 10;
    /**
     * <code>repeated int32 needItemList = 10;</code>
     *
     * <pre>
     * 升级需求物品
     * </pre>
     */
    java.util.List<java.lang.Integer> getNeedItemListList();
    /**
     * <code>repeated int32 needItemList = 10;</code>
     *
     * <pre>
     * 升级需求物品
     * </pre>
     */
    int getNeedItemListCount();
    /**
     * <code>repeated int32 needItemList = 10;</code>
     *
     * <pre>
     * 升级需求物品
     * </pre>
     */
    int getNeedItemList(int index);

    // repeated int32 needCountList = 11;
    /**
     * <code>repeated int32 needCountList = 11;</code>
     *
     * <pre>
     * 需求数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getNeedCountListList();
    /**
     * <code>repeated int32 needCountList = 11;</code>
     *
     * <pre>
     * 需求数量
     * </pre>
     */
    int getNeedCountListCount();
    /**
     * <code>repeated int32 needCountList = 11;</code>
     *
     * <pre>
     * 需求数量
     * </pre>
     */
    int getNeedCountList(int index);

    // repeated int32 elementMasterList = 12;
    /**
     * <code>repeated int32 elementMasterList = 12;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    java.util.List<java.lang.Integer> getElementMasterListList();
    /**
     * <code>repeated int32 elementMasterList = 12;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    int getElementMasterListCount();
    /**
     * <code>repeated int32 elementMasterList = 12;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    int getElementMasterList(int index);

    // repeated int32 raceRestrainList = 13;
    /**
     * <code>repeated int32 raceRestrainList = 13;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    java.util.List<java.lang.Integer> getRaceRestrainListList();
    /**
     * <code>repeated int32 raceRestrainList = 13;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    int getRaceRestrainListCount();
    /**
     * <code>repeated int32 raceRestrainList = 13;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    int getRaceRestrainList(int index);

    // repeated int32 debuffPatienceList = 14;
    /**
     * <code>repeated int32 debuffPatienceList = 14;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    java.util.List<java.lang.Integer> getDebuffPatienceListList();
    /**
     * <code>repeated int32 debuffPatienceList = 14;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    int getDebuffPatienceListCount();
    /**
     * <code>repeated int32 debuffPatienceList = 14;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    int getDebuffPatienceList(int index);

    // required int32 needLevel = 15;
    /**
     * <code>required int32 needLevel = 15;</code>
     *
     * <pre>
     * 进阶需要等级
     * </pre>
     */
    boolean hasNeedLevel();
    /**
     * <code>required int32 needLevel = 15;</code>
     *
     * <pre>
     * 进阶需要等级
     * </pre>
     */
    int getNeedLevel();

    // required int32 patiencesMax = 16;
    /**
     * <code>required int32 patiencesMax = 16;</code>
     *
     * <pre>
     * 培养耐性上限
     * </pre>
     */
    boolean hasPatiencesMax();
    /**
     * <code>required int32 patiencesMax = 16;</code>
     *
     * <pre>
     * 培养耐性上限
     * </pre>
     */
    int getPatiencesMax();

    // required int32 requireMoneyId = 17;
    /**
     * <code>required int32 requireMoneyId = 17;</code>
     *
     * <pre>
     * 进阶需要货币类型
     * </pre>
     */
    boolean hasRequireMoneyId();
    /**
     * <code>required int32 requireMoneyId = 17;</code>
     *
     * <pre>
     * 进阶需要货币类型
     * </pre>
     */
    int getRequireMoneyId();

    // required int32 requireMoneyCount = 18;
    /**
     * <code>required int32 requireMoneyCount = 18;</code>
     *
     * <pre>
     * 进阶需要货币数量
     * </pre>
     */
    boolean hasRequireMoneyCount();
    /**
     * <code>required int32 requireMoneyCount = 18;</code>
     *
     * <pre>
     * 进阶需要货币数量
     * </pre>
     */
    int getRequireMoneyCount();
  }
  /**
   * Protobuf type {@code HeroGrade}
   */
  public static final class HeroGrade extends
      com.google.protobuf.GeneratedMessage
      implements HeroGradeOrBuilder {
    // Use HeroGrade.newBuilder() to construct.
    private HeroGrade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeroGrade(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeroGrade defaultInstance;
    public static HeroGrade getDefaultInstance() {
      return defaultInstance;
    }

    public HeroGrade getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeroGrade(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              quality_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              startLevel_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              basicAttributeList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                basicAttributeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                attributesGrowthList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              attributesGrowthList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                attributesGrowthList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                attributesGrowthList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                resistanceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              resistanceList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                resistanceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                resistanceList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                commonAttackList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              commonAttackList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                commonAttackList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                commonAttackList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                initAssiveSkillList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              initAssiveSkillList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                initAssiveSkillList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                initAssiveSkillList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              nextLevel_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                needItemList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              needItemList_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                needItemList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                needItemList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                needCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              needCountList_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                needCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                needCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                elementMasterList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              elementMasterList_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                elementMasterList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                elementMasterList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              raceRestrainList_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                raceRestrainList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              debuffPatienceList_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                debuffPatienceList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              bitField0_ |= 0x00000010;
              needLevel_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000020;
              patiencesMax_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000040;
              requireMoneyId_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000080;
              requireMoneyCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          basicAttributeList_ = java.util.Collections.unmodifiableList(basicAttributeList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          attributesGrowthList_ = java.util.Collections.unmodifiableList(attributesGrowthList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          resistanceList_ = java.util.Collections.unmodifiableList(resistanceList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          commonAttackList_ = java.util.Collections.unmodifiableList(commonAttackList_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          initAssiveSkillList_ = java.util.Collections.unmodifiableList(initAssiveSkillList_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          needItemList_ = java.util.Collections.unmodifiableList(needItemList_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          needCountList_ = java.util.Collections.unmodifiableList(needCountList_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          elementMasterList_ = java.util.Collections.unmodifiableList(elementMasterList_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          raceRestrainList_ = java.util.Collections.unmodifiableList(raceRestrainList_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          debuffPatienceList_ = java.util.Collections.unmodifiableList(debuffPatienceList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroGrade_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroGrade_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.HeroProbuf.HeroGrade.class, com.cwa.prototype.protobuf.HeroProbuf.HeroGrade.Builder.class);
    }

    public static com.google.protobuf.Parser<HeroGrade> PARSER =
        new com.google.protobuf.AbstractParser<HeroGrade>() {
      public HeroGrade parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeroGrade(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeroGrade> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 quality = 2;
    public static final int QUALITY_FIELD_NUMBER = 2;
    private int quality_;
    /**
     * <code>required int32 quality = 2;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 quality = 2;</code>
     *
     * <pre>
     * 品质
     * </pre>
     */
    public int getQuality() {
      return quality_;
    }

    // required int32 startLevel = 3;
    public static final int STARTLEVEL_FIELD_NUMBER = 3;
    private int startLevel_;
    /**
     * <code>required int32 startLevel = 3;</code>
     *
     * <pre>
     * 星级
     * </pre>
     */
    public boolean hasStartLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 startLevel = 3;</code>
     *
     * <pre>
     * 星级
     * </pre>
     */
    public int getStartLevel() {
      return startLevel_;
    }

    // repeated int32 basicAttributeList = 4;
    public static final int BASICATTRIBUTELIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> basicAttributeList_;
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBasicAttributeListList() {
      return basicAttributeList_;
    }
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public int getBasicAttributeListCount() {
      return basicAttributeList_.size();
    }
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public int getBasicAttributeList(int index) {
      return basicAttributeList_.get(index);
    }

    // repeated int32 attributesGrowthList = 5;
    public static final int ATTRIBUTESGROWTHLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> attributesGrowthList_;
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAttributesGrowthListList() {
      return attributesGrowthList_;
    }
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    public int getAttributesGrowthListCount() {
      return attributesGrowthList_.size();
    }
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    public int getAttributesGrowthList(int index) {
      return attributesGrowthList_.get(index);
    }

    // repeated int32 resistanceList = 6;
    public static final int RESISTANCELIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> resistanceList_;
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getResistanceListList() {
      return resistanceList_;
    }
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public int getResistanceListCount() {
      return resistanceList_.size();
    }
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public int getResistanceList(int index) {
      return resistanceList_.get(index);
    }

    // repeated int32 commonAttackList = 7;
    public static final int COMMONATTACKLIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> commonAttackList_;
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCommonAttackListList() {
      return commonAttackList_;
    }
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public int getCommonAttackListCount() {
      return commonAttackList_.size();
    }
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public int getCommonAttackList(int index) {
      return commonAttackList_.get(index);
    }

    // repeated int32 initAssiveSkillList = 8;
    public static final int INITASSIVESKILLLIST_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> initAssiveSkillList_;
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getInitAssiveSkillListList() {
      return initAssiveSkillList_;
    }
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    public int getInitAssiveSkillListCount() {
      return initAssiveSkillList_.size();
    }
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    public int getInitAssiveSkillList(int index) {
      return initAssiveSkillList_.get(index);
    }

    // required int32 nextLevel = 9;
    public static final int NEXTLEVEL_FIELD_NUMBER = 9;
    private int nextLevel_;
    /**
     * <code>required int32 nextLevel = 9;</code>
     *
     * <pre>
     * 下一级
     * </pre>
     */
    public boolean hasNextLevel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 nextLevel = 9;</code>
     *
     * <pre>
     * 下一级
     * </pre>
     */
    public int getNextLevel() {
      return nextLevel_;
    }

    // repeated int32 needItemList = 10;
    public static final int NEEDITEMLIST_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> needItemList_;
    /**
     * <code>repeated int32 needItemList = 10;</code>
     *
     * <pre>
     * 升级需求物品
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getNeedItemListList() {
      return needItemList_;
    }
    /**
     * <code>repeated int32 needItemList = 10;</code>
     *
     * <pre>
     * 升级需求物品
     * </pre>
     */
    public int getNeedItemListCount() {
      return needItemList_.size();
    }
    /**
     * <code>repeated int32 needItemList = 10;</code>
     *
     * <pre>
     * 升级需求物品
     * </pre>
     */
    public int getNeedItemList(int index) {
      return needItemList_.get(index);
    }

    // repeated int32 needCountList = 11;
    public static final int NEEDCOUNTLIST_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> needCountList_;
    /**
     * <code>repeated int32 needCountList = 11;</code>
     *
     * <pre>
     * 需求数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getNeedCountListList() {
      return needCountList_;
    }
    /**
     * <code>repeated int32 needCountList = 11;</code>
     *
     * <pre>
     * 需求数量
     * </pre>
     */
    public int getNeedCountListCount() {
      return needCountList_.size();
    }
    /**
     * <code>repeated int32 needCountList = 11;</code>
     *
     * <pre>
     * 需求数量
     * </pre>
     */
    public int getNeedCountList(int index) {
      return needCountList_.get(index);
    }

    // repeated int32 elementMasterList = 12;
    public static final int ELEMENTMASTERLIST_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> elementMasterList_;
    /**
     * <code>repeated int32 elementMasterList = 12;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getElementMasterListList() {
      return elementMasterList_;
    }
    /**
     * <code>repeated int32 elementMasterList = 12;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public int getElementMasterListCount() {
      return elementMasterList_.size();
    }
    /**
     * <code>repeated int32 elementMasterList = 12;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public int getElementMasterList(int index) {
      return elementMasterList_.get(index);
    }

    // repeated int32 raceRestrainList = 13;
    public static final int RACERESTRAINLIST_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> raceRestrainList_;
    /**
     * <code>repeated int32 raceRestrainList = 13;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRaceRestrainListList() {
      return raceRestrainList_;
    }
    /**
     * <code>repeated int32 raceRestrainList = 13;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public int getRaceRestrainListCount() {
      return raceRestrainList_.size();
    }
    /**
     * <code>repeated int32 raceRestrainList = 13;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public int getRaceRestrainList(int index) {
      return raceRestrainList_.get(index);
    }

    // repeated int32 debuffPatienceList = 14;
    public static final int DEBUFFPATIENCELIST_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> debuffPatienceList_;
    /**
     * <code>repeated int32 debuffPatienceList = 14;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDebuffPatienceListList() {
      return debuffPatienceList_;
    }
    /**
     * <code>repeated int32 debuffPatienceList = 14;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public int getDebuffPatienceListCount() {
      return debuffPatienceList_.size();
    }
    /**
     * <code>repeated int32 debuffPatienceList = 14;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public int getDebuffPatienceList(int index) {
      return debuffPatienceList_.get(index);
    }

    // required int32 needLevel = 15;
    public static final int NEEDLEVEL_FIELD_NUMBER = 15;
    private int needLevel_;
    /**
     * <code>required int32 needLevel = 15;</code>
     *
     * <pre>
     * 进阶需要等级
     * </pre>
     */
    public boolean hasNeedLevel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 needLevel = 15;</code>
     *
     * <pre>
     * 进阶需要等级
     * </pre>
     */
    public int getNeedLevel() {
      return needLevel_;
    }

    // required int32 patiencesMax = 16;
    public static final int PATIENCESMAX_FIELD_NUMBER = 16;
    private int patiencesMax_;
    /**
     * <code>required int32 patiencesMax = 16;</code>
     *
     * <pre>
     * 培养耐性上限
     * </pre>
     */
    public boolean hasPatiencesMax() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 patiencesMax = 16;</code>
     *
     * <pre>
     * 培养耐性上限
     * </pre>
     */
    public int getPatiencesMax() {
      return patiencesMax_;
    }

    // required int32 requireMoneyId = 17;
    public static final int REQUIREMONEYID_FIELD_NUMBER = 17;
    private int requireMoneyId_;
    /**
     * <code>required int32 requireMoneyId = 17;</code>
     *
     * <pre>
     * 进阶需要货币类型
     * </pre>
     */
    public boolean hasRequireMoneyId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 requireMoneyId = 17;</code>
     *
     * <pre>
     * 进阶需要货币类型
     * </pre>
     */
    public int getRequireMoneyId() {
      return requireMoneyId_;
    }

    // required int32 requireMoneyCount = 18;
    public static final int REQUIREMONEYCOUNT_FIELD_NUMBER = 18;
    private int requireMoneyCount_;
    /**
     * <code>required int32 requireMoneyCount = 18;</code>
     *
     * <pre>
     * 进阶需要货币数量
     * </pre>
     */
    public boolean hasRequireMoneyCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 requireMoneyCount = 18;</code>
     *
     * <pre>
     * 进阶需要货币数量
     * </pre>
     */
    public int getRequireMoneyCount() {
      return requireMoneyCount_;
    }

    private void initFields() {
      keyId_ = 0;
      quality_ = 0;
      startLevel_ = 0;
      basicAttributeList_ = java.util.Collections.emptyList();
      attributesGrowthList_ = java.util.Collections.emptyList();
      resistanceList_ = java.util.Collections.emptyList();
      commonAttackList_ = java.util.Collections.emptyList();
      initAssiveSkillList_ = java.util.Collections.emptyList();
      nextLevel_ = 0;
      needItemList_ = java.util.Collections.emptyList();
      needCountList_ = java.util.Collections.emptyList();
      elementMasterList_ = java.util.Collections.emptyList();
      raceRestrainList_ = java.util.Collections.emptyList();
      debuffPatienceList_ = java.util.Collections.emptyList();
      needLevel_ = 0;
      patiencesMax_ = 0;
      requireMoneyId_ = 0;
      requireMoneyCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuality()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNextLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNeedLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPatiencesMax()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, startLevel_);
      }
      for (int i = 0; i < basicAttributeList_.size(); i++) {
        output.writeInt32(4, basicAttributeList_.get(i));
      }
      for (int i = 0; i < attributesGrowthList_.size(); i++) {
        output.writeInt32(5, attributesGrowthList_.get(i));
      }
      for (int i = 0; i < resistanceList_.size(); i++) {
        output.writeInt32(6, resistanceList_.get(i));
      }
      for (int i = 0; i < commonAttackList_.size(); i++) {
        output.writeInt32(7, commonAttackList_.get(i));
      }
      for (int i = 0; i < initAssiveSkillList_.size(); i++) {
        output.writeInt32(8, initAssiveSkillList_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, nextLevel_);
      }
      for (int i = 0; i < needItemList_.size(); i++) {
        output.writeInt32(10, needItemList_.get(i));
      }
      for (int i = 0; i < needCountList_.size(); i++) {
        output.writeInt32(11, needCountList_.get(i));
      }
      for (int i = 0; i < elementMasterList_.size(); i++) {
        output.writeInt32(12, elementMasterList_.get(i));
      }
      for (int i = 0; i < raceRestrainList_.size(); i++) {
        output.writeInt32(13, raceRestrainList_.get(i));
      }
      for (int i = 0; i < debuffPatienceList_.size(); i++) {
        output.writeInt32(14, debuffPatienceList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(15, needLevel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(16, patiencesMax_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(17, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(18, requireMoneyCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, startLevel_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < basicAttributeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(basicAttributeList_.get(i));
        }
        size += dataSize;
        size += 1 * getBasicAttributeListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributesGrowthList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(attributesGrowthList_.get(i));
        }
        size += dataSize;
        size += 1 * getAttributesGrowthListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < resistanceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(resistanceList_.get(i));
        }
        size += dataSize;
        size += 1 * getResistanceListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < commonAttackList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(commonAttackList_.get(i));
        }
        size += dataSize;
        size += 1 * getCommonAttackListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < initAssiveSkillList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(initAssiveSkillList_.get(i));
        }
        size += dataSize;
        size += 1 * getInitAssiveSkillListList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, nextLevel_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < needItemList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(needItemList_.get(i));
        }
        size += dataSize;
        size += 1 * getNeedItemListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < needCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(needCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getNeedCountListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < elementMasterList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(elementMasterList_.get(i));
        }
        size += dataSize;
        size += 1 * getElementMasterListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < raceRestrainList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(raceRestrainList_.get(i));
        }
        size += dataSize;
        size += 1 * getRaceRestrainListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < debuffPatienceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(debuffPatienceList_.get(i));
        }
        size += dataSize;
        size += 1 * getDebuffPatienceListList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, needLevel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, patiencesMax_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, requireMoneyCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.HeroProbuf.HeroGrade prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeroGrade}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.HeroProbuf.HeroGradeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroGrade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroGrade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.HeroProbuf.HeroGrade.class, com.cwa.prototype.protobuf.HeroProbuf.HeroGrade.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.HeroProbuf.HeroGrade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        startLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        basicAttributeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        attributesGrowthList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        resistanceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        commonAttackList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        initAssiveSkillList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        nextLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        needItemList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        needCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        elementMasterList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        raceRestrainList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        debuffPatienceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        needLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        patiencesMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        requireMoneyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        requireMoneyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroGrade_descriptor;
      }

      public com.cwa.prototype.protobuf.HeroProbuf.HeroGrade getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.HeroProbuf.HeroGrade.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.HeroProbuf.HeroGrade build() {
        com.cwa.prototype.protobuf.HeroProbuf.HeroGrade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.HeroProbuf.HeroGrade buildPartial() {
        com.cwa.prototype.protobuf.HeroProbuf.HeroGrade result = new com.cwa.prototype.protobuf.HeroProbuf.HeroGrade(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startLevel_ = startLevel_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          basicAttributeList_ = java.util.Collections.unmodifiableList(basicAttributeList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.basicAttributeList_ = basicAttributeList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          attributesGrowthList_ = java.util.Collections.unmodifiableList(attributesGrowthList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.attributesGrowthList_ = attributesGrowthList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          resistanceList_ = java.util.Collections.unmodifiableList(resistanceList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.resistanceList_ = resistanceList_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          commonAttackList_ = java.util.Collections.unmodifiableList(commonAttackList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.commonAttackList_ = commonAttackList_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          initAssiveSkillList_ = java.util.Collections.unmodifiableList(initAssiveSkillList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.initAssiveSkillList_ = initAssiveSkillList_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nextLevel_ = nextLevel_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          needItemList_ = java.util.Collections.unmodifiableList(needItemList_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.needItemList_ = needItemList_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          needCountList_ = java.util.Collections.unmodifiableList(needCountList_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.needCountList_ = needCountList_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          elementMasterList_ = java.util.Collections.unmodifiableList(elementMasterList_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.elementMasterList_ = elementMasterList_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          raceRestrainList_ = java.util.Collections.unmodifiableList(raceRestrainList_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.raceRestrainList_ = raceRestrainList_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          debuffPatienceList_ = java.util.Collections.unmodifiableList(debuffPatienceList_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.debuffPatienceList_ = debuffPatienceList_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000010;
        }
        result.needLevel_ = needLevel_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.patiencesMax_ = patiencesMax_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.requireMoneyId_ = requireMoneyId_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.requireMoneyCount_ = requireMoneyCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.HeroProbuf.HeroGrade) {
          return mergeFrom((com.cwa.prototype.protobuf.HeroProbuf.HeroGrade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.HeroProbuf.HeroGrade other) {
        if (other == com.cwa.prototype.protobuf.HeroProbuf.HeroGrade.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasStartLevel()) {
          setStartLevel(other.getStartLevel());
        }
        if (!other.basicAttributeList_.isEmpty()) {
          if (basicAttributeList_.isEmpty()) {
            basicAttributeList_ = other.basicAttributeList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBasicAttributeListIsMutable();
            basicAttributeList_.addAll(other.basicAttributeList_);
          }
          onChanged();
        }
        if (!other.attributesGrowthList_.isEmpty()) {
          if (attributesGrowthList_.isEmpty()) {
            attributesGrowthList_ = other.attributesGrowthList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAttributesGrowthListIsMutable();
            attributesGrowthList_.addAll(other.attributesGrowthList_);
          }
          onChanged();
        }
        if (!other.resistanceList_.isEmpty()) {
          if (resistanceList_.isEmpty()) {
            resistanceList_ = other.resistanceList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureResistanceListIsMutable();
            resistanceList_.addAll(other.resistanceList_);
          }
          onChanged();
        }
        if (!other.commonAttackList_.isEmpty()) {
          if (commonAttackList_.isEmpty()) {
            commonAttackList_ = other.commonAttackList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureCommonAttackListIsMutable();
            commonAttackList_.addAll(other.commonAttackList_);
          }
          onChanged();
        }
        if (!other.initAssiveSkillList_.isEmpty()) {
          if (initAssiveSkillList_.isEmpty()) {
            initAssiveSkillList_ = other.initAssiveSkillList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureInitAssiveSkillListIsMutable();
            initAssiveSkillList_.addAll(other.initAssiveSkillList_);
          }
          onChanged();
        }
        if (other.hasNextLevel()) {
          setNextLevel(other.getNextLevel());
        }
        if (!other.needItemList_.isEmpty()) {
          if (needItemList_.isEmpty()) {
            needItemList_ = other.needItemList_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureNeedItemListIsMutable();
            needItemList_.addAll(other.needItemList_);
          }
          onChanged();
        }
        if (!other.needCountList_.isEmpty()) {
          if (needCountList_.isEmpty()) {
            needCountList_ = other.needCountList_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureNeedCountListIsMutable();
            needCountList_.addAll(other.needCountList_);
          }
          onChanged();
        }
        if (!other.elementMasterList_.isEmpty()) {
          if (elementMasterList_.isEmpty()) {
            elementMasterList_ = other.elementMasterList_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureElementMasterListIsMutable();
            elementMasterList_.addAll(other.elementMasterList_);
          }
          onChanged();
        }
        if (!other.raceRestrainList_.isEmpty()) {
          if (raceRestrainList_.isEmpty()) {
            raceRestrainList_ = other.raceRestrainList_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureRaceRestrainListIsMutable();
            raceRestrainList_.addAll(other.raceRestrainList_);
          }
          onChanged();
        }
        if (!other.debuffPatienceList_.isEmpty()) {
          if (debuffPatienceList_.isEmpty()) {
            debuffPatienceList_ = other.debuffPatienceList_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureDebuffPatienceListIsMutable();
            debuffPatienceList_.addAll(other.debuffPatienceList_);
          }
          onChanged();
        }
        if (other.hasNeedLevel()) {
          setNeedLevel(other.getNeedLevel());
        }
        if (other.hasPatiencesMax()) {
          setPatiencesMax(other.getPatiencesMax());
        }
        if (other.hasRequireMoneyId()) {
          setRequireMoneyId(other.getRequireMoneyId());
        }
        if (other.hasRequireMoneyCount()) {
          setRequireMoneyCount(other.getRequireMoneyCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasQuality()) {
          
          return false;
        }
        if (!hasStartLevel()) {
          
          return false;
        }
        if (!hasNextLevel()) {
          
          return false;
        }
        if (!hasNeedLevel()) {
          
          return false;
        }
        if (!hasPatiencesMax()) {
          
          return false;
        }
        if (!hasRequireMoneyId()) {
          
          return false;
        }
        if (!hasRequireMoneyCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.HeroProbuf.HeroGrade parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.HeroProbuf.HeroGrade) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 quality = 2;
      private int quality_ ;
      /**
       * <code>required int32 quality = 2;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 quality = 2;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>required int32 quality = 2;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000002;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 quality = 2;</code>
       *
       * <pre>
       * 品质
       * </pre>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        onChanged();
        return this;
      }

      // required int32 startLevel = 3;
      private int startLevel_ ;
      /**
       * <code>required int32 startLevel = 3;</code>
       *
       * <pre>
       * 星级
       * </pre>
       */
      public boolean hasStartLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 startLevel = 3;</code>
       *
       * <pre>
       * 星级
       * </pre>
       */
      public int getStartLevel() {
        return startLevel_;
      }
      /**
       * <code>required int32 startLevel = 3;</code>
       *
       * <pre>
       * 星级
       * </pre>
       */
      public Builder setStartLevel(int value) {
        bitField0_ |= 0x00000004;
        startLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 startLevel = 3;</code>
       *
       * <pre>
       * 星级
       * </pre>
       */
      public Builder clearStartLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startLevel_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 basicAttributeList = 4;
      private java.util.List<java.lang.Integer> basicAttributeList_ = java.util.Collections.emptyList();
      private void ensureBasicAttributeListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>(basicAttributeList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBasicAttributeListList() {
        return java.util.Collections.unmodifiableList(basicAttributeList_);
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public int getBasicAttributeListCount() {
        return basicAttributeList_.size();
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public int getBasicAttributeList(int index) {
        return basicAttributeList_.get(index);
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder setBasicAttributeList(
          int index, int value) {
        ensureBasicAttributeListIsMutable();
        basicAttributeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder addBasicAttributeList(int value) {
        ensureBasicAttributeListIsMutable();
        basicAttributeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder addAllBasicAttributeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBasicAttributeListIsMutable();
        super.addAll(values, basicAttributeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder clearBasicAttributeList() {
        basicAttributeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 attributesGrowthList = 5;
      private java.util.List<java.lang.Integer> attributesGrowthList_ = java.util.Collections.emptyList();
      private void ensureAttributesGrowthListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          attributesGrowthList_ = new java.util.ArrayList<java.lang.Integer>(attributesGrowthList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAttributesGrowthListList() {
        return java.util.Collections.unmodifiableList(attributesGrowthList_);
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public int getAttributesGrowthListCount() {
        return attributesGrowthList_.size();
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public int getAttributesGrowthList(int index) {
        return attributesGrowthList_.get(index);
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public Builder setAttributesGrowthList(
          int index, int value) {
        ensureAttributesGrowthListIsMutable();
        attributesGrowthList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public Builder addAttributesGrowthList(int value) {
        ensureAttributesGrowthListIsMutable();
        attributesGrowthList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public Builder addAllAttributesGrowthList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttributesGrowthListIsMutable();
        super.addAll(values, attributesGrowthList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public Builder clearAttributesGrowthList() {
        attributesGrowthList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 resistanceList = 6;
      private java.util.List<java.lang.Integer> resistanceList_ = java.util.Collections.emptyList();
      private void ensureResistanceListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          resistanceList_ = new java.util.ArrayList<java.lang.Integer>(resistanceList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getResistanceListList() {
        return java.util.Collections.unmodifiableList(resistanceList_);
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public int getResistanceListCount() {
        return resistanceList_.size();
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public int getResistanceList(int index) {
        return resistanceList_.get(index);
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder setResistanceList(
          int index, int value) {
        ensureResistanceListIsMutable();
        resistanceList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder addResistanceList(int value) {
        ensureResistanceListIsMutable();
        resistanceList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder addAllResistanceList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureResistanceListIsMutable();
        super.addAll(values, resistanceList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder clearResistanceList() {
        resistanceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 commonAttackList = 7;
      private java.util.List<java.lang.Integer> commonAttackList_ = java.util.Collections.emptyList();
      private void ensureCommonAttackListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          commonAttackList_ = new java.util.ArrayList<java.lang.Integer>(commonAttackList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCommonAttackListList() {
        return java.util.Collections.unmodifiableList(commonAttackList_);
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public int getCommonAttackListCount() {
        return commonAttackList_.size();
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public int getCommonAttackList(int index) {
        return commonAttackList_.get(index);
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder setCommonAttackList(
          int index, int value) {
        ensureCommonAttackListIsMutable();
        commonAttackList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder addCommonAttackList(int value) {
        ensureCommonAttackListIsMutable();
        commonAttackList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder addAllCommonAttackList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCommonAttackListIsMutable();
        super.addAll(values, commonAttackList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder clearCommonAttackList() {
        commonAttackList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 initAssiveSkillList = 8;
      private java.util.List<java.lang.Integer> initAssiveSkillList_ = java.util.Collections.emptyList();
      private void ensureInitAssiveSkillListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          initAssiveSkillList_ = new java.util.ArrayList<java.lang.Integer>(initAssiveSkillList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getInitAssiveSkillListList() {
        return java.util.Collections.unmodifiableList(initAssiveSkillList_);
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public int getInitAssiveSkillListCount() {
        return initAssiveSkillList_.size();
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public int getInitAssiveSkillList(int index) {
        return initAssiveSkillList_.get(index);
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public Builder setInitAssiveSkillList(
          int index, int value) {
        ensureInitAssiveSkillListIsMutable();
        initAssiveSkillList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public Builder addInitAssiveSkillList(int value) {
        ensureInitAssiveSkillListIsMutable();
        initAssiveSkillList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public Builder addAllInitAssiveSkillList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInitAssiveSkillListIsMutable();
        super.addAll(values, initAssiveSkillList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public Builder clearInitAssiveSkillList() {
        initAssiveSkillList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // required int32 nextLevel = 9;
      private int nextLevel_ ;
      /**
       * <code>required int32 nextLevel = 9;</code>
       *
       * <pre>
       * 下一级
       * </pre>
       */
      public boolean hasNextLevel() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 nextLevel = 9;</code>
       *
       * <pre>
       * 下一级
       * </pre>
       */
      public int getNextLevel() {
        return nextLevel_;
      }
      /**
       * <code>required int32 nextLevel = 9;</code>
       *
       * <pre>
       * 下一级
       * </pre>
       */
      public Builder setNextLevel(int value) {
        bitField0_ |= 0x00000100;
        nextLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nextLevel = 9;</code>
       *
       * <pre>
       * 下一级
       * </pre>
       */
      public Builder clearNextLevel() {
        bitField0_ = (bitField0_ & ~0x00000100);
        nextLevel_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 needItemList = 10;
      private java.util.List<java.lang.Integer> needItemList_ = java.util.Collections.emptyList();
      private void ensureNeedItemListIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          needItemList_ = new java.util.ArrayList<java.lang.Integer>(needItemList_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 needItemList = 10;</code>
       *
       * <pre>
       * 升级需求物品
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getNeedItemListList() {
        return java.util.Collections.unmodifiableList(needItemList_);
      }
      /**
       * <code>repeated int32 needItemList = 10;</code>
       *
       * <pre>
       * 升级需求物品
       * </pre>
       */
      public int getNeedItemListCount() {
        return needItemList_.size();
      }
      /**
       * <code>repeated int32 needItemList = 10;</code>
       *
       * <pre>
       * 升级需求物品
       * </pre>
       */
      public int getNeedItemList(int index) {
        return needItemList_.get(index);
      }
      /**
       * <code>repeated int32 needItemList = 10;</code>
       *
       * <pre>
       * 升级需求物品
       * </pre>
       */
      public Builder setNeedItemList(
          int index, int value) {
        ensureNeedItemListIsMutable();
        needItemList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 needItemList = 10;</code>
       *
       * <pre>
       * 升级需求物品
       * </pre>
       */
      public Builder addNeedItemList(int value) {
        ensureNeedItemListIsMutable();
        needItemList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 needItemList = 10;</code>
       *
       * <pre>
       * 升级需求物品
       * </pre>
       */
      public Builder addAllNeedItemList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeedItemListIsMutable();
        super.addAll(values, needItemList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 needItemList = 10;</code>
       *
       * <pre>
       * 升级需求物品
       * </pre>
       */
      public Builder clearNeedItemList() {
        needItemList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 needCountList = 11;
      private java.util.List<java.lang.Integer> needCountList_ = java.util.Collections.emptyList();
      private void ensureNeedCountListIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          needCountList_ = new java.util.ArrayList<java.lang.Integer>(needCountList_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 needCountList = 11;</code>
       *
       * <pre>
       * 需求数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getNeedCountListList() {
        return java.util.Collections.unmodifiableList(needCountList_);
      }
      /**
       * <code>repeated int32 needCountList = 11;</code>
       *
       * <pre>
       * 需求数量
       * </pre>
       */
      public int getNeedCountListCount() {
        return needCountList_.size();
      }
      /**
       * <code>repeated int32 needCountList = 11;</code>
       *
       * <pre>
       * 需求数量
       * </pre>
       */
      public int getNeedCountList(int index) {
        return needCountList_.get(index);
      }
      /**
       * <code>repeated int32 needCountList = 11;</code>
       *
       * <pre>
       * 需求数量
       * </pre>
       */
      public Builder setNeedCountList(
          int index, int value) {
        ensureNeedCountListIsMutable();
        needCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 needCountList = 11;</code>
       *
       * <pre>
       * 需求数量
       * </pre>
       */
      public Builder addNeedCountList(int value) {
        ensureNeedCountListIsMutable();
        needCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 needCountList = 11;</code>
       *
       * <pre>
       * 需求数量
       * </pre>
       */
      public Builder addAllNeedCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeedCountListIsMutable();
        super.addAll(values, needCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 needCountList = 11;</code>
       *
       * <pre>
       * 需求数量
       * </pre>
       */
      public Builder clearNeedCountList() {
        needCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 elementMasterList = 12;
      private java.util.List<java.lang.Integer> elementMasterList_ = java.util.Collections.emptyList();
      private void ensureElementMasterListIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          elementMasterList_ = new java.util.ArrayList<java.lang.Integer>(elementMasterList_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 elementMasterList = 12;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getElementMasterListList() {
        return java.util.Collections.unmodifiableList(elementMasterList_);
      }
      /**
       * <code>repeated int32 elementMasterList = 12;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public int getElementMasterListCount() {
        return elementMasterList_.size();
      }
      /**
       * <code>repeated int32 elementMasterList = 12;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public int getElementMasterList(int index) {
        return elementMasterList_.get(index);
      }
      /**
       * <code>repeated int32 elementMasterList = 12;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder setElementMasterList(
          int index, int value) {
        ensureElementMasterListIsMutable();
        elementMasterList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 12;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder addElementMasterList(int value) {
        ensureElementMasterListIsMutable();
        elementMasterList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 12;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder addAllElementMasterList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureElementMasterListIsMutable();
        super.addAll(values, elementMasterList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 12;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder clearElementMasterList() {
        elementMasterList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 raceRestrainList = 13;
      private java.util.List<java.lang.Integer> raceRestrainList_ = java.util.Collections.emptyList();
      private void ensureRaceRestrainListIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>(raceRestrainList_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 raceRestrainList = 13;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRaceRestrainListList() {
        return java.util.Collections.unmodifiableList(raceRestrainList_);
      }
      /**
       * <code>repeated int32 raceRestrainList = 13;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public int getRaceRestrainListCount() {
        return raceRestrainList_.size();
      }
      /**
       * <code>repeated int32 raceRestrainList = 13;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public int getRaceRestrainList(int index) {
        return raceRestrainList_.get(index);
      }
      /**
       * <code>repeated int32 raceRestrainList = 13;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder setRaceRestrainList(
          int index, int value) {
        ensureRaceRestrainListIsMutable();
        raceRestrainList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 13;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder addRaceRestrainList(int value) {
        ensureRaceRestrainListIsMutable();
        raceRestrainList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 13;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder addAllRaceRestrainList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRaceRestrainListIsMutable();
        super.addAll(values, raceRestrainList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 13;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder clearRaceRestrainList() {
        raceRestrainList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 debuffPatienceList = 14;
      private java.util.List<java.lang.Integer> debuffPatienceList_ = java.util.Collections.emptyList();
      private void ensureDebuffPatienceListIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>(debuffPatienceList_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 debuffPatienceList = 14;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDebuffPatienceListList() {
        return java.util.Collections.unmodifiableList(debuffPatienceList_);
      }
      /**
       * <code>repeated int32 debuffPatienceList = 14;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public int getDebuffPatienceListCount() {
        return debuffPatienceList_.size();
      }
      /**
       * <code>repeated int32 debuffPatienceList = 14;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public int getDebuffPatienceList(int index) {
        return debuffPatienceList_.get(index);
      }
      /**
       * <code>repeated int32 debuffPatienceList = 14;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder setDebuffPatienceList(
          int index, int value) {
        ensureDebuffPatienceListIsMutable();
        debuffPatienceList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 14;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder addDebuffPatienceList(int value) {
        ensureDebuffPatienceListIsMutable();
        debuffPatienceList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 14;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder addAllDebuffPatienceList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDebuffPatienceListIsMutable();
        super.addAll(values, debuffPatienceList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 14;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder clearDebuffPatienceList() {
        debuffPatienceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // required int32 needLevel = 15;
      private int needLevel_ ;
      /**
       * <code>required int32 needLevel = 15;</code>
       *
       * <pre>
       * 进阶需要等级
       * </pre>
       */
      public boolean hasNeedLevel() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 needLevel = 15;</code>
       *
       * <pre>
       * 进阶需要等级
       * </pre>
       */
      public int getNeedLevel() {
        return needLevel_;
      }
      /**
       * <code>required int32 needLevel = 15;</code>
       *
       * <pre>
       * 进阶需要等级
       * </pre>
       */
      public Builder setNeedLevel(int value) {
        bitField0_ |= 0x00004000;
        needLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 needLevel = 15;</code>
       *
       * <pre>
       * 进阶需要等级
       * </pre>
       */
      public Builder clearNeedLevel() {
        bitField0_ = (bitField0_ & ~0x00004000);
        needLevel_ = 0;
        onChanged();
        return this;
      }

      // required int32 patiencesMax = 16;
      private int patiencesMax_ ;
      /**
       * <code>required int32 patiencesMax = 16;</code>
       *
       * <pre>
       * 培养耐性上限
       * </pre>
       */
      public boolean hasPatiencesMax() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 patiencesMax = 16;</code>
       *
       * <pre>
       * 培养耐性上限
       * </pre>
       */
      public int getPatiencesMax() {
        return patiencesMax_;
      }
      /**
       * <code>required int32 patiencesMax = 16;</code>
       *
       * <pre>
       * 培养耐性上限
       * </pre>
       */
      public Builder setPatiencesMax(int value) {
        bitField0_ |= 0x00008000;
        patiencesMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 patiencesMax = 16;</code>
       *
       * <pre>
       * 培养耐性上限
       * </pre>
       */
      public Builder clearPatiencesMax() {
        bitField0_ = (bitField0_ & ~0x00008000);
        patiencesMax_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireMoneyId = 17;
      private int requireMoneyId_ ;
      /**
       * <code>required int32 requireMoneyId = 17;</code>
       *
       * <pre>
       * 进阶需要货币类型
       * </pre>
       */
      public boolean hasRequireMoneyId() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 requireMoneyId = 17;</code>
       *
       * <pre>
       * 进阶需要货币类型
       * </pre>
       */
      public int getRequireMoneyId() {
        return requireMoneyId_;
      }
      /**
       * <code>required int32 requireMoneyId = 17;</code>
       *
       * <pre>
       * 进阶需要货币类型
       * </pre>
       */
      public Builder setRequireMoneyId(int value) {
        bitField0_ |= 0x00010000;
        requireMoneyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyId = 17;</code>
       *
       * <pre>
       * 进阶需要货币类型
       * </pre>
       */
      public Builder clearRequireMoneyId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        requireMoneyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireMoneyCount = 18;
      private int requireMoneyCount_ ;
      /**
       * <code>required int32 requireMoneyCount = 18;</code>
       *
       * <pre>
       * 进阶需要货币数量
       * </pre>
       */
      public boolean hasRequireMoneyCount() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 requireMoneyCount = 18;</code>
       *
       * <pre>
       * 进阶需要货币数量
       * </pre>
       */
      public int getRequireMoneyCount() {
        return requireMoneyCount_;
      }
      /**
       * <code>required int32 requireMoneyCount = 18;</code>
       *
       * <pre>
       * 进阶需要货币数量
       * </pre>
       */
      public Builder setRequireMoneyCount(int value) {
        bitField0_ |= 0x00020000;
        requireMoneyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyCount = 18;</code>
       *
       * <pre>
       * 进阶需要货币数量
       * </pre>
       */
      public Builder clearRequireMoneyCount() {
        bitField0_ = (bitField0_ & ~0x00020000);
        requireMoneyCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeroGrade)
    }

    static {
      defaultInstance = new HeroGrade(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeroGrade)
  }

  public interface CallOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    int getKeyId();

    // required string heroName = 2;
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    boolean hasHeroName();
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    java.lang.String getHeroName();
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeroNameBytes();

    // required int32 heroClass = 3;
    /**
     * <code>required int32 heroClass = 3;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    boolean hasHeroClass();
    /**
     * <code>required int32 heroClass = 3;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    int getHeroClass();

    // repeated int32 basicAttributeList = 4;
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    java.util.List<java.lang.Integer> getBasicAttributeListList();
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    int getBasicAttributeListCount();
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    int getBasicAttributeList(int index);

    // repeated int32 attributesGrowthList = 5;
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    java.util.List<java.lang.Integer> getAttributesGrowthListList();
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    int getAttributesGrowthListCount();
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    int getAttributesGrowthList(int index);

    // repeated int32 resistanceList = 6;
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    java.util.List<java.lang.Integer> getResistanceListList();
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    int getResistanceListCount();
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    int getResistanceList(int index);

    // repeated int32 commonAttackList = 7;
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    java.util.List<java.lang.Integer> getCommonAttackListList();
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    int getCommonAttackListCount();
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    int getCommonAttackList(int index);

    // repeated int32 initAssiveSkillList = 8;
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    java.util.List<java.lang.Integer> getInitAssiveSkillListList();
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    int getInitAssiveSkillListCount();
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    int getInitAssiveSkillList(int index);

    // required int32 heroSize = 9;
    /**
     * <code>required int32 heroSize = 9;</code>
     *
     * <pre>
     * 大小
     * </pre>
     */
    boolean hasHeroSize();
    /**
     * <code>required int32 heroSize = 9;</code>
     *
     * <pre>
     * 大小
     * </pre>
     */
    int getHeroSize();

    // repeated int32 elementMasterList = 10;
    /**
     * <code>repeated int32 elementMasterList = 10;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    java.util.List<java.lang.Integer> getElementMasterListList();
    /**
     * <code>repeated int32 elementMasterList = 10;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    int getElementMasterListCount();
    /**
     * <code>repeated int32 elementMasterList = 10;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    int getElementMasterList(int index);

    // repeated int32 raceRestrainList = 11;
    /**
     * <code>repeated int32 raceRestrainList = 11;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    java.util.List<java.lang.Integer> getRaceRestrainListList();
    /**
     * <code>repeated int32 raceRestrainList = 11;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    int getRaceRestrainListCount();
    /**
     * <code>repeated int32 raceRestrainList = 11;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    int getRaceRestrainList(int index);

    // repeated int32 debuffPatienceList = 12;
    /**
     * <code>repeated int32 debuffPatienceList = 12;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    java.util.List<java.lang.Integer> getDebuffPatienceListList();
    /**
     * <code>repeated int32 debuffPatienceList = 12;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    int getDebuffPatienceListCount();
    /**
     * <code>repeated int32 debuffPatienceList = 12;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    int getDebuffPatienceList(int index);

    // required string resource = 13;
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    boolean hasResource();
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    java.lang.String getResource();
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    com.google.protobuf.ByteString
        getResourceBytes();

    // repeated int32 effectTimeList = 14;
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    java.util.List<java.lang.Integer> getEffectTimeListList();
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    int getEffectTimeListCount();
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    int getEffectTimeList(int index);

    // repeated int32 actionTimeList = 15;
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    java.util.List<java.lang.Integer> getActionTimeListList();
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    int getActionTimeListCount();
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    int getActionTimeList(int index);

    // required int32 heroScale = 16;
    /**
     * <code>required int32 heroScale = 16;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    boolean hasHeroScale();
    /**
     * <code>required int32 heroScale = 16;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    int getHeroScale();
  }
  /**
   * Protobuf type {@code Call}
   */
  public static final class Call extends
      com.google.protobuf.GeneratedMessage
      implements CallOrBuilder {
    // Use Call.newBuilder() to construct.
    private Call(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Call(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Call defaultInstance;
    public static Call getDefaultInstance() {
      return defaultInstance;
    }

    public Call getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Call(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              heroName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              heroClass_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              basicAttributeList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                basicAttributeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                attributesGrowthList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              attributesGrowthList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                attributesGrowthList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                attributesGrowthList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                resistanceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              resistanceList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                resistanceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                resistanceList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                commonAttackList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              commonAttackList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                commonAttackList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                commonAttackList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                initAssiveSkillList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              initAssiveSkillList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                initAssiveSkillList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                initAssiveSkillList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              heroSize_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                elementMasterList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              elementMasterList_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                elementMasterList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                elementMasterList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              raceRestrainList_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                raceRestrainList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              debuffPatienceList_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                debuffPatienceList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 106: {
              bitField0_ |= 0x00000010;
              resource_ = input.readBytes();
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                effectTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              effectTimeList_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                effectTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                effectTimeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                actionTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              actionTimeList_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                actionTimeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                actionTimeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              bitField0_ |= 0x00000020;
              heroScale_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          basicAttributeList_ = java.util.Collections.unmodifiableList(basicAttributeList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          attributesGrowthList_ = java.util.Collections.unmodifiableList(attributesGrowthList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          resistanceList_ = java.util.Collections.unmodifiableList(resistanceList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          commonAttackList_ = java.util.Collections.unmodifiableList(commonAttackList_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          initAssiveSkillList_ = java.util.Collections.unmodifiableList(initAssiveSkillList_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          elementMasterList_ = java.util.Collections.unmodifiableList(elementMasterList_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          raceRestrainList_ = java.util.Collections.unmodifiableList(raceRestrainList_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          debuffPatienceList_ = java.util.Collections.unmodifiableList(debuffPatienceList_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          effectTimeList_ = java.util.Collections.unmodifiableList(effectTimeList_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          actionTimeList_ = java.util.Collections.unmodifiableList(actionTimeList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Call_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Call_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.HeroProbuf.Call.class, com.cwa.prototype.protobuf.HeroProbuf.Call.Builder.class);
    }

    public static com.google.protobuf.Parser<Call> PARSER =
        new com.google.protobuf.AbstractParser<Call>() {
      public Call parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Call(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Call> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string heroName = 2;
    public static final int HERONAME_FIELD_NUMBER = 2;
    private java.lang.Object heroName_;
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public boolean hasHeroName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public java.lang.String getHeroName() {
      java.lang.Object ref = heroName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          heroName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string heroName = 2;</code>
     *
     * <pre>
     * 英雄名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeroNameBytes() {
      java.lang.Object ref = heroName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        heroName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 heroClass = 3;
    public static final int HEROCLASS_FIELD_NUMBER = 3;
    private int heroClass_;
    /**
     * <code>required int32 heroClass = 3;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    public boolean hasHeroClass() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 heroClass = 3;</code>
     *
     * <pre>
     * 种族
     * </pre>
     */
    public int getHeroClass() {
      return heroClass_;
    }

    // repeated int32 basicAttributeList = 4;
    public static final int BASICATTRIBUTELIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> basicAttributeList_;
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBasicAttributeListList() {
      return basicAttributeList_;
    }
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public int getBasicAttributeListCount() {
      return basicAttributeList_.size();
    }
    /**
     * <code>repeated int32 basicAttributeList = 4;</code>
     *
     * <pre>
     * 基础属性
     * </pre>
     */
    public int getBasicAttributeList(int index) {
      return basicAttributeList_.get(index);
    }

    // repeated int32 attributesGrowthList = 5;
    public static final int ATTRIBUTESGROWTHLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> attributesGrowthList_;
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAttributesGrowthListList() {
      return attributesGrowthList_;
    }
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    public int getAttributesGrowthListCount() {
      return attributesGrowthList_.size();
    }
    /**
     * <code>repeated int32 attributesGrowthList = 5;</code>
     *
     * <pre>
     * 属性成长
     * </pre>
     */
    public int getAttributesGrowthList(int index) {
      return attributesGrowthList_.get(index);
    }

    // repeated int32 resistanceList = 6;
    public static final int RESISTANCELIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> resistanceList_;
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getResistanceListList() {
      return resistanceList_;
    }
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public int getResistanceListCount() {
      return resistanceList_.size();
    }
    /**
     * <code>repeated int32 resistanceList = 6;</code>
     *
     * <pre>
     * 耐性
     * </pre>
     */
    public int getResistanceList(int index) {
      return resistanceList_.get(index);
    }

    // repeated int32 commonAttackList = 7;
    public static final int COMMONATTACKLIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> commonAttackList_;
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCommonAttackListList() {
      return commonAttackList_;
    }
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public int getCommonAttackListCount() {
      return commonAttackList_.size();
    }
    /**
     * <code>repeated int32 commonAttackList = 7;</code>
     *
     * <pre>
     * 普通攻击
     * </pre>
     */
    public int getCommonAttackList(int index) {
      return commonAttackList_.get(index);
    }

    // repeated int32 initAssiveSkillList = 8;
    public static final int INITASSIVESKILLLIST_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> initAssiveSkillList_;
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getInitAssiveSkillListList() {
      return initAssiveSkillList_;
    }
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    public int getInitAssiveSkillListCount() {
      return initAssiveSkillList_.size();
    }
    /**
     * <code>repeated int32 initAssiveSkillList = 8;</code>
     *
     * <pre>
     * 被动技能
     * </pre>
     */
    public int getInitAssiveSkillList(int index) {
      return initAssiveSkillList_.get(index);
    }

    // required int32 heroSize = 9;
    public static final int HEROSIZE_FIELD_NUMBER = 9;
    private int heroSize_;
    /**
     * <code>required int32 heroSize = 9;</code>
     *
     * <pre>
     * 大小
     * </pre>
     */
    public boolean hasHeroSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 heroSize = 9;</code>
     *
     * <pre>
     * 大小
     * </pre>
     */
    public int getHeroSize() {
      return heroSize_;
    }

    // repeated int32 elementMasterList = 10;
    public static final int ELEMENTMASTERLIST_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> elementMasterList_;
    /**
     * <code>repeated int32 elementMasterList = 10;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getElementMasterListList() {
      return elementMasterList_;
    }
    /**
     * <code>repeated int32 elementMasterList = 10;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public int getElementMasterListCount() {
      return elementMasterList_.size();
    }
    /**
     * <code>repeated int32 elementMasterList = 10;</code>
     *
     * <pre>
     * 元素专精
     * </pre>
     */
    public int getElementMasterList(int index) {
      return elementMasterList_.get(index);
    }

    // repeated int32 raceRestrainList = 11;
    public static final int RACERESTRAINLIST_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> raceRestrainList_;
    /**
     * <code>repeated int32 raceRestrainList = 11;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRaceRestrainListList() {
      return raceRestrainList_;
    }
    /**
     * <code>repeated int32 raceRestrainList = 11;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public int getRaceRestrainListCount() {
      return raceRestrainList_.size();
    }
    /**
     * <code>repeated int32 raceRestrainList = 11;</code>
     *
     * <pre>
     * 种族克制
     * </pre>
     */
    public int getRaceRestrainList(int index) {
      return raceRestrainList_.get(index);
    }

    // repeated int32 debuffPatienceList = 12;
    public static final int DEBUFFPATIENCELIST_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> debuffPatienceList_;
    /**
     * <code>repeated int32 debuffPatienceList = 12;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDebuffPatienceListList() {
      return debuffPatienceList_;
    }
    /**
     * <code>repeated int32 debuffPatienceList = 12;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public int getDebuffPatienceListCount() {
      return debuffPatienceList_.size();
    }
    /**
     * <code>repeated int32 debuffPatienceList = 12;</code>
     *
     * <pre>
     * DEBUFF耐性
     * </pre>
     */
    public int getDebuffPatienceList(int index) {
      return debuffPatienceList_.get(index);
    }

    // required string resource = 13;
    public static final int RESOURCE_FIELD_NUMBER = 13;
    private java.lang.Object resource_;
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public boolean hasResource() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public java.lang.String getResource() {
      java.lang.Object ref = resource_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resource_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string resource = 13;</code>
     *
     * <pre>
     * 资源
     * </pre>
     */
    public com.google.protobuf.ByteString
        getResourceBytes() {
      java.lang.Object ref = resource_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 effectTimeList = 14;
    public static final int EFFECTTIMELIST_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> effectTimeList_;
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEffectTimeListList() {
      return effectTimeList_;
    }
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public int getEffectTimeListCount() {
      return effectTimeList_.size();
    }
    /**
     * <code>repeated int32 effectTimeList = 14;</code>
     *
     * <pre>
     * 动作效果时间(普通攻击动作，近战，远程，吟唱）
     * </pre>
     */
    public int getEffectTimeList(int index) {
      return effectTimeList_.get(index);
    }

    // repeated int32 actionTimeList = 15;
    public static final int ACTIONTIMELIST_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> actionTimeList_;
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getActionTimeListList() {
      return actionTimeList_;
    }
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public int getActionTimeListCount() {
      return actionTimeList_.size();
    }
    /**
     * <code>repeated int32 actionTimeList = 15;</code>
     *
     * <pre>
     * 完整动作时间
     * </pre>
     */
    public int getActionTimeList(int index) {
      return actionTimeList_.get(index);
    }

    // required int32 heroScale = 16;
    public static final int HEROSCALE_FIELD_NUMBER = 16;
    private int heroScale_;
    /**
     * <code>required int32 heroScale = 16;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    public boolean hasHeroScale() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 heroScale = 16;</code>
     *
     * <pre>
     * 英雄大小
     * </pre>
     */
    public int getHeroScale() {
      return heroScale_;
    }

    private void initFields() {
      keyId_ = 0;
      heroName_ = "";
      heroClass_ = 0;
      basicAttributeList_ = java.util.Collections.emptyList();
      attributesGrowthList_ = java.util.Collections.emptyList();
      resistanceList_ = java.util.Collections.emptyList();
      commonAttackList_ = java.util.Collections.emptyList();
      initAssiveSkillList_ = java.util.Collections.emptyList();
      heroSize_ = 0;
      elementMasterList_ = java.util.Collections.emptyList();
      raceRestrainList_ = java.util.Collections.emptyList();
      debuffPatienceList_ = java.util.Collections.emptyList();
      resource_ = "";
      effectTimeList_ = java.util.Collections.emptyList();
      actionTimeList_ = java.util.Collections.emptyList();
      heroScale_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroClass()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResource()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeroScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getHeroNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, heroClass_);
      }
      for (int i = 0; i < basicAttributeList_.size(); i++) {
        output.writeInt32(4, basicAttributeList_.get(i));
      }
      for (int i = 0; i < attributesGrowthList_.size(); i++) {
        output.writeInt32(5, attributesGrowthList_.get(i));
      }
      for (int i = 0; i < resistanceList_.size(); i++) {
        output.writeInt32(6, resistanceList_.get(i));
      }
      for (int i = 0; i < commonAttackList_.size(); i++) {
        output.writeInt32(7, commonAttackList_.get(i));
      }
      for (int i = 0; i < initAssiveSkillList_.size(); i++) {
        output.writeInt32(8, initAssiveSkillList_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, heroSize_);
      }
      for (int i = 0; i < elementMasterList_.size(); i++) {
        output.writeInt32(10, elementMasterList_.get(i));
      }
      for (int i = 0; i < raceRestrainList_.size(); i++) {
        output.writeInt32(11, raceRestrainList_.get(i));
      }
      for (int i = 0; i < debuffPatienceList_.size(); i++) {
        output.writeInt32(12, debuffPatienceList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(13, getResourceBytes());
      }
      for (int i = 0; i < effectTimeList_.size(); i++) {
        output.writeInt32(14, effectTimeList_.get(i));
      }
      for (int i = 0; i < actionTimeList_.size(); i++) {
        output.writeInt32(15, actionTimeList_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(16, heroScale_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getHeroNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, heroClass_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < basicAttributeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(basicAttributeList_.get(i));
        }
        size += dataSize;
        size += 1 * getBasicAttributeListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributesGrowthList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(attributesGrowthList_.get(i));
        }
        size += dataSize;
        size += 1 * getAttributesGrowthListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < resistanceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(resistanceList_.get(i));
        }
        size += dataSize;
        size += 1 * getResistanceListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < commonAttackList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(commonAttackList_.get(i));
        }
        size += dataSize;
        size += 1 * getCommonAttackListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < initAssiveSkillList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(initAssiveSkillList_.get(i));
        }
        size += dataSize;
        size += 1 * getInitAssiveSkillListList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, heroSize_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < elementMasterList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(elementMasterList_.get(i));
        }
        size += dataSize;
        size += 1 * getElementMasterListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < raceRestrainList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(raceRestrainList_.get(i));
        }
        size += dataSize;
        size += 1 * getRaceRestrainListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < debuffPatienceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(debuffPatienceList_.get(i));
        }
        size += dataSize;
        size += 1 * getDebuffPatienceListList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getResourceBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < effectTimeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(effectTimeList_.get(i));
        }
        size += dataSize;
        size += 1 * getEffectTimeListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actionTimeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actionTimeList_.get(i));
        }
        size += dataSize;
        size += 1 * getActionTimeListList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, heroScale_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.Call parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.HeroProbuf.Call prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Call}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.HeroProbuf.CallOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Call_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Call_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.HeroProbuf.Call.class, com.cwa.prototype.protobuf.HeroProbuf.Call.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.HeroProbuf.Call.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        heroName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        heroClass_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        basicAttributeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        attributesGrowthList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        resistanceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        commonAttackList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        initAssiveSkillList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        heroSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        elementMasterList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        raceRestrainList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        debuffPatienceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        resource_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        effectTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        actionTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        heroScale_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_Call_descriptor;
      }

      public com.cwa.prototype.protobuf.HeroProbuf.Call getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.HeroProbuf.Call.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.HeroProbuf.Call build() {
        com.cwa.prototype.protobuf.HeroProbuf.Call result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.HeroProbuf.Call buildPartial() {
        com.cwa.prototype.protobuf.HeroProbuf.Call result = new com.cwa.prototype.protobuf.HeroProbuf.Call(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heroName_ = heroName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.heroClass_ = heroClass_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          basicAttributeList_ = java.util.Collections.unmodifiableList(basicAttributeList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.basicAttributeList_ = basicAttributeList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          attributesGrowthList_ = java.util.Collections.unmodifiableList(attributesGrowthList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.attributesGrowthList_ = attributesGrowthList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          resistanceList_ = java.util.Collections.unmodifiableList(resistanceList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.resistanceList_ = resistanceList_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          commonAttackList_ = java.util.Collections.unmodifiableList(commonAttackList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.commonAttackList_ = commonAttackList_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          initAssiveSkillList_ = java.util.Collections.unmodifiableList(initAssiveSkillList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.initAssiveSkillList_ = initAssiveSkillList_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.heroSize_ = heroSize_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          elementMasterList_ = java.util.Collections.unmodifiableList(elementMasterList_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.elementMasterList_ = elementMasterList_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          raceRestrainList_ = java.util.Collections.unmodifiableList(raceRestrainList_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.raceRestrainList_ = raceRestrainList_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          debuffPatienceList_ = java.util.Collections.unmodifiableList(debuffPatienceList_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.debuffPatienceList_ = debuffPatienceList_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000010;
        }
        result.resource_ = resource_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          effectTimeList_ = java.util.Collections.unmodifiableList(effectTimeList_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.effectTimeList_ = effectTimeList_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          actionTimeList_ = java.util.Collections.unmodifiableList(actionTimeList_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.actionTimeList_ = actionTimeList_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.heroScale_ = heroScale_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.HeroProbuf.Call) {
          return mergeFrom((com.cwa.prototype.protobuf.HeroProbuf.Call)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.HeroProbuf.Call other) {
        if (other == com.cwa.prototype.protobuf.HeroProbuf.Call.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasHeroName()) {
          bitField0_ |= 0x00000002;
          heroName_ = other.heroName_;
          onChanged();
        }
        if (other.hasHeroClass()) {
          setHeroClass(other.getHeroClass());
        }
        if (!other.basicAttributeList_.isEmpty()) {
          if (basicAttributeList_.isEmpty()) {
            basicAttributeList_ = other.basicAttributeList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBasicAttributeListIsMutable();
            basicAttributeList_.addAll(other.basicAttributeList_);
          }
          onChanged();
        }
        if (!other.attributesGrowthList_.isEmpty()) {
          if (attributesGrowthList_.isEmpty()) {
            attributesGrowthList_ = other.attributesGrowthList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAttributesGrowthListIsMutable();
            attributesGrowthList_.addAll(other.attributesGrowthList_);
          }
          onChanged();
        }
        if (!other.resistanceList_.isEmpty()) {
          if (resistanceList_.isEmpty()) {
            resistanceList_ = other.resistanceList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureResistanceListIsMutable();
            resistanceList_.addAll(other.resistanceList_);
          }
          onChanged();
        }
        if (!other.commonAttackList_.isEmpty()) {
          if (commonAttackList_.isEmpty()) {
            commonAttackList_ = other.commonAttackList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureCommonAttackListIsMutable();
            commonAttackList_.addAll(other.commonAttackList_);
          }
          onChanged();
        }
        if (!other.initAssiveSkillList_.isEmpty()) {
          if (initAssiveSkillList_.isEmpty()) {
            initAssiveSkillList_ = other.initAssiveSkillList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureInitAssiveSkillListIsMutable();
            initAssiveSkillList_.addAll(other.initAssiveSkillList_);
          }
          onChanged();
        }
        if (other.hasHeroSize()) {
          setHeroSize(other.getHeroSize());
        }
        if (!other.elementMasterList_.isEmpty()) {
          if (elementMasterList_.isEmpty()) {
            elementMasterList_ = other.elementMasterList_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureElementMasterListIsMutable();
            elementMasterList_.addAll(other.elementMasterList_);
          }
          onChanged();
        }
        if (!other.raceRestrainList_.isEmpty()) {
          if (raceRestrainList_.isEmpty()) {
            raceRestrainList_ = other.raceRestrainList_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureRaceRestrainListIsMutable();
            raceRestrainList_.addAll(other.raceRestrainList_);
          }
          onChanged();
        }
        if (!other.debuffPatienceList_.isEmpty()) {
          if (debuffPatienceList_.isEmpty()) {
            debuffPatienceList_ = other.debuffPatienceList_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureDebuffPatienceListIsMutable();
            debuffPatienceList_.addAll(other.debuffPatienceList_);
          }
          onChanged();
        }
        if (other.hasResource()) {
          bitField0_ |= 0x00001000;
          resource_ = other.resource_;
          onChanged();
        }
        if (!other.effectTimeList_.isEmpty()) {
          if (effectTimeList_.isEmpty()) {
            effectTimeList_ = other.effectTimeList_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureEffectTimeListIsMutable();
            effectTimeList_.addAll(other.effectTimeList_);
          }
          onChanged();
        }
        if (!other.actionTimeList_.isEmpty()) {
          if (actionTimeList_.isEmpty()) {
            actionTimeList_ = other.actionTimeList_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureActionTimeListIsMutable();
            actionTimeList_.addAll(other.actionTimeList_);
          }
          onChanged();
        }
        if (other.hasHeroScale()) {
          setHeroScale(other.getHeroScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasHeroName()) {
          
          return false;
        }
        if (!hasHeroClass()) {
          
          return false;
        }
        if (!hasHeroSize()) {
          
          return false;
        }
        if (!hasResource()) {
          
          return false;
        }
        if (!hasHeroScale()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.HeroProbuf.Call parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.HeroProbuf.Call) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * ID
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string heroName = 2;
      private java.lang.Object heroName_ = "";
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public boolean hasHeroName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public java.lang.String getHeroName() {
        java.lang.Object ref = heroName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          heroName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeroNameBytes() {
        java.lang.Object ref = heroName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          heroName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder setHeroName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        heroName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder clearHeroName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heroName_ = getDefaultInstance().getHeroName();
        onChanged();
        return this;
      }
      /**
       * <code>required string heroName = 2;</code>
       *
       * <pre>
       * 英雄名
       * </pre>
       */
      public Builder setHeroNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        heroName_ = value;
        onChanged();
        return this;
      }

      // required int32 heroClass = 3;
      private int heroClass_ ;
      /**
       * <code>required int32 heroClass = 3;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public boolean hasHeroClass() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 heroClass = 3;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public int getHeroClass() {
        return heroClass_;
      }
      /**
       * <code>required int32 heroClass = 3;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public Builder setHeroClass(int value) {
        bitField0_ |= 0x00000004;
        heroClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroClass = 3;</code>
       *
       * <pre>
       * 种族
       * </pre>
       */
      public Builder clearHeroClass() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heroClass_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 basicAttributeList = 4;
      private java.util.List<java.lang.Integer> basicAttributeList_ = java.util.Collections.emptyList();
      private void ensureBasicAttributeListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          basicAttributeList_ = new java.util.ArrayList<java.lang.Integer>(basicAttributeList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBasicAttributeListList() {
        return java.util.Collections.unmodifiableList(basicAttributeList_);
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public int getBasicAttributeListCount() {
        return basicAttributeList_.size();
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public int getBasicAttributeList(int index) {
        return basicAttributeList_.get(index);
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder setBasicAttributeList(
          int index, int value) {
        ensureBasicAttributeListIsMutable();
        basicAttributeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder addBasicAttributeList(int value) {
        ensureBasicAttributeListIsMutable();
        basicAttributeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder addAllBasicAttributeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBasicAttributeListIsMutable();
        super.addAll(values, basicAttributeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 basicAttributeList = 4;</code>
       *
       * <pre>
       * 基础属性
       * </pre>
       */
      public Builder clearBasicAttributeList() {
        basicAttributeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 attributesGrowthList = 5;
      private java.util.List<java.lang.Integer> attributesGrowthList_ = java.util.Collections.emptyList();
      private void ensureAttributesGrowthListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          attributesGrowthList_ = new java.util.ArrayList<java.lang.Integer>(attributesGrowthList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAttributesGrowthListList() {
        return java.util.Collections.unmodifiableList(attributesGrowthList_);
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public int getAttributesGrowthListCount() {
        return attributesGrowthList_.size();
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public int getAttributesGrowthList(int index) {
        return attributesGrowthList_.get(index);
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public Builder setAttributesGrowthList(
          int index, int value) {
        ensureAttributesGrowthListIsMutable();
        attributesGrowthList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public Builder addAttributesGrowthList(int value) {
        ensureAttributesGrowthListIsMutable();
        attributesGrowthList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public Builder addAllAttributesGrowthList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttributesGrowthListIsMutable();
        super.addAll(values, attributesGrowthList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributesGrowthList = 5;</code>
       *
       * <pre>
       * 属性成长
       * </pre>
       */
      public Builder clearAttributesGrowthList() {
        attributesGrowthList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 resistanceList = 6;
      private java.util.List<java.lang.Integer> resistanceList_ = java.util.Collections.emptyList();
      private void ensureResistanceListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          resistanceList_ = new java.util.ArrayList<java.lang.Integer>(resistanceList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getResistanceListList() {
        return java.util.Collections.unmodifiableList(resistanceList_);
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public int getResistanceListCount() {
        return resistanceList_.size();
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public int getResistanceList(int index) {
        return resistanceList_.get(index);
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder setResistanceList(
          int index, int value) {
        ensureResistanceListIsMutable();
        resistanceList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder addResistanceList(int value) {
        ensureResistanceListIsMutable();
        resistanceList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder addAllResistanceList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureResistanceListIsMutable();
        super.addAll(values, resistanceList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 resistanceList = 6;</code>
       *
       * <pre>
       * 耐性
       * </pre>
       */
      public Builder clearResistanceList() {
        resistanceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 commonAttackList = 7;
      private java.util.List<java.lang.Integer> commonAttackList_ = java.util.Collections.emptyList();
      private void ensureCommonAttackListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          commonAttackList_ = new java.util.ArrayList<java.lang.Integer>(commonAttackList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCommonAttackListList() {
        return java.util.Collections.unmodifiableList(commonAttackList_);
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public int getCommonAttackListCount() {
        return commonAttackList_.size();
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public int getCommonAttackList(int index) {
        return commonAttackList_.get(index);
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder setCommonAttackList(
          int index, int value) {
        ensureCommonAttackListIsMutable();
        commonAttackList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder addCommonAttackList(int value) {
        ensureCommonAttackListIsMutable();
        commonAttackList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder addAllCommonAttackList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCommonAttackListIsMutable();
        super.addAll(values, commonAttackList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 commonAttackList = 7;</code>
       *
       * <pre>
       * 普通攻击
       * </pre>
       */
      public Builder clearCommonAttackList() {
        commonAttackList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 initAssiveSkillList = 8;
      private java.util.List<java.lang.Integer> initAssiveSkillList_ = java.util.Collections.emptyList();
      private void ensureInitAssiveSkillListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          initAssiveSkillList_ = new java.util.ArrayList<java.lang.Integer>(initAssiveSkillList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getInitAssiveSkillListList() {
        return java.util.Collections.unmodifiableList(initAssiveSkillList_);
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public int getInitAssiveSkillListCount() {
        return initAssiveSkillList_.size();
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public int getInitAssiveSkillList(int index) {
        return initAssiveSkillList_.get(index);
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public Builder setInitAssiveSkillList(
          int index, int value) {
        ensureInitAssiveSkillListIsMutable();
        initAssiveSkillList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public Builder addInitAssiveSkillList(int value) {
        ensureInitAssiveSkillListIsMutable();
        initAssiveSkillList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public Builder addAllInitAssiveSkillList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInitAssiveSkillListIsMutable();
        super.addAll(values, initAssiveSkillList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 initAssiveSkillList = 8;</code>
       *
       * <pre>
       * 被动技能
       * </pre>
       */
      public Builder clearInitAssiveSkillList() {
        initAssiveSkillList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // required int32 heroSize = 9;
      private int heroSize_ ;
      /**
       * <code>required int32 heroSize = 9;</code>
       *
       * <pre>
       * 大小
       * </pre>
       */
      public boolean hasHeroSize() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 heroSize = 9;</code>
       *
       * <pre>
       * 大小
       * </pre>
       */
      public int getHeroSize() {
        return heroSize_;
      }
      /**
       * <code>required int32 heroSize = 9;</code>
       *
       * <pre>
       * 大小
       * </pre>
       */
      public Builder setHeroSize(int value) {
        bitField0_ |= 0x00000100;
        heroSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroSize = 9;</code>
       *
       * <pre>
       * 大小
       * </pre>
       */
      public Builder clearHeroSize() {
        bitField0_ = (bitField0_ & ~0x00000100);
        heroSize_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 elementMasterList = 10;
      private java.util.List<java.lang.Integer> elementMasterList_ = java.util.Collections.emptyList();
      private void ensureElementMasterListIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          elementMasterList_ = new java.util.ArrayList<java.lang.Integer>(elementMasterList_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 elementMasterList = 10;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getElementMasterListList() {
        return java.util.Collections.unmodifiableList(elementMasterList_);
      }
      /**
       * <code>repeated int32 elementMasterList = 10;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public int getElementMasterListCount() {
        return elementMasterList_.size();
      }
      /**
       * <code>repeated int32 elementMasterList = 10;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public int getElementMasterList(int index) {
        return elementMasterList_.get(index);
      }
      /**
       * <code>repeated int32 elementMasterList = 10;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder setElementMasterList(
          int index, int value) {
        ensureElementMasterListIsMutable();
        elementMasterList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 10;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder addElementMasterList(int value) {
        ensureElementMasterListIsMutable();
        elementMasterList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 10;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder addAllElementMasterList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureElementMasterListIsMutable();
        super.addAll(values, elementMasterList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 elementMasterList = 10;</code>
       *
       * <pre>
       * 元素专精
       * </pre>
       */
      public Builder clearElementMasterList() {
        elementMasterList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 raceRestrainList = 11;
      private java.util.List<java.lang.Integer> raceRestrainList_ = java.util.Collections.emptyList();
      private void ensureRaceRestrainListIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          raceRestrainList_ = new java.util.ArrayList<java.lang.Integer>(raceRestrainList_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 raceRestrainList = 11;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRaceRestrainListList() {
        return java.util.Collections.unmodifiableList(raceRestrainList_);
      }
      /**
       * <code>repeated int32 raceRestrainList = 11;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public int getRaceRestrainListCount() {
        return raceRestrainList_.size();
      }
      /**
       * <code>repeated int32 raceRestrainList = 11;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public int getRaceRestrainList(int index) {
        return raceRestrainList_.get(index);
      }
      /**
       * <code>repeated int32 raceRestrainList = 11;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder setRaceRestrainList(
          int index, int value) {
        ensureRaceRestrainListIsMutable();
        raceRestrainList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 11;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder addRaceRestrainList(int value) {
        ensureRaceRestrainListIsMutable();
        raceRestrainList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 11;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder addAllRaceRestrainList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRaceRestrainListIsMutable();
        super.addAll(values, raceRestrainList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raceRestrainList = 11;</code>
       *
       * <pre>
       * 种族克制
       * </pre>
       */
      public Builder clearRaceRestrainList() {
        raceRestrainList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 debuffPatienceList = 12;
      private java.util.List<java.lang.Integer> debuffPatienceList_ = java.util.Collections.emptyList();
      private void ensureDebuffPatienceListIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          debuffPatienceList_ = new java.util.ArrayList<java.lang.Integer>(debuffPatienceList_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 debuffPatienceList = 12;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDebuffPatienceListList() {
        return java.util.Collections.unmodifiableList(debuffPatienceList_);
      }
      /**
       * <code>repeated int32 debuffPatienceList = 12;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public int getDebuffPatienceListCount() {
        return debuffPatienceList_.size();
      }
      /**
       * <code>repeated int32 debuffPatienceList = 12;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public int getDebuffPatienceList(int index) {
        return debuffPatienceList_.get(index);
      }
      /**
       * <code>repeated int32 debuffPatienceList = 12;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder setDebuffPatienceList(
          int index, int value) {
        ensureDebuffPatienceListIsMutable();
        debuffPatienceList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 12;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder addDebuffPatienceList(int value) {
        ensureDebuffPatienceListIsMutable();
        debuffPatienceList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 12;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder addAllDebuffPatienceList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDebuffPatienceListIsMutable();
        super.addAll(values, debuffPatienceList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 debuffPatienceList = 12;</code>
       *
       * <pre>
       * DEBUFF耐性
       * </pre>
       */
      public Builder clearDebuffPatienceList() {
        debuffPatienceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // required string resource = 13;
      private java.lang.Object resource_ = "";
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public boolean hasResource() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public java.lang.String getResource() {
        java.lang.Object ref = resource_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          resource_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public com.google.protobuf.ByteString
          getResourceBytes() {
        java.lang.Object ref = resource_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resource_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder setResource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        resource_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder clearResource() {
        bitField0_ = (bitField0_ & ~0x00001000);
        resource_ = getDefaultInstance().getResource();
        onChanged();
        return this;
      }
      /**
       * <code>required string resource = 13;</code>
       *
       * <pre>
       * 资源
       * </pre>
       */
      public Builder setResourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        resource_ = value;
        onChanged();
        return this;
      }

      // repeated int32 effectTimeList = 14;
      private java.util.List<java.lang.Integer> effectTimeList_ = java.util.Collections.emptyList();
      private void ensureEffectTimeListIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          effectTimeList_ = new java.util.ArrayList<java.lang.Integer>(effectTimeList_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEffectTimeListList() {
        return java.util.Collections.unmodifiableList(effectTimeList_);
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public int getEffectTimeListCount() {
        return effectTimeList_.size();
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public int getEffectTimeList(int index) {
        return effectTimeList_.get(index);
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder setEffectTimeList(
          int index, int value) {
        ensureEffectTimeListIsMutable();
        effectTimeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder addEffectTimeList(int value) {
        ensureEffectTimeListIsMutable();
        effectTimeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder addAllEffectTimeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEffectTimeListIsMutable();
        super.addAll(values, effectTimeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 effectTimeList = 14;</code>
       *
       * <pre>
       * 动作效果时间(普通攻击动作，近战，远程，吟唱）
       * </pre>
       */
      public Builder clearEffectTimeList() {
        effectTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 actionTimeList = 15;
      private java.util.List<java.lang.Integer> actionTimeList_ = java.util.Collections.emptyList();
      private void ensureActionTimeListIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          actionTimeList_ = new java.util.ArrayList<java.lang.Integer>(actionTimeList_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getActionTimeListList() {
        return java.util.Collections.unmodifiableList(actionTimeList_);
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public int getActionTimeListCount() {
        return actionTimeList_.size();
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public int getActionTimeList(int index) {
        return actionTimeList_.get(index);
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder setActionTimeList(
          int index, int value) {
        ensureActionTimeListIsMutable();
        actionTimeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder addActionTimeList(int value) {
        ensureActionTimeListIsMutable();
        actionTimeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder addAllActionTimeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActionTimeListIsMutable();
        super.addAll(values, actionTimeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionTimeList = 15;</code>
       *
       * <pre>
       * 完整动作时间
       * </pre>
       */
      public Builder clearActionTimeList() {
        actionTimeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // required int32 heroScale = 16;
      private int heroScale_ ;
      /**
       * <code>required int32 heroScale = 16;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public boolean hasHeroScale() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 heroScale = 16;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public int getHeroScale() {
        return heroScale_;
      }
      /**
       * <code>required int32 heroScale = 16;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public Builder setHeroScale(int value) {
        bitField0_ |= 0x00008000;
        heroScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heroScale = 16;</code>
       *
       * <pre>
       * 英雄大小
       * </pre>
       */
      public Builder clearHeroScale() {
        bitField0_ = (bitField0_ & ~0x00008000);
        heroScale_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Call)
    }

    static {
      defaultInstance = new Call(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Call)
  }

  public interface HeroTrainOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 培养id
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 培养id
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string desc = 3;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // required int32 moneyType = 4;
    /**
     * <code>required int32 moneyType = 4;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    boolean hasMoneyType();
    /**
     * <code>required int32 moneyType = 4;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    int getMoneyType();

    // required int32 moneyCount = 5;
    /**
     * <code>required int32 moneyCount = 5;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    boolean hasMoneyCount();
    /**
     * <code>required int32 moneyCount = 5;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    int getMoneyCount();

    // required int32 scale = 6;
    /**
     * <code>required int32 scale = 6;</code>
     *
     * <pre>
     * 标尺
     * </pre>
     */
    boolean hasScale();
    /**
     * <code>required int32 scale = 6;</code>
     *
     * <pre>
     * 标尺
     * </pre>
     */
    int getScale();

    // required int32 maxraise = 7;
    /**
     * <code>required int32 maxraise = 7;</code>
     *
     * <pre>
     * 最大提高
     * </pre>
     */
    boolean hasMaxraise();
    /**
     * <code>required int32 maxraise = 7;</code>
     *
     * <pre>
     * 最大提高
     * </pre>
     */
    int getMaxraise();

    // required int32 maxreduce = 8;
    /**
     * <code>required int32 maxreduce = 8;</code>
     *
     * <pre>
     * 最大降低
     * </pre>
     */
    boolean hasMaxreduce();
    /**
     * <code>required int32 maxreduce = 8;</code>
     *
     * <pre>
     * 最大降低
     * </pre>
     */
    int getMaxreduce();

    // required int32 random = 9;
    /**
     * <code>required int32 random = 9;</code>
     *
     * <pre>
     * 乱数
     * </pre>
     */
    boolean hasRandom();
    /**
     * <code>required int32 random = 9;</code>
     *
     * <pre>
     * 乱数
     * </pre>
     */
    int getRandom();
  }
  /**
   * Protobuf type {@code HeroTrain}
   */
  public static final class HeroTrain extends
      com.google.protobuf.GeneratedMessage
      implements HeroTrainOrBuilder {
    // Use HeroTrain.newBuilder() to construct.
    private HeroTrain(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeroTrain(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeroTrain defaultInstance;
    public static HeroTrain getDefaultInstance() {
      return defaultInstance;
    }

    public HeroTrain getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeroTrain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              desc_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              moneyType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              moneyCount_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              scale_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              maxraise_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              maxreduce_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              random_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroTrain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroTrain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.HeroProbuf.HeroTrain.class, com.cwa.prototype.protobuf.HeroProbuf.HeroTrain.Builder.class);
    }

    public static com.google.protobuf.Parser<HeroTrain> PARSER =
        new com.google.protobuf.AbstractParser<HeroTrain>() {
      public HeroTrain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeroTrain(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeroTrain> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 培养id
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 培养id
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string desc = 3;
    public static final int DESC_FIELD_NUMBER = 3;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 文字说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 moneyType = 4;
    public static final int MONEYTYPE_FIELD_NUMBER = 4;
    private int moneyType_;
    /**
     * <code>required int32 moneyType = 4;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    public boolean hasMoneyType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 moneyType = 4;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    public int getMoneyType() {
      return moneyType_;
    }

    // required int32 moneyCount = 5;
    public static final int MONEYCOUNT_FIELD_NUMBER = 5;
    private int moneyCount_;
    /**
     * <code>required int32 moneyCount = 5;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    public boolean hasMoneyCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 moneyCount = 5;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    public int getMoneyCount() {
      return moneyCount_;
    }

    // required int32 scale = 6;
    public static final int SCALE_FIELD_NUMBER = 6;
    private int scale_;
    /**
     * <code>required int32 scale = 6;</code>
     *
     * <pre>
     * 标尺
     * </pre>
     */
    public boolean hasScale() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 scale = 6;</code>
     *
     * <pre>
     * 标尺
     * </pre>
     */
    public int getScale() {
      return scale_;
    }

    // required int32 maxraise = 7;
    public static final int MAXRAISE_FIELD_NUMBER = 7;
    private int maxraise_;
    /**
     * <code>required int32 maxraise = 7;</code>
     *
     * <pre>
     * 最大提高
     * </pre>
     */
    public boolean hasMaxraise() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 maxraise = 7;</code>
     *
     * <pre>
     * 最大提高
     * </pre>
     */
    public int getMaxraise() {
      return maxraise_;
    }

    // required int32 maxreduce = 8;
    public static final int MAXREDUCE_FIELD_NUMBER = 8;
    private int maxreduce_;
    /**
     * <code>required int32 maxreduce = 8;</code>
     *
     * <pre>
     * 最大降低
     * </pre>
     */
    public boolean hasMaxreduce() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 maxreduce = 8;</code>
     *
     * <pre>
     * 最大降低
     * </pre>
     */
    public int getMaxreduce() {
      return maxreduce_;
    }

    // required int32 random = 9;
    public static final int RANDOM_FIELD_NUMBER = 9;
    private int random_;
    /**
     * <code>required int32 random = 9;</code>
     *
     * <pre>
     * 乱数
     * </pre>
     */
    public boolean hasRandom() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 random = 9;</code>
     *
     * <pre>
     * 乱数
     * </pre>
     */
    public int getRandom() {
      return random_;
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      desc_ = "";
      moneyType_ = 0;
      moneyCount_ = 0;
      scale_ = 0;
      maxraise_ = 0;
      maxreduce_ = 0;
      random_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMoneyType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMoneyCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxraise()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxreduce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRandom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, moneyType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, moneyCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, scale_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, maxraise_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, maxreduce_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, random_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, moneyType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, moneyCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, scale_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxraise_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, maxreduce_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, random_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.HeroProbuf.HeroTrain prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeroTrain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.HeroProbuf.HeroTrainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroTrain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroTrain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.HeroProbuf.HeroTrain.class, com.cwa.prototype.protobuf.HeroProbuf.HeroTrain.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.HeroProbuf.HeroTrain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        moneyType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        moneyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        scale_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxraise_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxreduce_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        random_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.HeroProbuf.internal_static_HeroTrain_descriptor;
      }

      public com.cwa.prototype.protobuf.HeroProbuf.HeroTrain getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.HeroProbuf.HeroTrain.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.HeroProbuf.HeroTrain build() {
        com.cwa.prototype.protobuf.HeroProbuf.HeroTrain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.HeroProbuf.HeroTrain buildPartial() {
        com.cwa.prototype.protobuf.HeroProbuf.HeroTrain result = new com.cwa.prototype.protobuf.HeroProbuf.HeroTrain(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.moneyType_ = moneyType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.moneyCount_ = moneyCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.scale_ = scale_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxraise_ = maxraise_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxreduce_ = maxreduce_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.random_ = random_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.HeroProbuf.HeroTrain) {
          return mergeFrom((com.cwa.prototype.protobuf.HeroProbuf.HeroTrain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.HeroProbuf.HeroTrain other) {
        if (other == com.cwa.prototype.protobuf.HeroProbuf.HeroTrain.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000004;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasMoneyType()) {
          setMoneyType(other.getMoneyType());
        }
        if (other.hasMoneyCount()) {
          setMoneyCount(other.getMoneyCount());
        }
        if (other.hasScale()) {
          setScale(other.getScale());
        }
        if (other.hasMaxraise()) {
          setMaxraise(other.getMaxraise());
        }
        if (other.hasMaxreduce()) {
          setMaxreduce(other.getMaxreduce());
        }
        if (other.hasRandom()) {
          setRandom(other.getRandom());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        if (!hasMoneyType()) {
          
          return false;
        }
        if (!hasMoneyCount()) {
          
          return false;
        }
        if (!hasScale()) {
          
          return false;
        }
        if (!hasMaxraise()) {
          
          return false;
        }
        if (!hasMaxreduce()) {
          
          return false;
        }
        if (!hasRandom()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.HeroProbuf.HeroTrain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.HeroProbuf.HeroTrain) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 培养id
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 培养id
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 培养id
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 培养id
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string desc = 3;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 文字说明
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }

      // required int32 moneyType = 4;
      private int moneyType_ ;
      /**
       * <code>required int32 moneyType = 4;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public boolean hasMoneyType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 moneyType = 4;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public int getMoneyType() {
        return moneyType_;
      }
      /**
       * <code>required int32 moneyType = 4;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public Builder setMoneyType(int value) {
        bitField0_ |= 0x00000008;
        moneyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 moneyType = 4;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public Builder clearMoneyType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        moneyType_ = 0;
        onChanged();
        return this;
      }

      // required int32 moneyCount = 5;
      private int moneyCount_ ;
      /**
       * <code>required int32 moneyCount = 5;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public boolean hasMoneyCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 moneyCount = 5;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public int getMoneyCount() {
        return moneyCount_;
      }
      /**
       * <code>required int32 moneyCount = 5;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public Builder setMoneyCount(int value) {
        bitField0_ |= 0x00000010;
        moneyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 moneyCount = 5;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public Builder clearMoneyCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        moneyCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 scale = 6;
      private int scale_ ;
      /**
       * <code>required int32 scale = 6;</code>
       *
       * <pre>
       * 标尺
       * </pre>
       */
      public boolean hasScale() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 scale = 6;</code>
       *
       * <pre>
       * 标尺
       * </pre>
       */
      public int getScale() {
        return scale_;
      }
      /**
       * <code>required int32 scale = 6;</code>
       *
       * <pre>
       * 标尺
       * </pre>
       */
      public Builder setScale(int value) {
        bitField0_ |= 0x00000020;
        scale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 scale = 6;</code>
       *
       * <pre>
       * 标尺
       * </pre>
       */
      public Builder clearScale() {
        bitField0_ = (bitField0_ & ~0x00000020);
        scale_ = 0;
        onChanged();
        return this;
      }

      // required int32 maxraise = 7;
      private int maxraise_ ;
      /**
       * <code>required int32 maxraise = 7;</code>
       *
       * <pre>
       * 最大提高
       * </pre>
       */
      public boolean hasMaxraise() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 maxraise = 7;</code>
       *
       * <pre>
       * 最大提高
       * </pre>
       */
      public int getMaxraise() {
        return maxraise_;
      }
      /**
       * <code>required int32 maxraise = 7;</code>
       *
       * <pre>
       * 最大提高
       * </pre>
       */
      public Builder setMaxraise(int value) {
        bitField0_ |= 0x00000040;
        maxraise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxraise = 7;</code>
       *
       * <pre>
       * 最大提高
       * </pre>
       */
      public Builder clearMaxraise() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxraise_ = 0;
        onChanged();
        return this;
      }

      // required int32 maxreduce = 8;
      private int maxreduce_ ;
      /**
       * <code>required int32 maxreduce = 8;</code>
       *
       * <pre>
       * 最大降低
       * </pre>
       */
      public boolean hasMaxreduce() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 maxreduce = 8;</code>
       *
       * <pre>
       * 最大降低
       * </pre>
       */
      public int getMaxreduce() {
        return maxreduce_;
      }
      /**
       * <code>required int32 maxreduce = 8;</code>
       *
       * <pre>
       * 最大降低
       * </pre>
       */
      public Builder setMaxreduce(int value) {
        bitField0_ |= 0x00000080;
        maxreduce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxreduce = 8;</code>
       *
       * <pre>
       * 最大降低
       * </pre>
       */
      public Builder clearMaxreduce() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxreduce_ = 0;
        onChanged();
        return this;
      }

      // required int32 random = 9;
      private int random_ ;
      /**
       * <code>required int32 random = 9;</code>
       *
       * <pre>
       * 乱数
       * </pre>
       */
      public boolean hasRandom() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 random = 9;</code>
       *
       * <pre>
       * 乱数
       * </pre>
       */
      public int getRandom() {
        return random_;
      }
      /**
       * <code>required int32 random = 9;</code>
       *
       * <pre>
       * 乱数
       * </pre>
       */
      public Builder setRandom(int value) {
        bitField0_ |= 0x00000100;
        random_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 random = 9;</code>
       *
       * <pre>
       * 乱数
       * </pre>
       */
      public Builder clearRandom() {
        bitField0_ = (bitField0_ & ~0x00000100);
        random_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeroTrain)
    }

    static {
      defaultInstance = new HeroTrain(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeroTrain)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Hero_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Hero_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HeroGrade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeroGrade_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Call_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Call_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HeroTrain_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeroTrain_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020HeroProbuf.proto\"\375\001\n\004Hero\022\r\n\005keyId\030\001 \002" +
      "(\005\022\020\n\010heroName\030\002 \002(\t\022\021\n\theroClass\030\003 \002(\005\022" +
      "\014\n\004type\030\004 \002(\005\022\r\n\005grade\030\005 \002(\t\022\020\n\010heroSize" +
      "\030\006 \002(\005\022\023\n\013requireItem\030\007 \002(\005\022\021\n\titemCount" +
      "\030\010 \002(\005\022\025\n\requipmentList\030\t \003(\005\022\020\n\010resourc" +
      "e\030\n \002(\t\022\026\n\016effectTimeList\030\013 \003(\005\022\026\n\016actio" +
      "nTimeList\030\014 \003(\005\022\021\n\theroScale\030\r \002(\005\"\265\003\n\tH" +
      "eroGrade\022\r\n\005keyId\030\001 \002(\005\022\017\n\007quality\030\002 \002(\005" +
      "\022\022\n\nstartLevel\030\003 \002(\005\022\032\n\022basicAttributeLi" +
      "st\030\004 \003(\005\022\034\n\024attributesGrowthList\030\005 \003(\005\022\026",
      "\n\016resistanceList\030\006 \003(\005\022\030\n\020commonAttackLi" +
      "st\030\007 \003(\005\022\033\n\023initAssiveSkillList\030\010 \003(\005\022\021\n" +
      "\tnextLevel\030\t \002(\005\022\024\n\014needItemList\030\n \003(\005\022\025" +
      "\n\rneedCountList\030\013 \003(\005\022\031\n\021elementMasterLi" +
      "st\030\014 \003(\005\022\030\n\020raceRestrainList\030\r \003(\005\022\032\n\022de" +
      "buffPatienceList\030\016 \003(\005\022\021\n\tneedLevel\030\017 \002(" +
      "\005\022\024\n\014patiencesMax\030\020 \002(\005\022\026\n\016requireMoneyI" +
      "d\030\021 \002(\005\022\031\n\021requireMoneyCount\030\022 \002(\005\"\373\002\n\004C" +
      "all\022\r\n\005keyId\030\001 \002(\005\022\020\n\010heroName\030\002 \002(\t\022\021\n\t" +
      "heroClass\030\003 \002(\005\022\032\n\022basicAttributeList\030\004 ",
      "\003(\005\022\034\n\024attributesGrowthList\030\005 \003(\005\022\026\n\016res" +
      "istanceList\030\006 \003(\005\022\030\n\020commonAttackList\030\007 " +
      "\003(\005\022\033\n\023initAssiveSkillList\030\010 \003(\005\022\020\n\010hero" +
      "Size\030\t \002(\005\022\031\n\021elementMasterList\030\n \003(\005\022\030\n" +
      "\020raceRestrainList\030\013 \003(\005\022\032\n\022debuffPatienc" +
      "eList\030\014 \003(\005\022\020\n\010resource\030\r \002(\t\022\026\n\016effectT" +
      "imeList\030\016 \003(\005\022\026\n\016actionTimeList\030\017 \003(\005\022\021\n" +
      "\theroScale\030\020 \002(\005\"\241\001\n\tHeroTrain\022\r\n\005keyId\030" +
      "\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\014\n\004desc\030\003 \002(\t\022\021\n\tmon" +
      "eyType\030\004 \002(\005\022\022\n\nmoneyCount\030\005 \002(\005\022\r\n\005scal",
      "e\030\006 \002(\005\022\020\n\010maxraise\030\007 \002(\005\022\021\n\tmaxreduce\030\010" +
      " \002(\005\022\016\n\006random\030\t \002(\005B(\n\032com.cwa.prototyp" +
      "e.protobufB\nHeroProbuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Hero_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Hero_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Hero_descriptor,
              new java.lang.String[] { "KeyId", "HeroName", "HeroClass", "Type", "Grade", "HeroSize", "RequireItem", "ItemCount", "EquipmentList", "Resource", "EffectTimeList", "ActionTimeList", "HeroScale", });
          internal_static_HeroGrade_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_HeroGrade_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HeroGrade_descriptor,
              new java.lang.String[] { "KeyId", "Quality", "StartLevel", "BasicAttributeList", "AttributesGrowthList", "ResistanceList", "CommonAttackList", "InitAssiveSkillList", "NextLevel", "NeedItemList", "NeedCountList", "ElementMasterList", "RaceRestrainList", "DebuffPatienceList", "NeedLevel", "PatiencesMax", "RequireMoneyId", "RequireMoneyCount", });
          internal_static_Call_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Call_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Call_descriptor,
              new java.lang.String[] { "KeyId", "HeroName", "HeroClass", "BasicAttributeList", "AttributesGrowthList", "ResistanceList", "CommonAttackList", "InitAssiveSkillList", "HeroSize", "ElementMasterList", "RaceRestrainList", "DebuffPatienceList", "Resource", "EffectTimeList", "ActionTimeList", "HeroScale", });
          internal_static_HeroTrain_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_HeroTrain_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HeroTrain_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Desc", "MoneyType", "MoneyCount", "Scale", "Maxraise", "Maxreduce", "Random", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
