// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VipProbuf.proto

package com.cwa.prototype.protobuf;

public final class VipProbuf {
  private VipProbuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VipOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * vip名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * vip名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * vip名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string desc = 3;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * vip描述
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * vip描述
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * vip描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // required int32 requireMoneyId = 4;
    /**
     * <code>required int32 requireMoneyId = 4;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    boolean hasRequireMoneyId();
    /**
     * <code>required int32 requireMoneyId = 4;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    int getRequireMoneyId();

    // required int32 requireMoneyCount = 5;
    /**
     * <code>required int32 requireMoneyCount = 5;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    boolean hasRequireMoneyCount();
    /**
     * <code>required int32 requireMoneyCount = 5;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    int getRequireMoneyCount();
  }
  /**
   * Protobuf type {@code Vip}
   */
  public static final class Vip extends
      com.google.protobuf.GeneratedMessage
      implements VipOrBuilder {
    // Use Vip.newBuilder() to construct.
    private Vip(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vip(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vip defaultInstance;
    public static Vip getDefaultInstance() {
      return defaultInstance;
    }

    public Vip getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vip(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              desc_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              requireMoneyId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              requireMoneyCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vip_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.VipProbuf.Vip.class, com.cwa.prototype.protobuf.VipProbuf.Vip.Builder.class);
    }

    public static com.google.protobuf.Parser<Vip> PARSER =
        new com.google.protobuf.AbstractParser<Vip>() {
      public Vip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vip(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vip> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * vip名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * vip名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * vip名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string desc = 3;
    public static final int DESC_FIELD_NUMBER = 3;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * vip描述
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * vip描述
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * vip描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 requireMoneyId = 4;
    public static final int REQUIREMONEYID_FIELD_NUMBER = 4;
    private int requireMoneyId_;
    /**
     * <code>required int32 requireMoneyId = 4;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    public boolean hasRequireMoneyId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 requireMoneyId = 4;</code>
     *
     * <pre>
     * 需要货币类型
     * </pre>
     */
    public int getRequireMoneyId() {
      return requireMoneyId_;
    }

    // required int32 requireMoneyCount = 5;
    public static final int REQUIREMONEYCOUNT_FIELD_NUMBER = 5;
    private int requireMoneyCount_;
    /**
     * <code>required int32 requireMoneyCount = 5;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    public boolean hasRequireMoneyCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 requireMoneyCount = 5;</code>
     *
     * <pre>
     * 需要货币数量
     * </pre>
     */
    public int getRequireMoneyCount() {
      return requireMoneyCount_;
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      desc_ = "";
      requireMoneyId_ = 0;
      requireMoneyCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, requireMoneyCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, requireMoneyCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.VipProbuf.Vip prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Vip}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.VipProbuf.VipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vip_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.VipProbuf.Vip.class, com.cwa.prototype.protobuf.VipProbuf.Vip.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.VipProbuf.Vip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        requireMoneyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        requireMoneyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vip_descriptor;
      }

      public com.cwa.prototype.protobuf.VipProbuf.Vip getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.VipProbuf.Vip.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.VipProbuf.Vip build() {
        com.cwa.prototype.protobuf.VipProbuf.Vip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.VipProbuf.Vip buildPartial() {
        com.cwa.prototype.protobuf.VipProbuf.Vip result = new com.cwa.prototype.protobuf.VipProbuf.Vip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.requireMoneyId_ = requireMoneyId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.requireMoneyCount_ = requireMoneyCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.VipProbuf.Vip) {
          return mergeFrom((com.cwa.prototype.protobuf.VipProbuf.Vip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.VipProbuf.Vip other) {
        if (other == com.cwa.prototype.protobuf.VipProbuf.Vip.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000004;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasRequireMoneyId()) {
          setRequireMoneyId(other.getRequireMoneyId());
        }
        if (other.hasRequireMoneyCount()) {
          setRequireMoneyCount(other.getRequireMoneyCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        if (!hasRequireMoneyId()) {
          
          return false;
        }
        if (!hasRequireMoneyCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.VipProbuf.Vip parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.VipProbuf.Vip) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * vip名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * vip名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * vip名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * vip名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * vip名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * vip名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string desc = 3;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * vip描述
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * vip描述
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * vip描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * vip描述
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * vip描述
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * vip描述
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }

      // required int32 requireMoneyId = 4;
      private int requireMoneyId_ ;
      /**
       * <code>required int32 requireMoneyId = 4;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public boolean hasRequireMoneyId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 requireMoneyId = 4;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public int getRequireMoneyId() {
        return requireMoneyId_;
      }
      /**
       * <code>required int32 requireMoneyId = 4;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public Builder setRequireMoneyId(int value) {
        bitField0_ |= 0x00000008;
        requireMoneyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyId = 4;</code>
       *
       * <pre>
       * 需要货币类型
       * </pre>
       */
      public Builder clearRequireMoneyId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        requireMoneyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireMoneyCount = 5;
      private int requireMoneyCount_ ;
      /**
       * <code>required int32 requireMoneyCount = 5;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public boolean hasRequireMoneyCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 requireMoneyCount = 5;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public int getRequireMoneyCount() {
        return requireMoneyCount_;
      }
      /**
       * <code>required int32 requireMoneyCount = 5;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public Builder setRequireMoneyCount(int value) {
        bitField0_ |= 0x00000010;
        requireMoneyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyCount = 5;</code>
       *
       * <pre>
       * 需要货币数量
       * </pre>
       */
      public Builder clearRequireMoneyCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        requireMoneyCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Vip)
    }

    static {
      defaultInstance = new Vip(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Vip)
  }

  public interface VipFunctionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 功能类型
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 功能类型
     * </pre>
     */
    int getKeyId();

    // repeated int32 vipBuynumList = 2;
    /**
     * <code>repeated int32 vipBuynumList = 2;</code>
     *
     * <pre>
     * 次数限制（VIP0至VIP12）
     * </pre>
     */
    java.util.List<java.lang.Integer> getVipBuynumListList();
    /**
     * <code>repeated int32 vipBuynumList = 2;</code>
     *
     * <pre>
     * 次数限制（VIP0至VIP12）
     * </pre>
     */
    int getVipBuynumListCount();
    /**
     * <code>repeated int32 vipBuynumList = 2;</code>
     *
     * <pre>
     * 次数限制（VIP0至VIP12）
     * </pre>
     */
    int getVipBuynumList(int index);

    // required int32 requireMoneyType = 3;
    /**
     * <code>required int32 requireMoneyType = 3;</code>
     *
     * <pre>
     * 刷新货币
     * </pre>
     */
    boolean hasRequireMoneyType();
    /**
     * <code>required int32 requireMoneyType = 3;</code>
     *
     * <pre>
     * 刷新货币
     * </pre>
     */
    int getRequireMoneyType();

    // repeated int32 requireMoneyCountList = 4;
    /**
     * <code>repeated int32 requireMoneyCountList = 4;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    java.util.List<java.lang.Integer> getRequireMoneyCountListList();
    /**
     * <code>repeated int32 requireMoneyCountList = 4;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    int getRequireMoneyCountListCount();
    /**
     * <code>repeated int32 requireMoneyCountList = 4;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    int getRequireMoneyCountList(int index);
  }
  /**
   * Protobuf type {@code VipFunction}
   */
  public static final class VipFunction extends
      com.google.protobuf.GeneratedMessage
      implements VipFunctionOrBuilder {
    // Use VipFunction.newBuilder() to construct.
    private VipFunction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VipFunction(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VipFunction defaultInstance;
    public static VipFunction getDefaultInstance() {
      return defaultInstance;
    }

    public VipFunction getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VipFunction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                vipBuynumList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              vipBuynumList_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                vipBuynumList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                vipBuynumList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              requireMoneyType_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                requireMoneyCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              requireMoneyCountList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                requireMoneyCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                requireMoneyCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          vipBuynumList_ = java.util.Collections.unmodifiableList(vipBuynumList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          requireMoneyCountList_ = java.util.Collections.unmodifiableList(requireMoneyCountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.VipProbuf.internal_static_VipFunction_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.VipProbuf.internal_static_VipFunction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.VipProbuf.VipFunction.class, com.cwa.prototype.protobuf.VipProbuf.VipFunction.Builder.class);
    }

    public static com.google.protobuf.Parser<VipFunction> PARSER =
        new com.google.protobuf.AbstractParser<VipFunction>() {
      public VipFunction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VipFunction(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VipFunction> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 功能类型
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 功能类型
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // repeated int32 vipBuynumList = 2;
    public static final int VIPBUYNUMLIST_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> vipBuynumList_;
    /**
     * <code>repeated int32 vipBuynumList = 2;</code>
     *
     * <pre>
     * 次数限制（VIP0至VIP12）
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getVipBuynumListList() {
      return vipBuynumList_;
    }
    /**
     * <code>repeated int32 vipBuynumList = 2;</code>
     *
     * <pre>
     * 次数限制（VIP0至VIP12）
     * </pre>
     */
    public int getVipBuynumListCount() {
      return vipBuynumList_.size();
    }
    /**
     * <code>repeated int32 vipBuynumList = 2;</code>
     *
     * <pre>
     * 次数限制（VIP0至VIP12）
     * </pre>
     */
    public int getVipBuynumList(int index) {
      return vipBuynumList_.get(index);
    }

    // required int32 requireMoneyType = 3;
    public static final int REQUIREMONEYTYPE_FIELD_NUMBER = 3;
    private int requireMoneyType_;
    /**
     * <code>required int32 requireMoneyType = 3;</code>
     *
     * <pre>
     * 刷新货币
     * </pre>
     */
    public boolean hasRequireMoneyType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 requireMoneyType = 3;</code>
     *
     * <pre>
     * 刷新货币
     * </pre>
     */
    public int getRequireMoneyType() {
      return requireMoneyType_;
    }

    // repeated int32 requireMoneyCountList = 4;
    public static final int REQUIREMONEYCOUNTLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> requireMoneyCountList_;
    /**
     * <code>repeated int32 requireMoneyCountList = 4;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRequireMoneyCountListList() {
      return requireMoneyCountList_;
    }
    /**
     * <code>repeated int32 requireMoneyCountList = 4;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    public int getRequireMoneyCountListCount() {
      return requireMoneyCountList_.size();
    }
    /**
     * <code>repeated int32 requireMoneyCountList = 4;</code>
     *
     * <pre>
     * 刷新需求
     * </pre>
     */
    public int getRequireMoneyCountList(int index) {
      return requireMoneyCountList_.get(index);
    }

    private void initFields() {
      keyId_ = 0;
      vipBuynumList_ = java.util.Collections.emptyList();
      requireMoneyType_ = 0;
      requireMoneyCountList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      for (int i = 0; i < vipBuynumList_.size(); i++) {
        output.writeInt32(2, vipBuynumList_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, requireMoneyType_);
      }
      for (int i = 0; i < requireMoneyCountList_.size(); i++) {
        output.writeInt32(4, requireMoneyCountList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vipBuynumList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(vipBuynumList_.get(i));
        }
        size += dataSize;
        size += 1 * getVipBuynumListList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, requireMoneyType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requireMoneyCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(requireMoneyCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getRequireMoneyCountListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.VipFunction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.VipProbuf.VipFunction prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code VipFunction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.VipProbuf.VipFunctionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_VipFunction_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_VipFunction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.VipProbuf.VipFunction.class, com.cwa.prototype.protobuf.VipProbuf.VipFunction.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.VipProbuf.VipFunction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        vipBuynumList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        requireMoneyType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        requireMoneyCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_VipFunction_descriptor;
      }

      public com.cwa.prototype.protobuf.VipProbuf.VipFunction getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.VipProbuf.VipFunction.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.VipProbuf.VipFunction build() {
        com.cwa.prototype.protobuf.VipProbuf.VipFunction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.VipProbuf.VipFunction buildPartial() {
        com.cwa.prototype.protobuf.VipProbuf.VipFunction result = new com.cwa.prototype.protobuf.VipProbuf.VipFunction(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          vipBuynumList_ = java.util.Collections.unmodifiableList(vipBuynumList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.vipBuynumList_ = vipBuynumList_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requireMoneyType_ = requireMoneyType_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          requireMoneyCountList_ = java.util.Collections.unmodifiableList(requireMoneyCountList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.requireMoneyCountList_ = requireMoneyCountList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.VipProbuf.VipFunction) {
          return mergeFrom((com.cwa.prototype.protobuf.VipProbuf.VipFunction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.VipProbuf.VipFunction other) {
        if (other == com.cwa.prototype.protobuf.VipProbuf.VipFunction.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (!other.vipBuynumList_.isEmpty()) {
          if (vipBuynumList_.isEmpty()) {
            vipBuynumList_ = other.vipBuynumList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureVipBuynumListIsMutable();
            vipBuynumList_.addAll(other.vipBuynumList_);
          }
          onChanged();
        }
        if (other.hasRequireMoneyType()) {
          setRequireMoneyType(other.getRequireMoneyType());
        }
        if (!other.requireMoneyCountList_.isEmpty()) {
          if (requireMoneyCountList_.isEmpty()) {
            requireMoneyCountList_ = other.requireMoneyCountList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRequireMoneyCountListIsMutable();
            requireMoneyCountList_.addAll(other.requireMoneyCountList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasRequireMoneyType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.VipProbuf.VipFunction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.VipProbuf.VipFunction) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 功能类型
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 功能类型
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 功能类型
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 功能类型
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 vipBuynumList = 2;
      private java.util.List<java.lang.Integer> vipBuynumList_ = java.util.Collections.emptyList();
      private void ensureVipBuynumListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          vipBuynumList_ = new java.util.ArrayList<java.lang.Integer>(vipBuynumList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 vipBuynumList = 2;</code>
       *
       * <pre>
       * 次数限制（VIP0至VIP12）
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getVipBuynumListList() {
        return java.util.Collections.unmodifiableList(vipBuynumList_);
      }
      /**
       * <code>repeated int32 vipBuynumList = 2;</code>
       *
       * <pre>
       * 次数限制（VIP0至VIP12）
       * </pre>
       */
      public int getVipBuynumListCount() {
        return vipBuynumList_.size();
      }
      /**
       * <code>repeated int32 vipBuynumList = 2;</code>
       *
       * <pre>
       * 次数限制（VIP0至VIP12）
       * </pre>
       */
      public int getVipBuynumList(int index) {
        return vipBuynumList_.get(index);
      }
      /**
       * <code>repeated int32 vipBuynumList = 2;</code>
       *
       * <pre>
       * 次数限制（VIP0至VIP12）
       * </pre>
       */
      public Builder setVipBuynumList(
          int index, int value) {
        ensureVipBuynumListIsMutable();
        vipBuynumList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vipBuynumList = 2;</code>
       *
       * <pre>
       * 次数限制（VIP0至VIP12）
       * </pre>
       */
      public Builder addVipBuynumList(int value) {
        ensureVipBuynumListIsMutable();
        vipBuynumList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vipBuynumList = 2;</code>
       *
       * <pre>
       * 次数限制（VIP0至VIP12）
       * </pre>
       */
      public Builder addAllVipBuynumList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureVipBuynumListIsMutable();
        super.addAll(values, vipBuynumList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 vipBuynumList = 2;</code>
       *
       * <pre>
       * 次数限制（VIP0至VIP12）
       * </pre>
       */
      public Builder clearVipBuynumList() {
        vipBuynumList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // required int32 requireMoneyType = 3;
      private int requireMoneyType_ ;
      /**
       * <code>required int32 requireMoneyType = 3;</code>
       *
       * <pre>
       * 刷新货币
       * </pre>
       */
      public boolean hasRequireMoneyType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 requireMoneyType = 3;</code>
       *
       * <pre>
       * 刷新货币
       * </pre>
       */
      public int getRequireMoneyType() {
        return requireMoneyType_;
      }
      /**
       * <code>required int32 requireMoneyType = 3;</code>
       *
       * <pre>
       * 刷新货币
       * </pre>
       */
      public Builder setRequireMoneyType(int value) {
        bitField0_ |= 0x00000004;
        requireMoneyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyType = 3;</code>
       *
       * <pre>
       * 刷新货币
       * </pre>
       */
      public Builder clearRequireMoneyType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        requireMoneyType_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 requireMoneyCountList = 4;
      private java.util.List<java.lang.Integer> requireMoneyCountList_ = java.util.Collections.emptyList();
      private void ensureRequireMoneyCountListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          requireMoneyCountList_ = new java.util.ArrayList<java.lang.Integer>(requireMoneyCountList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 4;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRequireMoneyCountListList() {
        return java.util.Collections.unmodifiableList(requireMoneyCountList_);
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 4;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public int getRequireMoneyCountListCount() {
        return requireMoneyCountList_.size();
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 4;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public int getRequireMoneyCountList(int index) {
        return requireMoneyCountList_.get(index);
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 4;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public Builder setRequireMoneyCountList(
          int index, int value) {
        ensureRequireMoneyCountListIsMutable();
        requireMoneyCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 4;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public Builder addRequireMoneyCountList(int value) {
        ensureRequireMoneyCountListIsMutable();
        requireMoneyCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 4;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public Builder addAllRequireMoneyCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRequireMoneyCountListIsMutable();
        super.addAll(values, requireMoneyCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireMoneyCountList = 4;</code>
       *
       * <pre>
       * 刷新需求
       * </pre>
       */
      public Builder clearRequireMoneyCountList() {
        requireMoneyCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VipFunction)
    }

    static {
      defaultInstance = new VipFunction(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:VipFunction)
  }

  public interface VipgiftOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 礼包id
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 礼包id
     * </pre>
     */
    int getKeyId();

    // repeated int32 awardList = 2;
    /**
     * <code>repeated int32 awardList = 2;</code>
     *
     * <pre>
     * 奖品
     * </pre>
     */
    java.util.List<java.lang.Integer> getAwardListList();
    /**
     * <code>repeated int32 awardList = 2;</code>
     *
     * <pre>
     * 奖品
     * </pre>
     */
    int getAwardListCount();
    /**
     * <code>repeated int32 awardList = 2;</code>
     *
     * <pre>
     * 奖品
     * </pre>
     */
    int getAwardList(int index);

    // repeated int32 awardCountList = 3;
    /**
     * <code>repeated int32 awardCountList = 3;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getAwardCountListList();
    /**
     * <code>repeated int32 awardCountList = 3;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    int getAwardCountListCount();
    /**
     * <code>repeated int32 awardCountList = 3;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    int getAwardCountList(int index);

    // required int32 frameId = 4;
    /**
     * <code>required int32 frameId = 4;</code>
     *
     * <pre>
     * 左侧图(英雄ID/XML帧号)
     * </pre>
     */
    boolean hasFrameId();
    /**
     * <code>required int32 frameId = 4;</code>
     *
     * <pre>
     * 左侧图(英雄ID/XML帧号)
     * </pre>
     */
    int getFrameId();

    // required string desc = 5;
    /**
     * <code>required string desc = 5;</code>
     *
     * <pre>
     * 左侧描述
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 5;</code>
     *
     * <pre>
     * 左侧描述
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 5;</code>
     *
     * <pre>
     * 左侧描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();
  }
  /**
   * Protobuf type {@code Vipgift}
   */
  public static final class Vipgift extends
      com.google.protobuf.GeneratedMessage
      implements VipgiftOrBuilder {
    // Use Vipgift.newBuilder() to construct.
    private Vipgift(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vipgift(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vipgift defaultInstance;
    public static Vipgift getDefaultInstance() {
      return defaultInstance;
    }

    public Vipgift getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vipgift(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                awardList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              awardList_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                awardList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                awardList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                awardCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              awardCountList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                awardCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                awardCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              frameId_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000004;
              desc_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          awardList_ = java.util.Collections.unmodifiableList(awardList_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          awardCountList_ = java.util.Collections.unmodifiableList(awardCountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vipgift_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vipgift_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.VipProbuf.Vipgift.class, com.cwa.prototype.protobuf.VipProbuf.Vipgift.Builder.class);
    }

    public static com.google.protobuf.Parser<Vipgift> PARSER =
        new com.google.protobuf.AbstractParser<Vipgift>() {
      public Vipgift parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vipgift(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vipgift> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 礼包id
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 礼包id
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // repeated int32 awardList = 2;
    public static final int AWARDLIST_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> awardList_;
    /**
     * <code>repeated int32 awardList = 2;</code>
     *
     * <pre>
     * 奖品
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAwardListList() {
      return awardList_;
    }
    /**
     * <code>repeated int32 awardList = 2;</code>
     *
     * <pre>
     * 奖品
     * </pre>
     */
    public int getAwardListCount() {
      return awardList_.size();
    }
    /**
     * <code>repeated int32 awardList = 2;</code>
     *
     * <pre>
     * 奖品
     * </pre>
     */
    public int getAwardList(int index) {
      return awardList_.get(index);
    }

    // repeated int32 awardCountList = 3;
    public static final int AWARDCOUNTLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> awardCountList_;
    /**
     * <code>repeated int32 awardCountList = 3;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAwardCountListList() {
      return awardCountList_;
    }
    /**
     * <code>repeated int32 awardCountList = 3;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    public int getAwardCountListCount() {
      return awardCountList_.size();
    }
    /**
     * <code>repeated int32 awardCountList = 3;</code>
     *
     * <pre>
     * 数量
     * </pre>
     */
    public int getAwardCountList(int index) {
      return awardCountList_.get(index);
    }

    // required int32 frameId = 4;
    public static final int FRAMEID_FIELD_NUMBER = 4;
    private int frameId_;
    /**
     * <code>required int32 frameId = 4;</code>
     *
     * <pre>
     * 左侧图(英雄ID/XML帧号)
     * </pre>
     */
    public boolean hasFrameId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 frameId = 4;</code>
     *
     * <pre>
     * 左侧图(英雄ID/XML帧号)
     * </pre>
     */
    public int getFrameId() {
      return frameId_;
    }

    // required string desc = 5;
    public static final int DESC_FIELD_NUMBER = 5;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 5;</code>
     *
     * <pre>
     * 左侧描述
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string desc = 5;</code>
     *
     * <pre>
     * 左侧描述
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 5;</code>
     *
     * <pre>
     * 左侧描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      keyId_ = 0;
      awardList_ = java.util.Collections.emptyList();
      awardCountList_ = java.util.Collections.emptyList();
      frameId_ = 0;
      desc_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrameId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      for (int i = 0; i < awardList_.size(); i++) {
        output.writeInt32(2, awardList_.get(i));
      }
      for (int i = 0; i < awardCountList_.size(); i++) {
        output.writeInt32(3, awardCountList_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, frameId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(5, getDescBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < awardList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(awardList_.get(i));
        }
        size += dataSize;
        size += 1 * getAwardListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < awardCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(awardCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getAwardCountListList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, frameId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getDescBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.VipProbuf.Vipgift parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.VipProbuf.Vipgift prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Vipgift}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.VipProbuf.VipgiftOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vipgift_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vipgift_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.VipProbuf.Vipgift.class, com.cwa.prototype.protobuf.VipProbuf.Vipgift.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.VipProbuf.Vipgift.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        awardList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        awardCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        frameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.VipProbuf.internal_static_Vipgift_descriptor;
      }

      public com.cwa.prototype.protobuf.VipProbuf.Vipgift getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.VipProbuf.Vipgift.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.VipProbuf.Vipgift build() {
        com.cwa.prototype.protobuf.VipProbuf.Vipgift result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.VipProbuf.Vipgift buildPartial() {
        com.cwa.prototype.protobuf.VipProbuf.Vipgift result = new com.cwa.prototype.protobuf.VipProbuf.Vipgift(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          awardList_ = java.util.Collections.unmodifiableList(awardList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.awardList_ = awardList_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          awardCountList_ = java.util.Collections.unmodifiableList(awardCountList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.awardCountList_ = awardCountList_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.frameId_ = frameId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.desc_ = desc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.VipProbuf.Vipgift) {
          return mergeFrom((com.cwa.prototype.protobuf.VipProbuf.Vipgift)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.VipProbuf.Vipgift other) {
        if (other == com.cwa.prototype.protobuf.VipProbuf.Vipgift.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (!other.awardList_.isEmpty()) {
          if (awardList_.isEmpty()) {
            awardList_ = other.awardList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAwardListIsMutable();
            awardList_.addAll(other.awardList_);
          }
          onChanged();
        }
        if (!other.awardCountList_.isEmpty()) {
          if (awardCountList_.isEmpty()) {
            awardCountList_ = other.awardCountList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAwardCountListIsMutable();
            awardCountList_.addAll(other.awardCountList_);
          }
          onChanged();
        }
        if (other.hasFrameId()) {
          setFrameId(other.getFrameId());
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000010;
          desc_ = other.desc_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasFrameId()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.VipProbuf.Vipgift parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.VipProbuf.Vipgift) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 礼包id
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 礼包id
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 礼包id
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 礼包id
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 awardList = 2;
      private java.util.List<java.lang.Integer> awardList_ = java.util.Collections.emptyList();
      private void ensureAwardListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          awardList_ = new java.util.ArrayList<java.lang.Integer>(awardList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 awardList = 2;</code>
       *
       * <pre>
       * 奖品
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAwardListList() {
        return java.util.Collections.unmodifiableList(awardList_);
      }
      /**
       * <code>repeated int32 awardList = 2;</code>
       *
       * <pre>
       * 奖品
       * </pre>
       */
      public int getAwardListCount() {
        return awardList_.size();
      }
      /**
       * <code>repeated int32 awardList = 2;</code>
       *
       * <pre>
       * 奖品
       * </pre>
       */
      public int getAwardList(int index) {
        return awardList_.get(index);
      }
      /**
       * <code>repeated int32 awardList = 2;</code>
       *
       * <pre>
       * 奖品
       * </pre>
       */
      public Builder setAwardList(
          int index, int value) {
        ensureAwardListIsMutable();
        awardList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 awardList = 2;</code>
       *
       * <pre>
       * 奖品
       * </pre>
       */
      public Builder addAwardList(int value) {
        ensureAwardListIsMutable();
        awardList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 awardList = 2;</code>
       *
       * <pre>
       * 奖品
       * </pre>
       */
      public Builder addAllAwardList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAwardListIsMutable();
        super.addAll(values, awardList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 awardList = 2;</code>
       *
       * <pre>
       * 奖品
       * </pre>
       */
      public Builder clearAwardList() {
        awardList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 awardCountList = 3;
      private java.util.List<java.lang.Integer> awardCountList_ = java.util.Collections.emptyList();
      private void ensureAwardCountListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          awardCountList_ = new java.util.ArrayList<java.lang.Integer>(awardCountList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 awardCountList = 3;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAwardCountListList() {
        return java.util.Collections.unmodifiableList(awardCountList_);
      }
      /**
       * <code>repeated int32 awardCountList = 3;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public int getAwardCountListCount() {
        return awardCountList_.size();
      }
      /**
       * <code>repeated int32 awardCountList = 3;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public int getAwardCountList(int index) {
        return awardCountList_.get(index);
      }
      /**
       * <code>repeated int32 awardCountList = 3;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public Builder setAwardCountList(
          int index, int value) {
        ensureAwardCountListIsMutable();
        awardCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 awardCountList = 3;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public Builder addAwardCountList(int value) {
        ensureAwardCountListIsMutable();
        awardCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 awardCountList = 3;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public Builder addAllAwardCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAwardCountListIsMutable();
        super.addAll(values, awardCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 awardCountList = 3;</code>
       *
       * <pre>
       * 数量
       * </pre>
       */
      public Builder clearAwardCountList() {
        awardCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // required int32 frameId = 4;
      private int frameId_ ;
      /**
       * <code>required int32 frameId = 4;</code>
       *
       * <pre>
       * 左侧图(英雄ID/XML帧号)
       * </pre>
       */
      public boolean hasFrameId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 frameId = 4;</code>
       *
       * <pre>
       * 左侧图(英雄ID/XML帧号)
       * </pre>
       */
      public int getFrameId() {
        return frameId_;
      }
      /**
       * <code>required int32 frameId = 4;</code>
       *
       * <pre>
       * 左侧图(英雄ID/XML帧号)
       * </pre>
       */
      public Builder setFrameId(int value) {
        bitField0_ |= 0x00000008;
        frameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 frameId = 4;</code>
       *
       * <pre>
       * 左侧图(英雄ID/XML帧号)
       * </pre>
       */
      public Builder clearFrameId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        frameId_ = 0;
        onChanged();
        return this;
      }

      // required string desc = 5;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 5;</code>
       *
       * <pre>
       * 左侧描述
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string desc = 5;</code>
       *
       * <pre>
       * 左侧描述
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 5;</code>
       *
       * <pre>
       * 左侧描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 5;</code>
       *
       * <pre>
       * 左侧描述
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 5;</code>
       *
       * <pre>
       * 左侧描述
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000010);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 5;</code>
       *
       * <pre>
       * 左侧描述
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        desc_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Vipgift)
    }

    static {
      defaultInstance = new Vipgift(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Vipgift)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Vip_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Vip_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_VipFunction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_VipFunction_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Vipgift_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Vipgift_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017VipProbuf.proto\"c\n\003Vip\022\r\n\005keyId\030\001 \002(\005\022" +
      "\014\n\004name\030\002 \002(\t\022\014\n\004desc\030\003 \002(\t\022\026\n\016requireMo" +
      "neyId\030\004 \002(\005\022\031\n\021requireMoneyCount\030\005 \002(\005\"l" +
      "\n\013VipFunction\022\r\n\005keyId\030\001 \002(\005\022\025\n\rvipBuynu" +
      "mList\030\002 \003(\005\022\030\n\020requireMoneyType\030\003 \002(\005\022\035\n" +
      "\025requireMoneyCountList\030\004 \003(\005\"b\n\007Vipgift\022" +
      "\r\n\005keyId\030\001 \002(\005\022\021\n\tawardList\030\002 \003(\005\022\026\n\016awa" +
      "rdCountList\030\003 \003(\005\022\017\n\007frameId\030\004 \002(\005\022\014\n\004de" +
      "sc\030\005 \002(\tB\'\n\032com.cwa.prototype.protobufB\t" +
      "VipProbuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Vip_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Vip_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Vip_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Desc", "RequireMoneyId", "RequireMoneyCount", });
          internal_static_VipFunction_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_VipFunction_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_VipFunction_descriptor,
              new java.lang.String[] { "KeyId", "VipBuynumList", "RequireMoneyType", "RequireMoneyCountList", });
          internal_static_Vipgift_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Vipgift_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Vipgift_descriptor,
              new java.lang.String[] { "KeyId", "AwardList", "AwardCountList", "FrameId", "Desc", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
