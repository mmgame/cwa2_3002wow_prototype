// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EquipmentProbuf.proto

package com.cwa.prototype.protobuf;

public final class EquipmentProbuf {
  private EquipmentProbuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EquipmentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 装备编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 装备编号
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 装备名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 装备名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 装备名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string desc = 3;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // required int32 equipmentposition = 4;
    /**
     * <code>required int32 equipmentposition = 4;</code>
     *
     * <pre>
     * 装备位置(keyId)
     * </pre>
     */
    boolean hasEquipmentposition();
    /**
     * <code>required int32 equipmentposition = 4;</code>
     *
     * <pre>
     * 装备位置(keyId)
     * </pre>
     */
    int getEquipmentposition();

    // repeated int32 slotTypeList = 5;
    /**
     * <code>repeated int32 slotTypeList = 5;</code>
     *
     * <pre>
     * 可装备插槽类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getSlotTypeListList();
    /**
     * <code>repeated int32 slotTypeList = 5;</code>
     *
     * <pre>
     * 可装备插槽类型
     * </pre>
     */
    int getSlotTypeListCount();
    /**
     * <code>repeated int32 slotTypeList = 5;</code>
     *
     * <pre>
     * 可装备插槽类型
     * </pre>
     */
    int getSlotTypeList(int index);

    // required int32 updateGoldRatio = 6;
    /**
     * <code>required int32 updateGoldRatio = 6;</code>
     *
     * <pre>
     * 升级所需金币系数
     * </pre>
     */
    boolean hasUpdateGoldRatio();
    /**
     * <code>required int32 updateGoldRatio = 6;</code>
     *
     * <pre>
     * 升级所需金币系数
     * </pre>
     */
    int getUpdateGoldRatio();

    // required string equipmentIcon = 7;
    /**
     * <code>required string equipmentIcon = 7;</code>
     *
     * <pre>
     * 装备资源(Icon文件名前缀)
     * </pre>
     */
    boolean hasEquipmentIcon();
    /**
     * <code>required string equipmentIcon = 7;</code>
     *
     * <pre>
     * 装备资源(Icon文件名前缀)
     * </pre>
     */
    java.lang.String getEquipmentIcon();
    /**
     * <code>required string equipmentIcon = 7;</code>
     *
     * <pre>
     * 装备资源(Icon文件名前缀)
     * </pre>
     */
    com.google.protobuf.ByteString
        getEquipmentIconBytes();
  }
  /**
   * Protobuf type {@code Equipment}
   */
  public static final class Equipment extends
      com.google.protobuf.GeneratedMessage
      implements EquipmentOrBuilder {
    // Use Equipment.newBuilder() to construct.
    private Equipment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Equipment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Equipment defaultInstance;
    public static Equipment getDefaultInstance() {
      return defaultInstance;
    }

    public Equipment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Equipment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              desc_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              equipmentposition_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                slotTypeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              slotTypeList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                slotTypeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                slotTypeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              updateGoldRatio_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              equipmentIcon_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          slotTypeList_ = java.util.Collections.unmodifiableList(slotTypeList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_Equipment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_Equipment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.EquipmentProbuf.Equipment.class, com.cwa.prototype.protobuf.EquipmentProbuf.Equipment.Builder.class);
    }

    public static com.google.protobuf.Parser<Equipment> PARSER =
        new com.google.protobuf.AbstractParser<Equipment>() {
      public Equipment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Equipment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Equipment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 装备编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 装备编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 装备名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 装备名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 装备名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string desc = 3;
    public static final int DESC_FIELD_NUMBER = 3;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 3;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 equipmentposition = 4;
    public static final int EQUIPMENTPOSITION_FIELD_NUMBER = 4;
    private int equipmentposition_;
    /**
     * <code>required int32 equipmentposition = 4;</code>
     *
     * <pre>
     * 装备位置(keyId)
     * </pre>
     */
    public boolean hasEquipmentposition() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 equipmentposition = 4;</code>
     *
     * <pre>
     * 装备位置(keyId)
     * </pre>
     */
    public int getEquipmentposition() {
      return equipmentposition_;
    }

    // repeated int32 slotTypeList = 5;
    public static final int SLOTTYPELIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> slotTypeList_;
    /**
     * <code>repeated int32 slotTypeList = 5;</code>
     *
     * <pre>
     * 可装备插槽类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSlotTypeListList() {
      return slotTypeList_;
    }
    /**
     * <code>repeated int32 slotTypeList = 5;</code>
     *
     * <pre>
     * 可装备插槽类型
     * </pre>
     */
    public int getSlotTypeListCount() {
      return slotTypeList_.size();
    }
    /**
     * <code>repeated int32 slotTypeList = 5;</code>
     *
     * <pre>
     * 可装备插槽类型
     * </pre>
     */
    public int getSlotTypeList(int index) {
      return slotTypeList_.get(index);
    }

    // required int32 updateGoldRatio = 6;
    public static final int UPDATEGOLDRATIO_FIELD_NUMBER = 6;
    private int updateGoldRatio_;
    /**
     * <code>required int32 updateGoldRatio = 6;</code>
     *
     * <pre>
     * 升级所需金币系数
     * </pre>
     */
    public boolean hasUpdateGoldRatio() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 updateGoldRatio = 6;</code>
     *
     * <pre>
     * 升级所需金币系数
     * </pre>
     */
    public int getUpdateGoldRatio() {
      return updateGoldRatio_;
    }

    // required string equipmentIcon = 7;
    public static final int EQUIPMENTICON_FIELD_NUMBER = 7;
    private java.lang.Object equipmentIcon_;
    /**
     * <code>required string equipmentIcon = 7;</code>
     *
     * <pre>
     * 装备资源(Icon文件名前缀)
     * </pre>
     */
    public boolean hasEquipmentIcon() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string equipmentIcon = 7;</code>
     *
     * <pre>
     * 装备资源(Icon文件名前缀)
     * </pre>
     */
    public java.lang.String getEquipmentIcon() {
      java.lang.Object ref = equipmentIcon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          equipmentIcon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string equipmentIcon = 7;</code>
     *
     * <pre>
     * 装备资源(Icon文件名前缀)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEquipmentIconBytes() {
      java.lang.Object ref = equipmentIcon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        equipmentIcon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      desc_ = "";
      equipmentposition_ = 0;
      slotTypeList_ = java.util.Collections.emptyList();
      updateGoldRatio_ = 0;
      equipmentIcon_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEquipmentposition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUpdateGoldRatio()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEquipmentIcon()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, equipmentposition_);
      }
      for (int i = 0; i < slotTypeList_.size(); i++) {
        output.writeInt32(5, slotTypeList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, updateGoldRatio_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getEquipmentIconBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, equipmentposition_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < slotTypeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(slotTypeList_.get(i));
        }
        size += dataSize;
        size += 1 * getSlotTypeListList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, updateGoldRatio_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getEquipmentIconBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.EquipmentProbuf.Equipment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Equipment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_Equipment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_Equipment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.EquipmentProbuf.Equipment.class, com.cwa.prototype.protobuf.EquipmentProbuf.Equipment.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.EquipmentProbuf.Equipment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        equipmentposition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        slotTypeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        updateGoldRatio_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        equipmentIcon_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_Equipment_descriptor;
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.Equipment getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.Equipment.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.Equipment build() {
        com.cwa.prototype.protobuf.EquipmentProbuf.Equipment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.Equipment buildPartial() {
        com.cwa.prototype.protobuf.EquipmentProbuf.Equipment result = new com.cwa.prototype.protobuf.EquipmentProbuf.Equipment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.equipmentposition_ = equipmentposition_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          slotTypeList_ = java.util.Collections.unmodifiableList(slotTypeList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.slotTypeList_ = slotTypeList_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.updateGoldRatio_ = updateGoldRatio_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.equipmentIcon_ = equipmentIcon_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.EquipmentProbuf.Equipment) {
          return mergeFrom((com.cwa.prototype.protobuf.EquipmentProbuf.Equipment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.EquipmentProbuf.Equipment other) {
        if (other == com.cwa.prototype.protobuf.EquipmentProbuf.Equipment.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000004;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasEquipmentposition()) {
          setEquipmentposition(other.getEquipmentposition());
        }
        if (!other.slotTypeList_.isEmpty()) {
          if (slotTypeList_.isEmpty()) {
            slotTypeList_ = other.slotTypeList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSlotTypeListIsMutable();
            slotTypeList_.addAll(other.slotTypeList_);
          }
          onChanged();
        }
        if (other.hasUpdateGoldRatio()) {
          setUpdateGoldRatio(other.getUpdateGoldRatio());
        }
        if (other.hasEquipmentIcon()) {
          bitField0_ |= 0x00000040;
          equipmentIcon_ = other.equipmentIcon_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        if (!hasEquipmentposition()) {
          
          return false;
        }
        if (!hasUpdateGoldRatio()) {
          
          return false;
        }
        if (!hasEquipmentIcon()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.EquipmentProbuf.Equipment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.EquipmentProbuf.Equipment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 装备编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 装备编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 装备编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 装备编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 装备名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 装备名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 装备名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 装备名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 装备名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 装备名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string desc = 3;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }

      // required int32 equipmentposition = 4;
      private int equipmentposition_ ;
      /**
       * <code>required int32 equipmentposition = 4;</code>
       *
       * <pre>
       * 装备位置(keyId)
       * </pre>
       */
      public boolean hasEquipmentposition() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 equipmentposition = 4;</code>
       *
       * <pre>
       * 装备位置(keyId)
       * </pre>
       */
      public int getEquipmentposition() {
        return equipmentposition_;
      }
      /**
       * <code>required int32 equipmentposition = 4;</code>
       *
       * <pre>
       * 装备位置(keyId)
       * </pre>
       */
      public Builder setEquipmentposition(int value) {
        bitField0_ |= 0x00000008;
        equipmentposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 equipmentposition = 4;</code>
       *
       * <pre>
       * 装备位置(keyId)
       * </pre>
       */
      public Builder clearEquipmentposition() {
        bitField0_ = (bitField0_ & ~0x00000008);
        equipmentposition_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 slotTypeList = 5;
      private java.util.List<java.lang.Integer> slotTypeList_ = java.util.Collections.emptyList();
      private void ensureSlotTypeListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          slotTypeList_ = new java.util.ArrayList<java.lang.Integer>(slotTypeList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 slotTypeList = 5;</code>
       *
       * <pre>
       * 可装备插槽类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSlotTypeListList() {
        return java.util.Collections.unmodifiableList(slotTypeList_);
      }
      /**
       * <code>repeated int32 slotTypeList = 5;</code>
       *
       * <pre>
       * 可装备插槽类型
       * </pre>
       */
      public int getSlotTypeListCount() {
        return slotTypeList_.size();
      }
      /**
       * <code>repeated int32 slotTypeList = 5;</code>
       *
       * <pre>
       * 可装备插槽类型
       * </pre>
       */
      public int getSlotTypeList(int index) {
        return slotTypeList_.get(index);
      }
      /**
       * <code>repeated int32 slotTypeList = 5;</code>
       *
       * <pre>
       * 可装备插槽类型
       * </pre>
       */
      public Builder setSlotTypeList(
          int index, int value) {
        ensureSlotTypeListIsMutable();
        slotTypeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 slotTypeList = 5;</code>
       *
       * <pre>
       * 可装备插槽类型
       * </pre>
       */
      public Builder addSlotTypeList(int value) {
        ensureSlotTypeListIsMutable();
        slotTypeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 slotTypeList = 5;</code>
       *
       * <pre>
       * 可装备插槽类型
       * </pre>
       */
      public Builder addAllSlotTypeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSlotTypeListIsMutable();
        super.addAll(values, slotTypeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 slotTypeList = 5;</code>
       *
       * <pre>
       * 可装备插槽类型
       * </pre>
       */
      public Builder clearSlotTypeList() {
        slotTypeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // required int32 updateGoldRatio = 6;
      private int updateGoldRatio_ ;
      /**
       * <code>required int32 updateGoldRatio = 6;</code>
       *
       * <pre>
       * 升级所需金币系数
       * </pre>
       */
      public boolean hasUpdateGoldRatio() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 updateGoldRatio = 6;</code>
       *
       * <pre>
       * 升级所需金币系数
       * </pre>
       */
      public int getUpdateGoldRatio() {
        return updateGoldRatio_;
      }
      /**
       * <code>required int32 updateGoldRatio = 6;</code>
       *
       * <pre>
       * 升级所需金币系数
       * </pre>
       */
      public Builder setUpdateGoldRatio(int value) {
        bitField0_ |= 0x00000020;
        updateGoldRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 updateGoldRatio = 6;</code>
       *
       * <pre>
       * 升级所需金币系数
       * </pre>
       */
      public Builder clearUpdateGoldRatio() {
        bitField0_ = (bitField0_ & ~0x00000020);
        updateGoldRatio_ = 0;
        onChanged();
        return this;
      }

      // required string equipmentIcon = 7;
      private java.lang.Object equipmentIcon_ = "";
      /**
       * <code>required string equipmentIcon = 7;</code>
       *
       * <pre>
       * 装备资源(Icon文件名前缀)
       * </pre>
       */
      public boolean hasEquipmentIcon() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required string equipmentIcon = 7;</code>
       *
       * <pre>
       * 装备资源(Icon文件名前缀)
       * </pre>
       */
      public java.lang.String getEquipmentIcon() {
        java.lang.Object ref = equipmentIcon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          equipmentIcon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string equipmentIcon = 7;</code>
       *
       * <pre>
       * 装备资源(Icon文件名前缀)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEquipmentIconBytes() {
        java.lang.Object ref = equipmentIcon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          equipmentIcon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string equipmentIcon = 7;</code>
       *
       * <pre>
       * 装备资源(Icon文件名前缀)
       * </pre>
       */
      public Builder setEquipmentIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        equipmentIcon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string equipmentIcon = 7;</code>
       *
       * <pre>
       * 装备资源(Icon文件名前缀)
       * </pre>
       */
      public Builder clearEquipmentIcon() {
        bitField0_ = (bitField0_ & ~0x00000040);
        equipmentIcon_ = getDefaultInstance().getEquipmentIcon();
        onChanged();
        return this;
      }
      /**
       * <code>required string equipmentIcon = 7;</code>
       *
       * <pre>
       * 装备资源(Icon文件名前缀)
       * </pre>
       */
      public Builder setEquipmentIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        equipmentIcon_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Equipment)
    }

    static {
      defaultInstance = new Equipment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Equipment)
  }

  public interface EquipmentGradeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 装备编号
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 装备编号
     * </pre>
     */
    int getKeyId();

    // required int32 quality = 2;
    /**
     * <code>required int32 quality = 2;</code>
     *
     * <pre>
     * 装备品质
     * </pre>
     */
    boolean hasQuality();
    /**
     * <code>required int32 quality = 2;</code>
     *
     * <pre>
     * 装备品质
     * </pre>
     */
    int getQuality();

    // required int32 levelMax = 3;
    /**
     * <code>required int32 levelMax = 3;</code>
     *
     * <pre>
     * 装备等级上限
     * </pre>
     */
    boolean hasLevelMax();
    /**
     * <code>required int32 levelMax = 3;</code>
     *
     * <pre>
     * 装备等级上限
     * </pre>
     */
    int getLevelMax();

    // repeated int32 attributeIdList = 4;
    /**
     * <code>repeated int32 attributeIdList = 4;</code>
     *
     * <pre>
     * 基础属性id
     * </pre>
     */
    java.util.List<java.lang.Integer> getAttributeIdListList();
    /**
     * <code>repeated int32 attributeIdList = 4;</code>
     *
     * <pre>
     * 基础属性id
     * </pre>
     */
    int getAttributeIdListCount();
    /**
     * <code>repeated int32 attributeIdList = 4;</code>
     *
     * <pre>
     * 基础属性id
     * </pre>
     */
    int getAttributeIdList(int index);

    // repeated int32 coefficientList = 5;
    /**
     * <code>repeated int32 coefficientList = 5;</code>
     *
     * <pre>
     * 升级属性公式系数
     * </pre>
     */
    java.util.List<java.lang.Integer> getCoefficientListList();
    /**
     * <code>repeated int32 coefficientList = 5;</code>
     *
     * <pre>
     * 升级属性公式系数
     * </pre>
     */
    int getCoefficientListCount();
    /**
     * <code>repeated int32 coefficientList = 5;</code>
     *
     * <pre>
     * 升级属性公式系数
     * </pre>
     */
    int getCoefficientList(int index);

    // repeated int32 requireItemList = 6;
    /**
     * <code>repeated int32 requireItemList = 6;</code>
     *
     * <pre>
     * 进阶需求道具
     * </pre>
     */
    java.util.List<java.lang.Integer> getRequireItemListList();
    /**
     * <code>repeated int32 requireItemList = 6;</code>
     *
     * <pre>
     * 进阶需求道具
     * </pre>
     */
    int getRequireItemListCount();
    /**
     * <code>repeated int32 requireItemList = 6;</code>
     *
     * <pre>
     * 进阶需求道具
     * </pre>
     */
    int getRequireItemList(int index);

    // repeated int32 requireCountList = 7;
    /**
     * <code>repeated int32 requireCountList = 7;</code>
     *
     * <pre>
     * 进阶需求道具数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getRequireCountListList();
    /**
     * <code>repeated int32 requireCountList = 7;</code>
     *
     * <pre>
     * 进阶需求道具数量
     * </pre>
     */
    int getRequireCountListCount();
    /**
     * <code>repeated int32 requireCountList = 7;</code>
     *
     * <pre>
     * 进阶需求道具数量
     * </pre>
     */
    int getRequireCountList(int index);

    // required int32 requireMoneyId = 8;
    /**
     * <code>required int32 requireMoneyId = 8;</code>
     *
     * <pre>
     * 进阶需要货币类型
     * </pre>
     */
    boolean hasRequireMoneyId();
    /**
     * <code>required int32 requireMoneyId = 8;</code>
     *
     * <pre>
     * 进阶需要货币类型
     * </pre>
     */
    int getRequireMoneyId();

    // required int32 requireMoneyCount = 9;
    /**
     * <code>required int32 requireMoneyCount = 9;</code>
     *
     * <pre>
     * 进阶需要货币数量
     * </pre>
     */
    boolean hasRequireMoneyCount();
    /**
     * <code>required int32 requireMoneyCount = 9;</code>
     *
     * <pre>
     * 进阶需要货币数量
     * </pre>
     */
    int getRequireMoneyCount();

    // required int32 nextLevel = 10;
    /**
     * <code>required int32 nextLevel = 10;</code>
     *
     * <pre>
     * 下一级
     * </pre>
     */
    boolean hasNextLevel();
    /**
     * <code>required int32 nextLevel = 10;</code>
     *
     * <pre>
     * 下一级
     * </pre>
     */
    int getNextLevel();
  }
  /**
   * Protobuf type {@code EquipmentGrade}
   */
  public static final class EquipmentGrade extends
      com.google.protobuf.GeneratedMessage
      implements EquipmentGradeOrBuilder {
    // Use EquipmentGrade.newBuilder() to construct.
    private EquipmentGrade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipmentGrade(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipmentGrade defaultInstance;
    public static EquipmentGrade getDefaultInstance() {
      return defaultInstance;
    }

    public EquipmentGrade getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipmentGrade(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              quality_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              levelMax_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                attributeIdList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              attributeIdList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                attributeIdList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                attributeIdList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                coefficientList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              coefficientList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                coefficientList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                coefficientList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                requireItemList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              requireItemList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                requireItemList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                requireItemList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                requireCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              requireCountList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                requireCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                requireCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              requireMoneyId_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              requireMoneyCount_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              nextLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          attributeIdList_ = java.util.Collections.unmodifiableList(attributeIdList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          coefficientList_ = java.util.Collections.unmodifiableList(coefficientList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          requireItemList_ = java.util.Collections.unmodifiableList(requireItemList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          requireCountList_ = java.util.Collections.unmodifiableList(requireCountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_EquipmentGrade_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_EquipmentGrade_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade.class, com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipmentGrade> PARSER =
        new com.google.protobuf.AbstractParser<EquipmentGrade>() {
      public EquipmentGrade parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipmentGrade(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipmentGrade> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 装备编号
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 装备编号
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required int32 quality = 2;
    public static final int QUALITY_FIELD_NUMBER = 2;
    private int quality_;
    /**
     * <code>required int32 quality = 2;</code>
     *
     * <pre>
     * 装备品质
     * </pre>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 quality = 2;</code>
     *
     * <pre>
     * 装备品质
     * </pre>
     */
    public int getQuality() {
      return quality_;
    }

    // required int32 levelMax = 3;
    public static final int LEVELMAX_FIELD_NUMBER = 3;
    private int levelMax_;
    /**
     * <code>required int32 levelMax = 3;</code>
     *
     * <pre>
     * 装备等级上限
     * </pre>
     */
    public boolean hasLevelMax() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 levelMax = 3;</code>
     *
     * <pre>
     * 装备等级上限
     * </pre>
     */
    public int getLevelMax() {
      return levelMax_;
    }

    // repeated int32 attributeIdList = 4;
    public static final int ATTRIBUTEIDLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> attributeIdList_;
    /**
     * <code>repeated int32 attributeIdList = 4;</code>
     *
     * <pre>
     * 基础属性id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAttributeIdListList() {
      return attributeIdList_;
    }
    /**
     * <code>repeated int32 attributeIdList = 4;</code>
     *
     * <pre>
     * 基础属性id
     * </pre>
     */
    public int getAttributeIdListCount() {
      return attributeIdList_.size();
    }
    /**
     * <code>repeated int32 attributeIdList = 4;</code>
     *
     * <pre>
     * 基础属性id
     * </pre>
     */
    public int getAttributeIdList(int index) {
      return attributeIdList_.get(index);
    }

    // repeated int32 coefficientList = 5;
    public static final int COEFFICIENTLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> coefficientList_;
    /**
     * <code>repeated int32 coefficientList = 5;</code>
     *
     * <pre>
     * 升级属性公式系数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCoefficientListList() {
      return coefficientList_;
    }
    /**
     * <code>repeated int32 coefficientList = 5;</code>
     *
     * <pre>
     * 升级属性公式系数
     * </pre>
     */
    public int getCoefficientListCount() {
      return coefficientList_.size();
    }
    /**
     * <code>repeated int32 coefficientList = 5;</code>
     *
     * <pre>
     * 升级属性公式系数
     * </pre>
     */
    public int getCoefficientList(int index) {
      return coefficientList_.get(index);
    }

    // repeated int32 requireItemList = 6;
    public static final int REQUIREITEMLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> requireItemList_;
    /**
     * <code>repeated int32 requireItemList = 6;</code>
     *
     * <pre>
     * 进阶需求道具
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRequireItemListList() {
      return requireItemList_;
    }
    /**
     * <code>repeated int32 requireItemList = 6;</code>
     *
     * <pre>
     * 进阶需求道具
     * </pre>
     */
    public int getRequireItemListCount() {
      return requireItemList_.size();
    }
    /**
     * <code>repeated int32 requireItemList = 6;</code>
     *
     * <pre>
     * 进阶需求道具
     * </pre>
     */
    public int getRequireItemList(int index) {
      return requireItemList_.get(index);
    }

    // repeated int32 requireCountList = 7;
    public static final int REQUIRECOUNTLIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> requireCountList_;
    /**
     * <code>repeated int32 requireCountList = 7;</code>
     *
     * <pre>
     * 进阶需求道具数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRequireCountListList() {
      return requireCountList_;
    }
    /**
     * <code>repeated int32 requireCountList = 7;</code>
     *
     * <pre>
     * 进阶需求道具数量
     * </pre>
     */
    public int getRequireCountListCount() {
      return requireCountList_.size();
    }
    /**
     * <code>repeated int32 requireCountList = 7;</code>
     *
     * <pre>
     * 进阶需求道具数量
     * </pre>
     */
    public int getRequireCountList(int index) {
      return requireCountList_.get(index);
    }

    // required int32 requireMoneyId = 8;
    public static final int REQUIREMONEYID_FIELD_NUMBER = 8;
    private int requireMoneyId_;
    /**
     * <code>required int32 requireMoneyId = 8;</code>
     *
     * <pre>
     * 进阶需要货币类型
     * </pre>
     */
    public boolean hasRequireMoneyId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 requireMoneyId = 8;</code>
     *
     * <pre>
     * 进阶需要货币类型
     * </pre>
     */
    public int getRequireMoneyId() {
      return requireMoneyId_;
    }

    // required int32 requireMoneyCount = 9;
    public static final int REQUIREMONEYCOUNT_FIELD_NUMBER = 9;
    private int requireMoneyCount_;
    /**
     * <code>required int32 requireMoneyCount = 9;</code>
     *
     * <pre>
     * 进阶需要货币数量
     * </pre>
     */
    public boolean hasRequireMoneyCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 requireMoneyCount = 9;</code>
     *
     * <pre>
     * 进阶需要货币数量
     * </pre>
     */
    public int getRequireMoneyCount() {
      return requireMoneyCount_;
    }

    // required int32 nextLevel = 10;
    public static final int NEXTLEVEL_FIELD_NUMBER = 10;
    private int nextLevel_;
    /**
     * <code>required int32 nextLevel = 10;</code>
     *
     * <pre>
     * 下一级
     * </pre>
     */
    public boolean hasNextLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 nextLevel = 10;</code>
     *
     * <pre>
     * 下一级
     * </pre>
     */
    public int getNextLevel() {
      return nextLevel_;
    }

    private void initFields() {
      keyId_ = 0;
      quality_ = 0;
      levelMax_ = 0;
      attributeIdList_ = java.util.Collections.emptyList();
      coefficientList_ = java.util.Collections.emptyList();
      requireItemList_ = java.util.Collections.emptyList();
      requireCountList_ = java.util.Collections.emptyList();
      requireMoneyId_ = 0;
      requireMoneyCount_ = 0;
      nextLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuality()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevelMax()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequireMoneyCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNextLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, levelMax_);
      }
      for (int i = 0; i < attributeIdList_.size(); i++) {
        output.writeInt32(4, attributeIdList_.get(i));
      }
      for (int i = 0; i < coefficientList_.size(); i++) {
        output.writeInt32(5, coefficientList_.get(i));
      }
      for (int i = 0; i < requireItemList_.size(); i++) {
        output.writeInt32(6, requireItemList_.get(i));
      }
      for (int i = 0; i < requireCountList_.size(); i++) {
        output.writeInt32(7, requireCountList_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(8, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(9, requireMoneyCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, nextLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, levelMax_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(attributeIdList_.get(i));
        }
        size += dataSize;
        size += 1 * getAttributeIdListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < coefficientList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(coefficientList_.get(i));
        }
        size += dataSize;
        size += 1 * getCoefficientListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requireItemList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(requireItemList_.get(i));
        }
        size += dataSize;
        size += 1 * getRequireItemListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requireCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(requireCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getRequireCountListList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, requireMoneyId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, requireMoneyCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, nextLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EquipmentGrade}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGradeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_EquipmentGrade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_EquipmentGrade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade.class, com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        levelMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        attributeIdList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        coefficientList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        requireItemList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        requireCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        requireMoneyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        requireMoneyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        nextLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_EquipmentGrade_descriptor;
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade build() {
        com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade buildPartial() {
        com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade result = new com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.levelMax_ = levelMax_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeIdList_ = java.util.Collections.unmodifiableList(attributeIdList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.attributeIdList_ = attributeIdList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          coefficientList_ = java.util.Collections.unmodifiableList(coefficientList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.coefficientList_ = coefficientList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          requireItemList_ = java.util.Collections.unmodifiableList(requireItemList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.requireItemList_ = requireItemList_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          requireCountList_ = java.util.Collections.unmodifiableList(requireCountList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.requireCountList_ = requireCountList_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000008;
        }
        result.requireMoneyId_ = requireMoneyId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.requireMoneyCount_ = requireMoneyCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nextLevel_ = nextLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade) {
          return mergeFrom((com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade other) {
        if (other == com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasLevelMax()) {
          setLevelMax(other.getLevelMax());
        }
        if (!other.attributeIdList_.isEmpty()) {
          if (attributeIdList_.isEmpty()) {
            attributeIdList_ = other.attributeIdList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAttributeIdListIsMutable();
            attributeIdList_.addAll(other.attributeIdList_);
          }
          onChanged();
        }
        if (!other.coefficientList_.isEmpty()) {
          if (coefficientList_.isEmpty()) {
            coefficientList_ = other.coefficientList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCoefficientListIsMutable();
            coefficientList_.addAll(other.coefficientList_);
          }
          onChanged();
        }
        if (!other.requireItemList_.isEmpty()) {
          if (requireItemList_.isEmpty()) {
            requireItemList_ = other.requireItemList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRequireItemListIsMutable();
            requireItemList_.addAll(other.requireItemList_);
          }
          onChanged();
        }
        if (!other.requireCountList_.isEmpty()) {
          if (requireCountList_.isEmpty()) {
            requireCountList_ = other.requireCountList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRequireCountListIsMutable();
            requireCountList_.addAll(other.requireCountList_);
          }
          onChanged();
        }
        if (other.hasRequireMoneyId()) {
          setRequireMoneyId(other.getRequireMoneyId());
        }
        if (other.hasRequireMoneyCount()) {
          setRequireMoneyCount(other.getRequireMoneyCount());
        }
        if (other.hasNextLevel()) {
          setNextLevel(other.getNextLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasQuality()) {
          
          return false;
        }
        if (!hasLevelMax()) {
          
          return false;
        }
        if (!hasRequireMoneyId()) {
          
          return false;
        }
        if (!hasRequireMoneyCount()) {
          
          return false;
        }
        if (!hasNextLevel()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.EquipmentProbuf.EquipmentGrade) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 装备编号
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 装备编号
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 装备编号
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 装备编号
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 quality = 2;
      private int quality_ ;
      /**
       * <code>required int32 quality = 2;</code>
       *
       * <pre>
       * 装备品质
       * </pre>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 quality = 2;</code>
       *
       * <pre>
       * 装备品质
       * </pre>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>required int32 quality = 2;</code>
       *
       * <pre>
       * 装备品质
       * </pre>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000002;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 quality = 2;</code>
       *
       * <pre>
       * 装备品质
       * </pre>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        onChanged();
        return this;
      }

      // required int32 levelMax = 3;
      private int levelMax_ ;
      /**
       * <code>required int32 levelMax = 3;</code>
       *
       * <pre>
       * 装备等级上限
       * </pre>
       */
      public boolean hasLevelMax() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 levelMax = 3;</code>
       *
       * <pre>
       * 装备等级上限
       * </pre>
       */
      public int getLevelMax() {
        return levelMax_;
      }
      /**
       * <code>required int32 levelMax = 3;</code>
       *
       * <pre>
       * 装备等级上限
       * </pre>
       */
      public Builder setLevelMax(int value) {
        bitField0_ |= 0x00000004;
        levelMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 levelMax = 3;</code>
       *
       * <pre>
       * 装备等级上限
       * </pre>
       */
      public Builder clearLevelMax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        levelMax_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 attributeIdList = 4;
      private java.util.List<java.lang.Integer> attributeIdList_ = java.util.Collections.emptyList();
      private void ensureAttributeIdListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeIdList_ = new java.util.ArrayList<java.lang.Integer>(attributeIdList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 attributeIdList = 4;</code>
       *
       * <pre>
       * 基础属性id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAttributeIdListList() {
        return java.util.Collections.unmodifiableList(attributeIdList_);
      }
      /**
       * <code>repeated int32 attributeIdList = 4;</code>
       *
       * <pre>
       * 基础属性id
       * </pre>
       */
      public int getAttributeIdListCount() {
        return attributeIdList_.size();
      }
      /**
       * <code>repeated int32 attributeIdList = 4;</code>
       *
       * <pre>
       * 基础属性id
       * </pre>
       */
      public int getAttributeIdList(int index) {
        return attributeIdList_.get(index);
      }
      /**
       * <code>repeated int32 attributeIdList = 4;</code>
       *
       * <pre>
       * 基础属性id
       * </pre>
       */
      public Builder setAttributeIdList(
          int index, int value) {
        ensureAttributeIdListIsMutable();
        attributeIdList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributeIdList = 4;</code>
       *
       * <pre>
       * 基础属性id
       * </pre>
       */
      public Builder addAttributeIdList(int value) {
        ensureAttributeIdListIsMutable();
        attributeIdList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributeIdList = 4;</code>
       *
       * <pre>
       * 基础属性id
       * </pre>
       */
      public Builder addAllAttributeIdList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttributeIdListIsMutable();
        super.addAll(values, attributeIdList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 attributeIdList = 4;</code>
       *
       * <pre>
       * 基础属性id
       * </pre>
       */
      public Builder clearAttributeIdList() {
        attributeIdList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 coefficientList = 5;
      private java.util.List<java.lang.Integer> coefficientList_ = java.util.Collections.emptyList();
      private void ensureCoefficientListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          coefficientList_ = new java.util.ArrayList<java.lang.Integer>(coefficientList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 coefficientList = 5;</code>
       *
       * <pre>
       * 升级属性公式系数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCoefficientListList() {
        return java.util.Collections.unmodifiableList(coefficientList_);
      }
      /**
       * <code>repeated int32 coefficientList = 5;</code>
       *
       * <pre>
       * 升级属性公式系数
       * </pre>
       */
      public int getCoefficientListCount() {
        return coefficientList_.size();
      }
      /**
       * <code>repeated int32 coefficientList = 5;</code>
       *
       * <pre>
       * 升级属性公式系数
       * </pre>
       */
      public int getCoefficientList(int index) {
        return coefficientList_.get(index);
      }
      /**
       * <code>repeated int32 coefficientList = 5;</code>
       *
       * <pre>
       * 升级属性公式系数
       * </pre>
       */
      public Builder setCoefficientList(
          int index, int value) {
        ensureCoefficientListIsMutable();
        coefficientList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 coefficientList = 5;</code>
       *
       * <pre>
       * 升级属性公式系数
       * </pre>
       */
      public Builder addCoefficientList(int value) {
        ensureCoefficientListIsMutable();
        coefficientList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 coefficientList = 5;</code>
       *
       * <pre>
       * 升级属性公式系数
       * </pre>
       */
      public Builder addAllCoefficientList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCoefficientListIsMutable();
        super.addAll(values, coefficientList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 coefficientList = 5;</code>
       *
       * <pre>
       * 升级属性公式系数
       * </pre>
       */
      public Builder clearCoefficientList() {
        coefficientList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 requireItemList = 6;
      private java.util.List<java.lang.Integer> requireItemList_ = java.util.Collections.emptyList();
      private void ensureRequireItemListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          requireItemList_ = new java.util.ArrayList<java.lang.Integer>(requireItemList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 requireItemList = 6;</code>
       *
       * <pre>
       * 进阶需求道具
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRequireItemListList() {
        return java.util.Collections.unmodifiableList(requireItemList_);
      }
      /**
       * <code>repeated int32 requireItemList = 6;</code>
       *
       * <pre>
       * 进阶需求道具
       * </pre>
       */
      public int getRequireItemListCount() {
        return requireItemList_.size();
      }
      /**
       * <code>repeated int32 requireItemList = 6;</code>
       *
       * <pre>
       * 进阶需求道具
       * </pre>
       */
      public int getRequireItemList(int index) {
        return requireItemList_.get(index);
      }
      /**
       * <code>repeated int32 requireItemList = 6;</code>
       *
       * <pre>
       * 进阶需求道具
       * </pre>
       */
      public Builder setRequireItemList(
          int index, int value) {
        ensureRequireItemListIsMutable();
        requireItemList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireItemList = 6;</code>
       *
       * <pre>
       * 进阶需求道具
       * </pre>
       */
      public Builder addRequireItemList(int value) {
        ensureRequireItemListIsMutable();
        requireItemList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireItemList = 6;</code>
       *
       * <pre>
       * 进阶需求道具
       * </pre>
       */
      public Builder addAllRequireItemList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRequireItemListIsMutable();
        super.addAll(values, requireItemList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireItemList = 6;</code>
       *
       * <pre>
       * 进阶需求道具
       * </pre>
       */
      public Builder clearRequireItemList() {
        requireItemList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 requireCountList = 7;
      private java.util.List<java.lang.Integer> requireCountList_ = java.util.Collections.emptyList();
      private void ensureRequireCountListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          requireCountList_ = new java.util.ArrayList<java.lang.Integer>(requireCountList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 requireCountList = 7;</code>
       *
       * <pre>
       * 进阶需求道具数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRequireCountListList() {
        return java.util.Collections.unmodifiableList(requireCountList_);
      }
      /**
       * <code>repeated int32 requireCountList = 7;</code>
       *
       * <pre>
       * 进阶需求道具数量
       * </pre>
       */
      public int getRequireCountListCount() {
        return requireCountList_.size();
      }
      /**
       * <code>repeated int32 requireCountList = 7;</code>
       *
       * <pre>
       * 进阶需求道具数量
       * </pre>
       */
      public int getRequireCountList(int index) {
        return requireCountList_.get(index);
      }
      /**
       * <code>repeated int32 requireCountList = 7;</code>
       *
       * <pre>
       * 进阶需求道具数量
       * </pre>
       */
      public Builder setRequireCountList(
          int index, int value) {
        ensureRequireCountListIsMutable();
        requireCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireCountList = 7;</code>
       *
       * <pre>
       * 进阶需求道具数量
       * </pre>
       */
      public Builder addRequireCountList(int value) {
        ensureRequireCountListIsMutable();
        requireCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireCountList = 7;</code>
       *
       * <pre>
       * 进阶需求道具数量
       * </pre>
       */
      public Builder addAllRequireCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRequireCountListIsMutable();
        super.addAll(values, requireCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 requireCountList = 7;</code>
       *
       * <pre>
       * 进阶需求道具数量
       * </pre>
       */
      public Builder clearRequireCountList() {
        requireCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // required int32 requireMoneyId = 8;
      private int requireMoneyId_ ;
      /**
       * <code>required int32 requireMoneyId = 8;</code>
       *
       * <pre>
       * 进阶需要货币类型
       * </pre>
       */
      public boolean hasRequireMoneyId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 requireMoneyId = 8;</code>
       *
       * <pre>
       * 进阶需要货币类型
       * </pre>
       */
      public int getRequireMoneyId() {
        return requireMoneyId_;
      }
      /**
       * <code>required int32 requireMoneyId = 8;</code>
       *
       * <pre>
       * 进阶需要货币类型
       * </pre>
       */
      public Builder setRequireMoneyId(int value) {
        bitField0_ |= 0x00000080;
        requireMoneyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyId = 8;</code>
       *
       * <pre>
       * 进阶需要货币类型
       * </pre>
       */
      public Builder clearRequireMoneyId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        requireMoneyId_ = 0;
        onChanged();
        return this;
      }

      // required int32 requireMoneyCount = 9;
      private int requireMoneyCount_ ;
      /**
       * <code>required int32 requireMoneyCount = 9;</code>
       *
       * <pre>
       * 进阶需要货币数量
       * </pre>
       */
      public boolean hasRequireMoneyCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 requireMoneyCount = 9;</code>
       *
       * <pre>
       * 进阶需要货币数量
       * </pre>
       */
      public int getRequireMoneyCount() {
        return requireMoneyCount_;
      }
      /**
       * <code>required int32 requireMoneyCount = 9;</code>
       *
       * <pre>
       * 进阶需要货币数量
       * </pre>
       */
      public Builder setRequireMoneyCount(int value) {
        bitField0_ |= 0x00000100;
        requireMoneyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requireMoneyCount = 9;</code>
       *
       * <pre>
       * 进阶需要货币数量
       * </pre>
       */
      public Builder clearRequireMoneyCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        requireMoneyCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 nextLevel = 10;
      private int nextLevel_ ;
      /**
       * <code>required int32 nextLevel = 10;</code>
       *
       * <pre>
       * 下一级
       * </pre>
       */
      public boolean hasNextLevel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 nextLevel = 10;</code>
       *
       * <pre>
       * 下一级
       * </pre>
       */
      public int getNextLevel() {
        return nextLevel_;
      }
      /**
       * <code>required int32 nextLevel = 10;</code>
       *
       * <pre>
       * 下一级
       * </pre>
       */
      public Builder setNextLevel(int value) {
        bitField0_ |= 0x00000200;
        nextLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nextLevel = 10;</code>
       *
       * <pre>
       * 下一级
       * </pre>
       */
      public Builder clearNextLevel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        nextLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EquipmentGrade)
    }

    static {
      defaultInstance = new EquipmentGrade(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EquipmentGrade)
  }

  public interface SlotTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 插槽id
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 插槽id
     * </pre>
     */
    int getKeyId();

    // required string desc = 2;
    /**
     * <code>required string desc = 2;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 2;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 2;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // repeated int32 pluginTypeList = 3;
    /**
     * <code>repeated int32 pluginTypeList = 3;</code>
     *
     * <pre>
     * 可装备插件类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getPluginTypeListList();
    /**
     * <code>repeated int32 pluginTypeList = 3;</code>
     *
     * <pre>
     * 可装备插件类型
     * </pre>
     */
    int getPluginTypeListCount();
    /**
     * <code>repeated int32 pluginTypeList = 3;</code>
     *
     * <pre>
     * 可装备插件类型
     * </pre>
     */
    int getPluginTypeList(int index);
  }
  /**
   * Protobuf type {@code SlotType}
   */
  public static final class SlotType extends
      com.google.protobuf.GeneratedMessage
      implements SlotTypeOrBuilder {
    // Use SlotType.newBuilder() to construct.
    private SlotType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SlotType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SlotType defaultInstance;
    public static SlotType getDefaultInstance() {
      return defaultInstance;
    }

    public SlotType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SlotType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              desc_ = input.readBytes();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                pluginTypeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              pluginTypeList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                pluginTypeList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                pluginTypeList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          pluginTypeList_ = java.util.Collections.unmodifiableList(pluginTypeList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_SlotType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_SlotType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.EquipmentProbuf.SlotType.class, com.cwa.prototype.protobuf.EquipmentProbuf.SlotType.Builder.class);
    }

    public static com.google.protobuf.Parser<SlotType> PARSER =
        new com.google.protobuf.AbstractParser<SlotType>() {
      public SlotType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SlotType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SlotType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 插槽id
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * 插槽id
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string desc = 2;
    public static final int DESC_FIELD_NUMBER = 2;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 2;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string desc = 2;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 2;</code>
     *
     * <pre>
     * 说明文字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 pluginTypeList = 3;
    public static final int PLUGINTYPELIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> pluginTypeList_;
    /**
     * <code>repeated int32 pluginTypeList = 3;</code>
     *
     * <pre>
     * 可装备插件类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPluginTypeListList() {
      return pluginTypeList_;
    }
    /**
     * <code>repeated int32 pluginTypeList = 3;</code>
     *
     * <pre>
     * 可装备插件类型
     * </pre>
     */
    public int getPluginTypeListCount() {
      return pluginTypeList_.size();
    }
    /**
     * <code>repeated int32 pluginTypeList = 3;</code>
     *
     * <pre>
     * 可装备插件类型
     * </pre>
     */
    public int getPluginTypeList(int index) {
      return pluginTypeList_.get(index);
    }

    private void initFields() {
      keyId_ = 0;
      desc_ = "";
      pluginTypeList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDescBytes());
      }
      for (int i = 0; i < pluginTypeList_.size(); i++) {
        output.writeInt32(3, pluginTypeList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDescBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pluginTypeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pluginTypeList_.get(i));
        }
        size += dataSize;
        size += 1 * getPluginTypeListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.EquipmentProbuf.SlotType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SlotType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.EquipmentProbuf.SlotTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_SlotType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_SlotType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.EquipmentProbuf.SlotType.class, com.cwa.prototype.protobuf.EquipmentProbuf.SlotType.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.EquipmentProbuf.SlotType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        pluginTypeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.internal_static_SlotType_descriptor;
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.SlotType getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.EquipmentProbuf.SlotType.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.SlotType build() {
        com.cwa.prototype.protobuf.EquipmentProbuf.SlotType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.EquipmentProbuf.SlotType buildPartial() {
        com.cwa.prototype.protobuf.EquipmentProbuf.SlotType result = new com.cwa.prototype.protobuf.EquipmentProbuf.SlotType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.desc_ = desc_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          pluginTypeList_ = java.util.Collections.unmodifiableList(pluginTypeList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.pluginTypeList_ = pluginTypeList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.EquipmentProbuf.SlotType) {
          return mergeFrom((com.cwa.prototype.protobuf.EquipmentProbuf.SlotType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.EquipmentProbuf.SlotType other) {
        if (other == com.cwa.prototype.protobuf.EquipmentProbuf.SlotType.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000002;
          desc_ = other.desc_;
          onChanged();
        }
        if (!other.pluginTypeList_.isEmpty()) {
          if (pluginTypeList_.isEmpty()) {
            pluginTypeList_ = other.pluginTypeList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePluginTypeListIsMutable();
            pluginTypeList_.addAll(other.pluginTypeList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.EquipmentProbuf.SlotType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.EquipmentProbuf.SlotType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 插槽id
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 插槽id
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 插槽id
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * 插槽id
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string desc = 2;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 2;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string desc = 2;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 2;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 2;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 2;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 2;</code>
       *
       * <pre>
       * 说明文字
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        desc_ = value;
        onChanged();
        return this;
      }

      // repeated int32 pluginTypeList = 3;
      private java.util.List<java.lang.Integer> pluginTypeList_ = java.util.Collections.emptyList();
      private void ensurePluginTypeListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          pluginTypeList_ = new java.util.ArrayList<java.lang.Integer>(pluginTypeList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 pluginTypeList = 3;</code>
       *
       * <pre>
       * 可装备插件类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPluginTypeListList() {
        return java.util.Collections.unmodifiableList(pluginTypeList_);
      }
      /**
       * <code>repeated int32 pluginTypeList = 3;</code>
       *
       * <pre>
       * 可装备插件类型
       * </pre>
       */
      public int getPluginTypeListCount() {
        return pluginTypeList_.size();
      }
      /**
       * <code>repeated int32 pluginTypeList = 3;</code>
       *
       * <pre>
       * 可装备插件类型
       * </pre>
       */
      public int getPluginTypeList(int index) {
        return pluginTypeList_.get(index);
      }
      /**
       * <code>repeated int32 pluginTypeList = 3;</code>
       *
       * <pre>
       * 可装备插件类型
       * </pre>
       */
      public Builder setPluginTypeList(
          int index, int value) {
        ensurePluginTypeListIsMutable();
        pluginTypeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pluginTypeList = 3;</code>
       *
       * <pre>
       * 可装备插件类型
       * </pre>
       */
      public Builder addPluginTypeList(int value) {
        ensurePluginTypeListIsMutable();
        pluginTypeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pluginTypeList = 3;</code>
       *
       * <pre>
       * 可装备插件类型
       * </pre>
       */
      public Builder addAllPluginTypeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePluginTypeListIsMutable();
        super.addAll(values, pluginTypeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pluginTypeList = 3;</code>
       *
       * <pre>
       * 可装备插件类型
       * </pre>
       */
      public Builder clearPluginTypeList() {
        pluginTypeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SlotType)
    }

    static {
      defaultInstance = new SlotType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SlotType)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Equipment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Equipment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EquipmentGrade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EquipmentGrade_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SlotType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SlotType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025EquipmentProbuf.proto\"\227\001\n\tEquipment\022\r\n" +
      "\005keyId\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\014\n\004desc\030\003 \002(\t" +
      "\022\031\n\021equipmentposition\030\004 \002(\005\022\024\n\014slotTypeL" +
      "ist\030\005 \003(\005\022\027\n\017updateGoldRatio\030\006 \002(\005\022\025\n\req" +
      "uipmentIcon\030\007 \002(\t\"\355\001\n\016EquipmentGrade\022\r\n\005" +
      "keyId\030\001 \002(\005\022\017\n\007quality\030\002 \002(\005\022\020\n\010levelMax" +
      "\030\003 \002(\005\022\027\n\017attributeIdList\030\004 \003(\005\022\027\n\017coeff" +
      "icientList\030\005 \003(\005\022\027\n\017requireItemList\030\006 \003(" +
      "\005\022\030\n\020requireCountList\030\007 \003(\005\022\026\n\016requireMo" +
      "neyId\030\010 \002(\005\022\031\n\021requireMoneyCount\030\t \002(\005\022\021",
      "\n\tnextLevel\030\n \002(\005\"?\n\010SlotType\022\r\n\005keyId\030\001" +
      " \002(\005\022\014\n\004desc\030\002 \002(\t\022\026\n\016pluginTypeList\030\003 \003" +
      "(\005B-\n\032com.cwa.prototype.protobufB\017Equipm" +
      "entProbuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Equipment_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Equipment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Equipment_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Desc", "Equipmentposition", "SlotTypeList", "UpdateGoldRatio", "EquipmentIcon", });
          internal_static_EquipmentGrade_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_EquipmentGrade_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EquipmentGrade_descriptor,
              new java.lang.String[] { "KeyId", "Quality", "LevelMax", "AttributeIdList", "CoefficientList", "RequireItemList", "RequireCountList", "RequireMoneyId", "RequireMoneyCount", "NextLevel", });
          internal_static_SlotType_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_SlotType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SlotType_descriptor,
              new java.lang.String[] { "KeyId", "Desc", "PluginTypeList", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
