// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GamecdProbuf.proto

package com.cwa.prototype.protobuf;

public final class GamecdProbuf {
  private GamecdProbuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GameCDOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 keyId = 1;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * cd的key
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * cd的key
     * </pre>
     */
    int getKeyId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * cd名
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * cd名
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * cd名
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string describe = 3;
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * cd说明
     * </pre>
     */
    boolean hasDescribe();
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * cd说明
     * </pre>
     */
    java.lang.String getDescribe();
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * cd说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescribeBytes();

    // required int32 cdTime = 4;
    /**
     * <code>required int32 cdTime = 4;</code>
     *
     * <pre>
     * cd时间（秒）
     * </pre>
     */
    boolean hasCdTime();
    /**
     * <code>required int32 cdTime = 4;</code>
     *
     * <pre>
     * cd时间（秒）
     * </pre>
     */
    int getCdTime();

    // required int32 startTime = 5;
    /**
     * <code>required int32 startTime = 5;</code>
     *
     * <pre>
     * 起始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int32 startTime = 5;</code>
     *
     * <pre>
     * 起始时间
     * </pre>
     */
    int getStartTime();

    // required int32 isSave = 6;
    /**
     * <code>required int32 isSave = 6;</code>
     *
     * <pre>
     * cd是否存入db
     * </pre>
     */
    boolean hasIsSave();
    /**
     * <code>required int32 isSave = 6;</code>
     *
     * <pre>
     * cd是否存入db
     * </pre>
     */
    int getIsSave();

    // required int32 cdHandlerType = 7;
    /**
     * <code>required int32 cdHandlerType = 7;</code>
     *
     * <pre>
     * cd处理类型（1从cd重置算起，2从指定间隔时间算）
     * </pre>
     */
    boolean hasCdHandlerType();
    /**
     * <code>required int32 cdHandlerType = 7;</code>
     *
     * <pre>
     * cd处理类型（1从cd重置算起，2从指定间隔时间算）
     * </pre>
     */
    int getCdHandlerType();
  }
  /**
   * Protobuf type {@code GameCD}
   */
  public static final class GameCD extends
      com.google.protobuf.GeneratedMessage
      implements GameCDOrBuilder {
    // Use GameCD.newBuilder() to construct.
    private GameCD(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameCD(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameCD defaultInstance;
    public static GameCD getDefaultInstance() {
      return defaultInstance;
    }

    public GameCD getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameCD(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              describe_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cdTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              startTime_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isSave_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              cdHandlerType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.prototype.protobuf.GamecdProbuf.internal_static_GameCD_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.prototype.protobuf.GamecdProbuf.internal_static_GameCD_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.prototype.protobuf.GamecdProbuf.GameCD.class, com.cwa.prototype.protobuf.GamecdProbuf.GameCD.Builder.class);
    }

    public static com.google.protobuf.Parser<GameCD> PARSER =
        new com.google.protobuf.AbstractParser<GameCD>() {
      public GameCD parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameCD(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameCD> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 keyId = 1;
    public static final int KEYID_FIELD_NUMBER = 1;
    private int keyId_;
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * cd的key
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keyId = 1;</code>
     *
     * <pre>
     * cd的key
     * </pre>
     */
    public int getKeyId() {
      return keyId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * cd名
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * cd名
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * cd名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string describe = 3;
    public static final int DESCRIBE_FIELD_NUMBER = 3;
    private java.lang.Object describe_;
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * cd说明
     * </pre>
     */
    public boolean hasDescribe() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * cd说明
     * </pre>
     */
    public java.lang.String getDescribe() {
      java.lang.Object ref = describe_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          describe_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string describe = 3;</code>
     *
     * <pre>
     * cd说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescribeBytes() {
      java.lang.Object ref = describe_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        describe_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 cdTime = 4;
    public static final int CDTIME_FIELD_NUMBER = 4;
    private int cdTime_;
    /**
     * <code>required int32 cdTime = 4;</code>
     *
     * <pre>
     * cd时间（秒）
     * </pre>
     */
    public boolean hasCdTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 cdTime = 4;</code>
     *
     * <pre>
     * cd时间（秒）
     * </pre>
     */
    public int getCdTime() {
      return cdTime_;
    }

    // required int32 startTime = 5;
    public static final int STARTTIME_FIELD_NUMBER = 5;
    private int startTime_;
    /**
     * <code>required int32 startTime = 5;</code>
     *
     * <pre>
     * 起始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 startTime = 5;</code>
     *
     * <pre>
     * 起始时间
     * </pre>
     */
    public int getStartTime() {
      return startTime_;
    }

    // required int32 isSave = 6;
    public static final int ISSAVE_FIELD_NUMBER = 6;
    private int isSave_;
    /**
     * <code>required int32 isSave = 6;</code>
     *
     * <pre>
     * cd是否存入db
     * </pre>
     */
    public boolean hasIsSave() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 isSave = 6;</code>
     *
     * <pre>
     * cd是否存入db
     * </pre>
     */
    public int getIsSave() {
      return isSave_;
    }

    // required int32 cdHandlerType = 7;
    public static final int CDHANDLERTYPE_FIELD_NUMBER = 7;
    private int cdHandlerType_;
    /**
     * <code>required int32 cdHandlerType = 7;</code>
     *
     * <pre>
     * cd处理类型（1从cd重置算起，2从指定间隔时间算）
     * </pre>
     */
    public boolean hasCdHandlerType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 cdHandlerType = 7;</code>
     *
     * <pre>
     * cd处理类型（1从cd重置算起，2从指定间隔时间算）
     * </pre>
     */
    public int getCdHandlerType() {
      return cdHandlerType_;
    }

    private void initFields() {
      keyId_ = 0;
      name_ = "";
      describe_ = "";
      cdTime_ = 0;
      startTime_ = 0;
      isSave_ = 0;
      cdHandlerType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDescribe()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCdTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsSave()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCdHandlerType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescribeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, cdTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, startTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, isSave_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, cdHandlerType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescribeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cdTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, startTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, isSave_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cdHandlerType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.prototype.protobuf.GamecdProbuf.GameCD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.prototype.protobuf.GamecdProbuf.GameCD prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameCD}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.prototype.protobuf.GamecdProbuf.GameCDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.prototype.protobuf.GamecdProbuf.internal_static_GameCD_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.prototype.protobuf.GamecdProbuf.internal_static_GameCD_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.prototype.protobuf.GamecdProbuf.GameCD.class, com.cwa.prototype.protobuf.GamecdProbuf.GameCD.Builder.class);
      }

      // Construct using com.cwa.prototype.protobuf.GamecdProbuf.GameCD.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        describe_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        cdTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        startTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        isSave_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        cdHandlerType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.prototype.protobuf.GamecdProbuf.internal_static_GameCD_descriptor;
      }

      public com.cwa.prototype.protobuf.GamecdProbuf.GameCD getDefaultInstanceForType() {
        return com.cwa.prototype.protobuf.GamecdProbuf.GameCD.getDefaultInstance();
      }

      public com.cwa.prototype.protobuf.GamecdProbuf.GameCD build() {
        com.cwa.prototype.protobuf.GamecdProbuf.GameCD result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.prototype.protobuf.GamecdProbuf.GameCD buildPartial() {
        com.cwa.prototype.protobuf.GamecdProbuf.GameCD result = new com.cwa.prototype.protobuf.GamecdProbuf.GameCD(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.describe_ = describe_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cdTime_ = cdTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isSave_ = isSave_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.cdHandlerType_ = cdHandlerType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.prototype.protobuf.GamecdProbuf.GameCD) {
          return mergeFrom((com.cwa.prototype.protobuf.GamecdProbuf.GameCD)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.prototype.protobuf.GamecdProbuf.GameCD other) {
        if (other == com.cwa.prototype.protobuf.GamecdProbuf.GameCD.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescribe()) {
          bitField0_ |= 0x00000004;
          describe_ = other.describe_;
          onChanged();
        }
        if (other.hasCdTime()) {
          setCdTime(other.getCdTime());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasIsSave()) {
          setIsSave(other.getIsSave());
        }
        if (other.hasCdHandlerType()) {
          setCdHandlerType(other.getCdHandlerType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDescribe()) {
          
          return false;
        }
        if (!hasCdTime()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasIsSave()) {
          
          return false;
        }
        if (!hasCdHandlerType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.prototype.protobuf.GamecdProbuf.GameCD parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.prototype.protobuf.GamecdProbuf.GameCD) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 keyId = 1;
      private int keyId_ ;
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * cd的key
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * cd的key
       * </pre>
       */
      public int getKeyId() {
        return keyId_;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * cd的key
       * </pre>
       */
      public Builder setKeyId(int value) {
        bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 keyId = 1;</code>
       *
       * <pre>
       * cd的key
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * cd名
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * cd名
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * cd名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * cd名
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * cd名
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * cd名
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string describe = 3;
      private java.lang.Object describe_ = "";
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * cd说明
       * </pre>
       */
      public boolean hasDescribe() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * cd说明
       * </pre>
       */
      public java.lang.String getDescribe() {
        java.lang.Object ref = describe_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          describe_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * cd说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescribeBytes() {
        java.lang.Object ref = describe_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          describe_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * cd说明
       * </pre>
       */
      public Builder setDescribe(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        describe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * cd说明
       * </pre>
       */
      public Builder clearDescribe() {
        bitField0_ = (bitField0_ & ~0x00000004);
        describe_ = getDefaultInstance().getDescribe();
        onChanged();
        return this;
      }
      /**
       * <code>required string describe = 3;</code>
       *
       * <pre>
       * cd说明
       * </pre>
       */
      public Builder setDescribeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        describe_ = value;
        onChanged();
        return this;
      }

      // required int32 cdTime = 4;
      private int cdTime_ ;
      /**
       * <code>required int32 cdTime = 4;</code>
       *
       * <pre>
       * cd时间（秒）
       * </pre>
       */
      public boolean hasCdTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 cdTime = 4;</code>
       *
       * <pre>
       * cd时间（秒）
       * </pre>
       */
      public int getCdTime() {
        return cdTime_;
      }
      /**
       * <code>required int32 cdTime = 4;</code>
       *
       * <pre>
       * cd时间（秒）
       * </pre>
       */
      public Builder setCdTime(int value) {
        bitField0_ |= 0x00000008;
        cdTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cdTime = 4;</code>
       *
       * <pre>
       * cd时间（秒）
       * </pre>
       */
      public Builder clearCdTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cdTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 startTime = 5;
      private int startTime_ ;
      /**
       * <code>required int32 startTime = 5;</code>
       *
       * <pre>
       * 起始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 startTime = 5;</code>
       *
       * <pre>
       * 起始时间
       * </pre>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int32 startTime = 5;</code>
       *
       * <pre>
       * 起始时间
       * </pre>
       */
      public Builder setStartTime(int value) {
        bitField0_ |= 0x00000010;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 startTime = 5;</code>
       *
       * <pre>
       * 起始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        startTime_ = 0;
        onChanged();
        return this;
      }

      // required int32 isSave = 6;
      private int isSave_ ;
      /**
       * <code>required int32 isSave = 6;</code>
       *
       * <pre>
       * cd是否存入db
       * </pre>
       */
      public boolean hasIsSave() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 isSave = 6;</code>
       *
       * <pre>
       * cd是否存入db
       * </pre>
       */
      public int getIsSave() {
        return isSave_;
      }
      /**
       * <code>required int32 isSave = 6;</code>
       *
       * <pre>
       * cd是否存入db
       * </pre>
       */
      public Builder setIsSave(int value) {
        bitField0_ |= 0x00000020;
        isSave_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 isSave = 6;</code>
       *
       * <pre>
       * cd是否存入db
       * </pre>
       */
      public Builder clearIsSave() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isSave_ = 0;
        onChanged();
        return this;
      }

      // required int32 cdHandlerType = 7;
      private int cdHandlerType_ ;
      /**
       * <code>required int32 cdHandlerType = 7;</code>
       *
       * <pre>
       * cd处理类型（1从cd重置算起，2从指定间隔时间算）
       * </pre>
       */
      public boolean hasCdHandlerType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 cdHandlerType = 7;</code>
       *
       * <pre>
       * cd处理类型（1从cd重置算起，2从指定间隔时间算）
       * </pre>
       */
      public int getCdHandlerType() {
        return cdHandlerType_;
      }
      /**
       * <code>required int32 cdHandlerType = 7;</code>
       *
       * <pre>
       * cd处理类型（1从cd重置算起，2从指定间隔时间算）
       * </pre>
       */
      public Builder setCdHandlerType(int value) {
        bitField0_ |= 0x00000040;
        cdHandlerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cdHandlerType = 7;</code>
       *
       * <pre>
       * cd处理类型（1从cd重置算起，2从指定间隔时间算）
       * </pre>
       */
      public Builder clearCdHandlerType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cdHandlerType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameCD)
    }

    static {
      defaultInstance = new GameCD(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameCD)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameCD_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameCD_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022GamecdProbuf.proto\"\201\001\n\006GameCD\022\r\n\005keyId" +
      "\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\020\n\010describe\030\003 \002(\t\022\016" +
      "\n\006cdTime\030\004 \002(\005\022\021\n\tstartTime\030\005 \002(\005\022\016\n\006isS" +
      "ave\030\006 \002(\005\022\025\n\rcdHandlerType\030\007 \002(\005B*\n\032com." +
      "cwa.prototype.protobufB\014GamecdProbuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_GameCD_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_GameCD_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameCD_descriptor,
              new java.lang.String[] { "KeyId", "Name", "Describe", "CdTime", "StartTime", "IsSave", "CdHandlerType", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
